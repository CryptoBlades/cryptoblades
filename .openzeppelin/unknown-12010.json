{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2Eef0031D5c42b90d3c7Ecb310aC15F9E5BeCF2B",
    "txHash": "0xbf1bb2e423ef23b44273bfbddf39c4cf36a2174e1ba0afb9499a9d489a9cd120"
  },
  "proxies": [
    {
      "address": "0xb2f938D09DB13A26dD1E0BA521F7f69A6b2f3cD4",
      "txHash": "0x6a9917c260c4878852f537305999158018b496ae2081e35c0695f14e41361b47",
      "kind": "transparent"
    },
    {
      "address": "0xbF7e1986331ceDC83Ac183C19Db75aE24Da7F9A2",
      "txHash": "0x2e1859eb9233a228191fffc15f210b23ad06e376400e486eaded7dc60ec49392",
      "kind": "transparent"
    },
    {
      "address": "0xc109ABBa79Ea93cB2Caf9Dc58176A02E4A7C0a28",
      "txHash": "0x923716614103cc7054a0d718b9373cee9a691515effc07cc3b5545990376e070",
      "kind": "transparent"
    },
    {
      "address": "0x57d48C412b61Cacd6f15FDe556fFc32bA09f7e4B",
      "txHash": "0xbc5ec4a6b49117d7348b654201a9068a7c72a555e645d5a77482ced86df96709",
      "kind": "transparent"
    },
    {
      "address": "0x7b7A44029D51e93EcdBE7A4AC205CC4a5941BCC9",
      "txHash": "0x0e5eba97d02b6d34aaf120874e1544d548593de35b10ceeae2b79495fa0c1288",
      "kind": "transparent"
    },
    {
      "address": "0x89DE5Bf7517A736BB29c7a4C6e3425440C24C030",
      "txHash": "0xadc46c20d15df85146a4a4fa39b44584d20e53858d4afd159918ed903abf313d",
      "kind": "transparent"
    },
    {
      "address": "0x67a1C133606cb013F4Ba7eC309f7D1563c8505F1",
      "txHash": "0xbf182aae94725b8016ab5f75f6d5b624c13f15fb134e7fba156c96639af8bf16",
      "kind": "transparent"
    },
    {
      "address": "0x386928E42b61ce1a11D98ECaC37A8f3FF6fB0FF0",
      "txHash": "0x28256f1325cc00437d06fe0436b79f89699c890fa6da4c0dc306a2f61c9f3659",
      "kind": "transparent"
    },
    {
      "address": "0xf99898F9A42171AF6C2509c551e2B9D3098CC8C2",
      "txHash": "0xcce8b766963d5ba712305efb9f9d30e878826e3d72653ce445e29323733bc636",
      "kind": "transparent"
    },
    {
      "address": "0x0832Ab8b10d74F672C88384e07aC4191a0118a17",
      "txHash": "0x6f0c39f8ec330fe99c4e606eac1f8dc3c036dfec258ec16a3b80b28495ee492d",
      "kind": "transparent"
    },
    {
      "address": "0xCbC23E733FC997741cBD5c43eDb821A492882813",
      "txHash": "0x6d975bea2305e4c08f16c2e05f55fb0747d8ce44abf2d1e249293f6ea400a3dd",
      "kind": "transparent"
    },
    {
      "address": "0xCfaF75E5365D9136b78cfB0e4a8989fc1d4f93Df",
      "txHash": "0xed4e7c402fb61629000d7b8ee2fb64cfe26bcc0d14222b3da112a05977387a08",
      "kind": "transparent"
    },
    {
      "address": "0x64122869513271312064283A2937B8c22Ff42Bc8",
      "txHash": "0xa1cadc6c57333bd0feafcd963fd4770c816550fdcebc8eb5a124b44560bc024d",
      "kind": "transparent"
    },
    {
      "address": "0x9155D062247D2dA32635B30B730EC2917294d579",
      "txHash": "0x0fafcf8fd2d6173547440262563e75d16b43acb5c901c2825bb877107741acd1",
      "kind": "transparent"
    },
    {
      "address": "0x4eaF22bBFAa44d50DAEf1d8aeE82C925dF7305E7",
      "txHash": "0xaf15b1619f05d0aca3d1647742683b5643fa60322482b62e050ba4254606aea5",
      "kind": "transparent"
    },
    {
      "address": "0x7405c0f785F0fAA34CC0d40D4d8ae2A266439d92",
      "txHash": "0xb5cf2c4a538928c90d3ade719ebaa64a80bf1b0cc0660177e6f8de46207e8721",
      "kind": "transparent"
    },
    {
      "address": "0xf075aaE6c45b5fDB47Af0CAe0904B6Cb78F2A38F",
      "txHash": "0x136a258027c6700ab7fe65056227cfc74a9579c502fea18dbc5cbd7d89521a0c",
      "kind": "transparent"
    },
    {
      "address": "0x699c97012ED693188C4aA3423cd1DA87a9C45930",
      "txHash": "0x8e8698bea6560cadc1a0ea38dbef38124a695c4744781bc30b9b4d47f12d3bb3",
      "kind": "transparent"
    },
    {
      "address": "0x881ef6d12205Ac5E3d90361A9B3b8566e5a6d03F",
      "txHash": "0x7c3d293f97d601f2c53cf1d7e936278d78064af374fb7346cb87ecacc2e4319a",
      "kind": "transparent"
    },
    {
      "address": "0xFB54d957068210847A77FAA4824A2281C411211E",
      "txHash": "0xe7c97ee496d522e4f8d35a726e2d4c2a144d2dcf69d09791f71b30bdbc5740af",
      "kind": "transparent"
    },
    {
      "address": "0xCa58A757dB279C97B12Abf334221eadCa0fdf732",
      "txHash": "0xf687d457051bb806b38b7385f123be7db5bbb35c76780185e099d9c2a3a6a0d8",
      "kind": "transparent"
    },
    {
      "address": "0x804Ca8445DC57187e71BE7F5Bce241a8f89AAB8D",
      "txHash": "0x4818b2734329aeabb7e22c9351c28b05e8edf17993e83d421e2f2fd05a6e817e",
      "kind": "transparent"
    },
    {
      "address": "0x862ba3A43AAEd17cE672eac6659712934b55bcC4",
      "txHash": "0x6a450947c310cb52078e5ec442e471178bda8e4609c52976b10263a7dc3f587d",
      "kind": "transparent"
    },
    {
      "address": "0x8c7C7bc9859D2f6D794014fA0cF0891c199b8AF2",
      "txHash": "0x7372f21b4f57f8c3fa8c493632b6cf560c922d28cd03ebf9f6b30fdd62ffcf71",
      "kind": "transparent"
    },
    {
      "address": "0xBe6F559Fec475ea80Cf302743a3FADC4480bC5AA",
      "txHash": "0x55217deea218553c8d22351c38d0197fdb4c63cd3b2538fdde4f37ab884e569c",
      "kind": "transparent"
    },
    {
      "address": "0xdd30E361f2dCc82ABfB8bA3cD0d5dD910180D52d",
      "txHash": "0x9d1b8ae88bf4f8af77cd868cbb7f38b3925b9960caa1c64c788a4e1069c614c1",
      "kind": "transparent"
    },
    {
      "address": "0xE7c68F14B8e2b6503E57D2703390A4dbD550F70E",
      "txHash": "0xd5532cde4aa7d38a78b8599b9beb4c2e4d93a6f365193b7ea7d383e26b0d00d9",
      "kind": "transparent"
    },
    {
      "address": "0x9122732e73330fF7293d87B712cC6D567757a52A",
      "txHash": "0x2a7971627410d8f97df76997e042efefa146e25bd0d7991d60231e2c477fdeab",
      "kind": "transparent"
    },
    {
      "address": "0x52fd8815f0C28B022b0F80a9349739efe61c741a",
      "txHash": "0x73366462a11a2340619b32ab06f57c69e6ba8a9114174b2731f2dd725c563260",
      "kind": "transparent"
    },
    {
      "address": "0xDeD80041B080D9e79D4a86A0713Bba29c60DBA05",
      "txHash": "0xb7c8314591b341be1a6d753b72a333b33373f871f016138c11530e81bae19d30",
      "kind": "transparent"
    },
    {
      "address": "0xf5066a3eF1CD7E66BcD70223027c4b653495CC50",
      "txHash": "0x4ff6c21b73487ffa6ef888443ae3f8fe6f5b9bbaba9bb7897d773b1c0afb5065",
      "kind": "transparent"
    },
    {
      "address": "0x93724CdCEA7f1f75ae16C624dBb015dF9C7E3AE0",
      "txHash": "0xcca0013c53cae6e0e3361d6dd95b867f0c4214b7f5406019f3a34a5c9a90f356",
      "kind": "transparent"
    },
    {
      "address": "0x9e8d04A6Ce1242A67cbCbB924a4ddfAC9e11B042",
      "txHash": "0xe476fb27969ec2b2a10621b120255b78d69453a9f1f522bcba9d4e17c8fbb314",
      "kind": "transparent"
    },
    {
      "address": "0xc9Fd292d8e72ce4760B478e56f8fa9C1DC67C46d",
      "txHash": "0x92cd607befb435455bead2d7147f2cd3ed685789fa4a1e6a1002136276048a37",
      "kind": "transparent"
    },
    {
      "address": "0x3090E1D24Cd53A8b9fdDB55A1b773AB1452aa0c2",
      "txHash": "0x401313151d5731df84e92ec1a6c85b826b47d2dd3f87bc74d4c3915118a12a53",
      "kind": "transparent"
    },
    {
      "address": "0xfbA8a4B467B927b560b054b9A54B43ef4249dEa4",
      "txHash": "0xb809c57a14a324eb1da82e32db05b4f4759454262a2c8ebf78797cda100aa622",
      "kind": "transparent"
    },
    {
      "address": "0x977e938687fcf09c16C71A3d851bDCa7b1738563",
      "txHash": "0xc4b06ac0fecd26df321efee5520d06ba260316205e0f87668e45a9b2cf04014c",
      "kind": "transparent"
    },
    {
      "address": "0x8ff33399e82Bf3b720DEED121e10Ce38626028bf",
      "txHash": "0x7e2a3be8a902bfa35644d5ce217c68b45d12ba21700240421fd0924cb6c79a32",
      "kind": "transparent"
    },
    {
      "address": "0x4b4A7C2106973e8CE7C3d29bFD37CDFC8A302870",
      "txHash": "0xdf622a7298fbcfcb2ad57b8791a16b164c849b3327325bd9d79f3d6e489a8176",
      "kind": "transparent"
    },
    {
      "address": "0xcf70c53Df6676BF6dC27c012222e65B2e2e6E954",
      "txHash": "0x12e4e79338cc736d527e1c27e92bfa9c85881037ef7d20f7f094c643a88236f4",
      "kind": "transparent"
    },
    {
      "address": "0x8c5D687E77CEC47D17eC421941D4ABA757b02798",
      "txHash": "0xd4709d9c4821fe8a1dab784350103bd7f007b051e61cf15245cc66c8b3a524d7",
      "kind": "transparent"
    },
    {
      "address": "0x54ED6B2b538f8eEa1DE90749fce9E874C13A0597",
      "txHash": "0xd3fc99af3017ce69f76f8aa9cd91e8b2d09389d804ef265cff0d3b5ac433a7e3",
      "kind": "transparent"
    },
    {
      "address": "0xdbA56Fbb441768fde196955e51852B5DB6A05496",
      "txHash": "0x96c8efc1baf122957efe21320e6740514d76d4144feaeaa574ba3915ecbfadb3",
      "kind": "transparent"
    },
    {
      "address": "0x77ed710573bC8edEA86114B6e971E302D1C6A115",
      "txHash": "0x3916cc88a3ca075dc2faaa37230bd602f37a7411d4e4c99baa5cde0456f28d6e",
      "kind": "transparent"
    },
    {
      "address": "0xE03e7150526d9b9E2183BBA0EB362ea5456d640c",
      "txHash": "0xf6e48d6a95e1e59039d52c265cf1fc1a94613412c89b976da6c7a88ed2e70b7c",
      "kind": "transparent"
    },
    {
      "address": "0x2aEE2263E3ad2f1aF3E508534A82F12938bC7f13",
      "txHash": "0x94c33a169254d08a7c5b11d4e57874634f6f0b72166c5d80c8ed71b9ae42f3af",
      "kind": "transparent"
    },
    {
      "address": "0xE3000b1a92CDa14c136597424E53590E0730ca9B",
      "txHash": "0xabd4cdd7206e086431329c490dbce4a818bdb7adcf4cbbf75f6801270180b4bd",
      "kind": "transparent"
    },
    {
      "address": "0xD0cA3094B9bBf50f1108686fC715998e322608B6",
      "txHash": "0x7ab26232c2b1ca66604bc788839614bae1321bea3d3dab5c7c573c19677a2031",
      "kind": "transparent"
    },
    {
      "address": "0x3567C5e4368a73115DC5Ba2ecee307B381189535",
      "txHash": "0xa2cb55a936d94634e1a5ca7727150b1c8599cb2c9ef5da9fe169338340532c8f",
      "kind": "transparent"
    },
    {
      "address": "0x8a15Fd15F609F1be795789ff320Ac911aa7294B8",
      "txHash": "0x851ccb622b25e8327f2b97809a83b63eb74780adeed1bc7a8f379a8f4af7a1c6",
      "kind": "transparent"
    },
    {
      "address": "0xd14a3B7cb34af6507C7A156511c07674502c872C",
      "txHash": "0x7fb9dc331255778fa6a65d2426c486625a393f46ca721966f710265dfbd095d9",
      "kind": "transparent"
    },
    {
      "address": "0xf6B39298Faed7D2f22D32FF21e0a65a3a8d7364a",
      "txHash": "0xa1675353497c28a66e212c42efcd1c5f37c18beae9bcbb6d005142b3d6136a09",
      "kind": "transparent"
    },
    {
      "address": "0xf2B819d02e7759E9668A06D49176054c9b2C3BBF",
      "txHash": "0x729eb5b9f6c48f52ac726f73ac63541a3da52eb45a4b000ce49e5c11797fea4f",
      "kind": "transparent"
    },
    {
      "address": "0xB731A95E70e5FF5ABFAA348659A55957B20eA675",
      "txHash": "0x243ded76b160edaaa740569ec1479c2cfd17e0ddd3bfbf4ca532f1b2066fac97",
      "kind": "transparent"
    },
    {
      "address": "0x216B6b08264454F476B6B234069AB18Fcf7740ec",
      "txHash": "0xe5df9a0823bba9b653f8af863cc1f1dec07650d11c1f6e59abf642f82f593142",
      "kind": "transparent"
    },
    {
      "address": "0x69aFA8ea0e1f0fCA5854f7e29609a001baa0A95E",
      "txHash": "0x907b2d9a74c8d9ca91299f0c5be71dcbe406a897431e165db624a276c8e4f3e9",
      "kind": "transparent"
    },
    {
      "address": "0x2E7eBEdb560824D12c53984Dd3b2874c99B67802",
      "txHash": "0xccd2f8b3938a817e930d0591a614eacf93a1ef0b9b560b689a936db9600dd6d6",
      "kind": "transparent"
    },
    {
      "address": "0xF5Df001E6a3991a9F5b4BD1883d4A8C8AB07a675",
      "txHash": "0xefdfd661c78c8660b0b946eb6f348827befa5af734268b61d1f184dce9a4202d",
      "kind": "transparent"
    },
    {
      "address": "0xEf0A368501213E5Fe4dDAEA790E5be781fC89A01",
      "txHash": "0x38bfe23d2c0d424550d5f19031ff40491a062ed64d4950fa57e818edc01bb728",
      "kind": "transparent"
    },
    {
      "address": "0x4a2AEcE306aEbFC191149d85FD33D6Ad37DCBd12",
      "txHash": "0x0dba87789473b6d331d7d7c38c79a48e71bd6c1b915688f3377f363d61ac5f9e",
      "kind": "transparent"
    },
    {
      "address": "0xB33BaAd8D2f544644BA92a6Fc8F1f4A29603Eb46",
      "txHash": "0xb0cab7946aa4d8f1d39fd008e2f0e5f94e9baa7b17f45a386960657416fe877e",
      "kind": "transparent"
    },
    {
      "address": "0x7954465D8c524f6e9fC727F624138B23A517CF05",
      "txHash": "0xeb61081fd799ca2272711d27414cc3eda3149dffe877092232ae712633cfbf70",
      "kind": "transparent"
    },
    {
      "address": "0xE841179A703c243061792B2452Afa44ce61B8F12",
      "txHash": "0xdeca206b508b885c6356db8807fed8f14d36457811757ee1da6513b4d8a1ea81",
      "kind": "transparent"
    },
    {
      "address": "0x4A19808D7747668ea326463c612181EF2f1276cB",
      "txHash": "0xba096444595449444e592522a1555f09ffc271390f98af236131cf283bf150b3",
      "kind": "transparent"
    },
    {
      "address": "0xD1C4F3C9DB7909c0cAb44bFe523be15C367985aD",
      "txHash": "0xe867b4ff9d769100e54da35bcaee6296f8cdcea4ec4bd15aca57d395366ee6bd",
      "kind": "transparent"
    },
    {
      "address": "0xa62F89976BbE6D72861b30db6b14A55969E5ce05",
      "txHash": "0x7d1cc97a9c247b76df58d9789f3c5d53d8ad1ddfadc07f8b4b6d1c7d88e67694",
      "kind": "transparent"
    }
  ],
  "impls": {
    "268db9337bea2a1c8016a8dc7a1341a46e15b2ecb98c2e975ea11f7f43bb050b": {
      "address": "0x751a3813e57e773b9323fd2Ee0c85E6949f9eC5A",
      "txHash": "0xbdb6aea7315e50ae1ff6b8ee976120268d71b93a02299a0e6c84840607d06e87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          },
          {
            "contract": "SkillStakingRewardsUpgradeable",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)39281",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SkillStakingRewardsUpgradeable.sol:12"
          }
        ],
        "types": {
          "t_contract(SpecialWeaponsManager)39281": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dbcec57128abb13bbdcb9e986e2c6b18b5c7dabb0b4fd04d418387a416a0fac7": {
      "address": "0x211873943912d7C13A0C986593ce5fae5E8c7cED",
      "txHash": "0x8a2bf8cadd0b8234903001105bddefb2fa8cb4881bb01d907cd65620dbd74431",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81a7b14bdf59edcfbda5901a3672a21508a9e49744ce9d3a943c701adbc11119": {
      "address": "0x804E901e0409413eB75f98b85F7818e96DEff65B",
      "txHash": "0x3d339040151e22e0f7f3dc4dbf5946c20925d696bbcc062df61f74b88b709387",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "priceSet",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BasicPriceOracle.sol:10"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "currentPrice_",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BasicPriceOracle.sol:11"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65b2a46079ef8109e7e39c72e039842b148f5a41839725c857d5dfc227c3f04e": {
      "address": "0x74df77807f235d5c64539853C86c1b28209F73C3",
      "txHash": "0x210b984767722834add0aaac60f7a6ecba741a0c52af9323dc9424a55e886c5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)42197_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:86"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)42202_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:87"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:91"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:94"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:98"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:99"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:101"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:103"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:104"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:112"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)15161",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "secondsPerStamina",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:130"
          },
          {
            "contract": "Characters",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:132"
          }
        ],
        "types": {
          "t_array(t_struct(Character)42197_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)42197_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)42202_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)42202_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)15161": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0a424974c020a493bd75b01517b4020508bfd244368b557348e3871a5ac2f8c4": {
      "address": "0xA669D20E22655AfDD3882a39b8e4217CA47BC2b0",
      "txHash": "0x201c6f0abfd1a190971a3b0ba60a1a7e300eb48c15ce824dedf896772c8caad9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)59114_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:93"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)59126_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)59121_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:97"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:102"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:108"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:110"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:113"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:118"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:120"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:122"
          },
          {
            "contract": "Weapons",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:124"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)59114_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)59114_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)59126_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)59126_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)59121_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)59121_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b83d7069a35bd52a91c7a074499ee5663eb524b4d0563b9616634a2daed7d82d": {
      "address": "0x13f8e8459c32854BF5EE61c3005E51d24FfBAA00",
      "txHash": "0x074d73d777bdd1459bd00bf63431df97d11d87e03c06cc461c4615d87b48deaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:75"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:76"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:77"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47955",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:78"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)47974",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:79"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:174"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:179"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:184"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:185"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:187"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)47991",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:191"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:193"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1764",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)45048_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:207"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:221"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)45067_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:222"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:224"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:227"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:228"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)39281",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:230"
          },
          {
            "contract": "CryptoBlades",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:231"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)47955": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)47974": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)47991": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1764": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)45048_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)45048_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)45067_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)45067_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)39281": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4c0f0e6fc7c8f3ba20b0a543fd7b958478140b107aaa5486d95ac18cb6c24547": {
      "address": "0xD70dc740f2F412e5c3d261076b45d5d76E00fC92",
      "txHash": "0x23cdf3a62f711c26db103e8600617bfc6ef25f49d289d76ea4f9cf27de1f2341",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "MultiAccessUpgradeable",
            "label": "access",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\multiAccessUpgradeable.sol:8"
          },
          {
            "contract": "Raid",
            "label": "completed",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:17"
          },
          {
            "contract": "Raid",
            "label": "expectedFinishTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:18"
          },
          {
            "contract": "Raid",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:20"
          },
          {
            "contract": "Raid",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:21"
          },
          {
            "contract": "Raid",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:22"
          },
          {
            "contract": "Raid",
            "label": "raiders",
            "type": "t_array(t_struct(Raider)49468_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:30"
          },
          {
            "contract": "Raid",
            "label": "participation",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:31"
          },
          {
            "contract": "RaidBasic",
            "label": "staminaDrain",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:14"
          },
          {
            "contract": "RaidBasic",
            "label": "weaponDrops",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:15"
          },
          {
            "contract": "RaidBasic",
            "label": "bounty",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:16"
          },
          {
            "contract": "RaidBasic",
            "label": "bossTrait",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:17"
          },
          {
            "contract": "RaidBasic",
            "label": "totalPower",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:19"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_array(t_struct(Raider)49468_storage)dyn_storage": {
            "label": "struct Raid.Raider[]"
          },
          "t_struct(Raider)49468_storage": {
            "label": "struct Raid.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_uint256"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "95f758510d4ac618cf362308573cb1756ade60b330a7de18b3e763a1822c2eb4": {
      "address": "0xe9cCDf4321284fFf4d00273b3EfCc35559c6f7ae",
      "txHash": "0x98ca453430a63afd997530cf269473fc2320db3f3cde6f736d5c4839c42a9d74",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTMarket",
            "label": "skillToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:86"
          },
          {
            "contract": "NFTMarket",
            "label": "taxRecipient",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:87"
          },
          {
            "contract": "NFTMarket",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)18814_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:90"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenIDs",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:92"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenTypes",
            "type": "t_struct(AddressSet)69369_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:94"
          },
          {
            "contract": "NFTMarket",
            "label": "isTokenBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:97"
          },
          {
            "contract": "NFTMarket",
            "label": "isUserBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:99"
          },
          {
            "contract": "NFTMarket",
            "label": "tax",
            "type": "t_mapping(t_address,t_int128)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:102"
          },
          {
            "contract": "NFTMarket",
            "label": "freeTax",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:104"
          },
          {
            "contract": "NFTMarket",
            "label": "defaultTax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:105"
          },
          {
            "contract": "NFTMarket",
            "label": "allowedTokenTypes",
            "type": "t_struct(AddressSet)69369_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:108"
          },
          {
            "contract": "NFTMarket",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:110"
          },
          {
            "contract": "NFTMarket",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:111"
          },
          {
            "contract": "NFTMarket",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47955",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:113"
          },
          {
            "contract": "NFTMarket",
            "label": "addFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:114"
          },
          {
            "contract": "NFTMarket",
            "label": "changeFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:115"
          },
          {
            "contract": "NFTMarket",
            "label": "nftTargetBuyers",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:118"
          },
          {
            "contract": "NFTMarket",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2998",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:120"
          }
        ],
        "types": {
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)18814_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarket.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)18814_storage)": {
            "label": "mapping(uint256 => struct NFTMarket.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)18814_storage": {
            "label": "struct NFTMarket.Listing",
            "members": [
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)69490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)69369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_int128)": {
            "label": "mapping(address => int128)"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(IPriceOracle)47955": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(BurningManager)2998": {
            "label": "contract BurningManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1009c3de4d06ffe5f5d5ee4601d916e4c0d6414ddf0237c12a167957eee273e": {
      "address": "0x8fd2eF67C227666345572883B86052Aed5369724",
      "txHash": "0x9022821dc31498e819744bfaebba0de156de2265935dd09588180b5ae4344704",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WaxBridge",
            "label": "latestWaxChainBlockNumberProcessed",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:27"
          },
          {
            "contract": "WaxBridge",
            "label": "totalOwedBnb",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:28"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitPerPeriod",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:29"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:30"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawableBnb",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:31"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawnBnbDuringPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:32"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "498e2a0b3757e479509d6aec2c2acfebb9b98f681a684fb0bae2c243d547bfca": {
      "address": "0x1Ec4e44F56C6FA3841EcDfCc98c8b9EcBE0cad1A",
      "txHash": "0x01ed1eec62a8608f70c0162c7b19dfbd4c301753c9d671642cd5363ad3f4fac3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Promos",
            "label": "bits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Promos.sol:27"
          },
          {
            "contract": "Promos",
            "label": "firstCharacterPromoInGameOnlyFundsGivenInUsd",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Promos.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ed4ca7c8e59553a198610e7d92dc71bb8e635e2155c62c0d1c71d5887925992a": {
      "address": "0x0eE03e49f4084f2931e30c2f48884D137AcC5610",
      "txHash": "0xa8f9f92902238e6ae7b4511bd1cd1301b1e8857221118d52e1ffe8a48cbdef4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:45"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)47974",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:48"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)54482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:50"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:51"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:55"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:58"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:60"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)7377",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:61"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:63"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:64"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:66"
          }
        ],
        "types": {
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)47974": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)54482": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)7377": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f758871d900d68e362f025b56f6aef6d5677bdda98f6acf25f9e76f5eb66aede": {
      "address": "0xC11F2332256B57291527fD4c140441251eBfE251",
      "txHash": "0x8c16471490a6bd6ef9dd2555b61c244ea0aade733c69f341370e87179eb2385f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)52512_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)52517_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:75"
          },
          {
            "contract": "Shields",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:77"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)52512_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)52512_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)52517_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)52517_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5a71bda464eb057b97363461c14823213429810d25dc96133f5e156ebdd93ef3": {
      "address": "0x8FDa2bfD970c110f18E199EF86bC316120e47DdC",
      "txHash": "0x08e84851d81fac29a8f6a09adc7f723455cee7235165f669f29b1280badd8df2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:8"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:10"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:11"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2a94e5476f89e4df095abfa2bf42ee5b09e40238514bc7546cdbe17e48519f3": {
      "address": "0xad0fD806d9a1f197F1b5fF237c0bd3C9aF07Dbb3",
      "txHash": "0xb64f9811e08a3a7c39d9b6f9cf5480221cd7b6840348a79d6d6264575ed35ebf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:8"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:10"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:11"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4322f7eb3a20b3806459092652155a844a07307cdea3231b7e644e90eaf0cc7": {
      "address": "0xEf8b7eF4bBF6D6b6F3b606aF5C2FE447F17573ed",
      "txHash": "0xdee8ef54123ca32369ad33e5d1e41f439d9c6926f4ead9034725c7a1c74ba7ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterFireTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterFireTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e1d8625a92e88e37048891a31e12336c43f4f7fade4fb791c74336d4a81b1d0": {
      "address": "0x1e60e57fEF7C21a09aBf61C8AdB756174529DfB9",
      "txHash": "0x44c36a2a3ed8a06e20dd983b7ab02e7bfa41f7e3904e570d261eddd465bc968d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterEarthTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterEarthTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e65f4b8daed7de019900bac4443cf47cde2f31aac348f3705c2542ad0e49541": {
      "address": "0xf6fb3A8751B964C3f9A41Dd226Cb72349733b241",
      "txHash": "0x4cd99836a86af2ac8958a4f21119ebb085a8e27a55aa81656e5df25deea48fb3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterWaterTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterWaterTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb3787187641ad8d28f7c96c64ed6b49b53bcaf28794b61f791de65f05114e62": {
      "address": "0x8cc4049b72C3B41DcA0F402cBAaE858098d14dC1",
      "txHash": "0xbae2ee91b94bf50048402812671a772020e0269270fd4f1d2c6f7b0a66198fe2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterLightningTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterLightningTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1199c84cbc69989a68ca094dbaec7dba05d2d521f54e003f96d16194126777d5": {
      "address": "0x12baA541FD92aa4134CB0c7c015CE471F42faDfA",
      "txHash": "0xddcf1a88c4efae58fa4189534717008e0516585ea3e2b93092dc04e8c525f8f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "KeyLootbox",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\KeyLootbox.sol:14"
          },
          {
            "contract": "KeyLootbox",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\KeyLootbox.sol:16"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b9738c0efbe4c9a68c14345015cf7841a3560b4d6386102cb215c23d8f340726": {
      "address": "0xA82a468DA5d82AABA76ba3d11e421552A09f2361",
      "txHash": "0x6170658e77206f2449ddd2c6ab25bd290b797d31326add41cd571abbd163747e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "RaidTrinket",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:24"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:26"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenEffect",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:27"
          },
          {
            "contract": "RaidTrinket",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:29"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef866e30444112d8e6944502b95a58dd9faff31480b12ed8a3fd6108bbfc27e1": {
      "address": "0x36DD145f1a2bC9E42Fc8AE0d47CA46EB0e09d6C8",
      "txHash": "0x6153ddb675529dea1580a1c63e2ca92cbe35d73a87ea94f7c88443f63f0d6952",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Junk",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\Junk.sol:23"
          },
          {
            "contract": "Junk",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\Junk.sol:25"
          },
          {
            "contract": "Junk",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\Junk.sol:27"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a26e6628b3c3c80df4997b4c1688ee64a910e436f7f5be524d7434d4601d84c2": {
      "address": "0x413eFcED58f88dfAf203C34afE5b7468181907e6",
      "txHash": "0xa6badb7e867554c51ce39057df48b9f7a8f085677adb1feff21fb9824ef49a85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:51"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:52"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:53"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:54"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:64"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:66"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:76"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)49705_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:77"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:78"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:79"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:83"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:85"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)49705_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)49705_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)49705_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8569567bec2ffba20ca3a832081619a67f9ca884c879097748bd54679990eb16": {
      "address": "0xc5675584f85cB67641526831A894802d66731725",
      "txHash": "0x881fe9295064b3fd7c3a543c55b80af58b3caf47ea7cb115462ea97f8358528a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:20"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponCosmetics.sol:8"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a89b2e0d698c0976302d6ee58efdef40db33c07d81248c34c5f0ae00e5136d5e": {
      "address": "0xf11D47d4480bF1d7A0a1028514C7466CAdb81CaC",
      "txHash": "0x085c57208eba23a127ffb35961adf3495f19ee00e1bcab46177e297635d97a11",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:20"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterCosmetics.sol:8"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c7740de8df3626c5e4a28f5b6faf2c49f8c5f3d4d3a3720cf776400a4491a86": {
      "address": "0x5ea1BEa8ec251fBd1264dA07035683e997E531B3",
      "txHash": "0xad53ace32bd702edfed1330e319952ae2caea6dae8eae6d92a4c9fb8890eb0c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)21315",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)42033",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)8573",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)41841",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:33"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)8141",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:34"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:36"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)69490_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:38"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:40"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:42"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:44"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:73"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)21424_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:74"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:78"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:82"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)69369_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:85"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:95"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:115"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)21490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:118"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:119"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:120"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:123"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:126"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:128"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:130"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:131"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:134"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:136"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:138"
          },
          {
            "contract": "NFTStorage",
            "label": "_localChainPrefix",
            "type": "t_string_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:140"
          },
          {
            "contract": "NFTStorage",
            "label": "shields",
            "type": "t_contract(Shields)54482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:142"
          },
          {
            "contract": "NFTStorage",
            "label": "nftProxyContract",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:146"
          },
          {
            "contract": "NFTStorage",
            "label": "bot2p0Log",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:148"
          },
          {
            "contract": "NFTStorage",
            "label": "nftAllowedChains",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:150"
          },
          {
            "contract": "NFTStorage",
            "label": "targetChainAllowedNFTs",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:152"
          },
          {
            "contract": "NFTStorage",
            "label": "isNftBridged",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:154"
          },
          {
            "contract": "NFTStorage",
            "label": "withdrawFromStorageNativeFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:155"
          },
          {
            "contract": "NFTStorage",
            "label": "requestBridgeNativeFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:156"
          },
          {
            "contract": "NFTStorage",
            "label": "giveawayGen2Enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:170"
          }
        ],
        "types": {
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)21315": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)42033": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)8573": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)41841": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)8141": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)69490_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)69490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)21424_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)21424_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)69369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)21490_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)21490_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(Shields)54482": {
            "label": "contract Shields"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76a697772c18d6442f84bc8f7f4c577b8c5c791896f3b0b3f595a5e4e98c7fb1": {
      "address": "0x92468a2C29E756faAb9F82766a751D76D2bBe7Bb",
      "txHash": "0xf706360caa04495ed6d50d19303fb813f6bb2326634be9be995a5b420fef0c4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66560_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65937_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLand",
            "label": "landMinted",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:28"
          },
          {
            "contract": "CBKLand",
            "label": "landData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:30"
          },
          {
            "contract": "CBKLand",
            "label": "landStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:32"
          },
          {
            "contract": "CBKLand",
            "label": "landBoolData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:35"
          },
          {
            "contract": "CBKLand",
            "label": "landAddressData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:38"
          },
          {
            "contract": "CBKLand",
            "label": "tierStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:41"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66560_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)66560_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65937_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65619_storage"
              }
            ]
          },
          "t_struct(Map)65619_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65611_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65611_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65611_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1c800f14ff52cd633c88588f7f4c2f52d59936f90048cd314be262ba4e34102": {
      "address": "0x293d99848Bd2EFE0D3E97CE8263941dd226b99d5",
      "txHash": "0x4726ecc3045fd99608f96735efdbdf7383302991474bbf0e0e54c5c1961e4594",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLandSale",
            "label": "cbkLand",
            "type": "t_contract(CBKLand)3730",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:13"
          },
          {
            "contract": "CBKLandSale",
            "label": "totalSales",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:45"
          },
          {
            "contract": "CBKLandSale",
            "label": "sales",
            "type": "t_mapping(t_uint256,t_struct(purchaseInfo)4219_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:46"
          },
          {
            "contract": "CBKLandSale",
            "label": "purchaseAddressMapping",
            "type": "t_mapping(t_address,t_struct(purchaseInfo)4219_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:47"
          },
          {
            "contract": "CBKLandSale",
            "label": "availableLand",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:48"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkZoneLandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:49"
          },
          {
            "contract": "CBKLandSale",
            "label": "t1LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:55"
          },
          {
            "contract": "CBKLandSale",
            "label": "t2LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:60"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksWithT2Land",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:61"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandSalePerChunk",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:63"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandOffset",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:64"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT2LandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:67"
          },
          {
            "contract": "CBKLandSale",
            "label": "t3LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:71"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT3LandSoldTo",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:72"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunkIds",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:76"
          },
          {
            "contract": "CBKLandSale",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:78"
          },
          {
            "contract": "CBKLandSale",
            "label": "_reservedEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:79"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunks",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:81"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunksCounter",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:82"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksReservedFor",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:83"
          },
          {
            "contract": "CBKLandSale",
            "label": "resellerLandBudget",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:86"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:89"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLands",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:90"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandTier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:91"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandReseller",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:92"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandForPlayer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:93"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandClaimed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:94"
          },
          {
            "contract": "CBKLandSale",
            "label": "takenT3Chunks",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:96"
          }
        ],
        "types": {
          "t_contract(CBKLand)3730": {
            "label": "contract CBKLand"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(purchaseInfo)4219_storage)": {
            "label": "mapping(uint256 => struct CBKLandSale.purchaseInfo)"
          },
          "t_struct(purchaseInfo)4219_storage": {
            "label": "struct CBKLandSale.purchaseInfo",
            "members": [
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "purchasedTier",
                "type": "t_uint256"
              },
              {
                "label": "stamp",
                "type": "t_uint256"
              },
              {
                "label": "free",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(purchaseInfo)4219_storage)": {
            "label": "mapping(address => struct CBKLandSale.purchaseInfo)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)69490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "02a5586d519143013cb51631ee004dd1c4ba140fe8056d1f90401778b1efe895": {
      "address": "0xdB91D812e3b0dfB4c8F8B24A0fA5aC8b61830487",
      "txHash": "0xbb47fb40fe106cd93c8ce24fc808ae851f21420a44a0e0cadc6adc6118e588a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Merchandise",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:30"
          },
          {
            "contract": "Merchandise",
            "label": "skillOracle",
            "type": "t_contract(IPriceOracle)47955",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:31"
          },
          {
            "contract": "Merchandise",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:33"
          },
          {
            "contract": "Merchandise",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:34"
          },
          {
            "contract": "Merchandise",
            "label": "itemPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:36"
          },
          {
            "contract": "Merchandise",
            "label": "nextOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:38"
          },
          {
            "contract": "Merchandise",
            "label": "lowestUnprocessedOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:39"
          },
          {
            "contract": "Merchandise",
            "label": "orderBuyer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:40"
          },
          {
            "contract": "Merchandise",
            "label": "orderPaidAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:41"
          },
          {
            "contract": "Merchandise",
            "label": "orderBaskets",
            "type": "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:42"
          },
          {
            "contract": "Merchandise",
            "label": "orderData",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:43"
          },
          {
            "contract": "Merchandise",
            "label": "externalOrderId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:44"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)47955": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint256 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d5fae3bd346744f53de8234bf6a14f64350def32f5f67b697c4871e6986d7776": {
      "address": "0x28d7BE04FA6A5B34346aDBD471C8b24250E1F1BB",
      "txHash": "0xd793bcfe82ddc7179fac9937d48dce76133d0d698b3e467d32beeb6848b2cca1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)39719_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:24"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:25"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:26"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:40"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:42"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:43"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:44"
          },
          {
            "contract": "Treasury",
            "label": "projectLogo",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:45"
          },
          {
            "contract": "Treasury",
            "label": "projectDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:46"
          },
          {
            "contract": "Treasury",
            "label": "projectWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:47"
          },
          {
            "contract": "Treasury",
            "label": "projectNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:48"
          },
          {
            "contract": "Treasury",
            "label": "projectIsValor",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)39719_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)39719_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4303379807e1fd8a81861c337445ef21ddaee6cacd2d59f5d7fb4eb79d5ae68a": {
      "address": "0xdE1cffA04C010E7862DB843feD0E95F9f1D6D243",
      "txHash": "0x7d6769d368b4ecd63ca773f7d50ff4b4162823857807f869de33d2e180125317",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:45"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)54482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)47974",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:53"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:55"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:57"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:59"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:61"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:63"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:65"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:67"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:69"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:71"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:73"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:75"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:77"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:79"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:81"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:83"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:85"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)24983_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:88"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)24990_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:90"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:92"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:94"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:96"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:98"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:100"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:102"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:104"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:106"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:108"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:110"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:112"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:114"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:116"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:118"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:119"
          },
          {
            "contract": "PvpArena",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:122"
          },
          {
            "contract": "PvpArena",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:123"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)54482": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)47974": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)24983_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)24983_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)24990_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)24990_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)69490_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "83b01f3e4f244fbb40cf9fb593b7cee057f218917e9da2eadc7a30b90bdf0290": {
      "address": "0x5d6E84E6ee9dDF24022828C15dC46d6E7b25fF26",
      "txHash": "0xf29630232a3a07f9dfdd8059976f2b5b10fff3a147de19d4d8b8a3607b44036a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Garrison",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:20"
          },
          {
            "contract": "Garrison",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)69369_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:22"
          },
          {
            "contract": "Garrison",
            "label": "userGarrison",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:24"
          },
          {
            "contract": "Garrison",
            "label": "characterOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:25"
          },
          {
            "contract": "Garrison",
            "label": "allCharactersInGarrison",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:26"
          },
          {
            "contract": "Garrison",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:28"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_struct(AddressSet)69369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UintSet)69490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a21247b2cb1a40417c9798925dede2e5bf20d36b09e6161ac47c93615757cb82": {
      "address": "0x4469c705D1Cc79ec03E76E0DcFd7a0507FadF318",
      "txHash": "0xe8284e117a50a60207bf69537c864992bdd327ccfb02be23ffff558fcb592c0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BurningManager",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:19"
          },
          {
            "contract": "BurningManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:20"
          },
          {
            "contract": "BurningManager",
            "label": "garrison",
            "type": "t_contract(Garrison)15161",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:21"
          },
          {
            "contract": "BurningManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:23"
          },
          {
            "contract": "BurningManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:26"
          },
          {
            "contract": "BurningManager",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:30"
          },
          {
            "contract": "BurningManager",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:31"
          },
          {
            "contract": "BurningManager",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:32"
          },
          {
            "contract": "BurningManager",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:36"
          },
          {
            "contract": "BurningManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47955",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:37"
          },
          {
            "contract": "BurningManager",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:39"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Garrison)15161": {
            "label": "contract Garrison"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(IPriceOracle)47955": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b497afaffd0c08f17fa9f183e5459862b55f51671b38722f1f72d541275b00b1": {
      "address": "0x7458D0eAf2A726578C61BD5AEE7AC5948246b34d",
      "txHash": "0xf15d5fa44f4617633e791fefaa74d7103148e557b3d84882ce75b20568da48f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SafeRandoms",
            "label": "currentSeedIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:73"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedIndexBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:74"
          },
          {
            "contract": "SafeRandoms",
            "label": "firstRequestBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:75"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedHashes",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:76"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:79"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedSalts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:80"
          },
          {
            "contract": "SafeRandoms",
            "label": "queuedSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:81"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionLimited",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:83"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionBlocks",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:84"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitResolutionEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:86"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitRequestEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:87"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitPopEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:88"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3b91ee944d93ddca8706d0cb2c1c3d61b25c16abfa812948bd19e3e25600c2ac": {
      "address": "0xdfa9ae6741C32dF6fc7bdb3917600c62393D16B4",
      "txHash": "0x55f3bb7339a08bec34aaa408cfd3c03630b2941b93967ce1b24d56aa401579ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerVault",
            "label": "nfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:21"
          },
          {
            "contract": "PartnerVault",
            "label": "currencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:22"
          },
          {
            "contract": "PartnerVault",
            "label": "shownNfts",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:23"
          },
          {
            "contract": "PartnerVault",
            "label": "shownQuestNfts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UintSet)69490_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:24"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)69490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(UintSet)69490_storage))": {
            "label": "mapping(address => mapping(uint256 => struct EnumerableSet.UintSet))"
          },
          "t_mapping(t_uint256,t_struct(UintSet)69490_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fb51b978741bd1d6f4a4347b38d11e46474f8a1ce29198ccd0b986ec9f3acc92": {
      "address": "0xfbFCc234a5FB9335784697Ff19F99C61d1794D7C",
      "txHash": "0xda519efe187ce804baafcffe50ed4b0b7d02949522e65dddf183beadf45216b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SimpleQuests",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:41"
          },
          {
            "contract": "SimpleQuests",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:42"
          },
          {
            "contract": "SimpleQuests",
            "label": "junk",
            "type": "t_contract(Junk)48447",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:43"
          },
          {
            "contract": "SimpleQuests",
            "label": "trinket",
            "type": "t_contract(RaidTrinket)49064",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:44"
          },
          {
            "contract": "SimpleQuests",
            "label": "shields",
            "type": "t_contract(Shields)54482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:45"
          },
          {
            "contract": "SimpleQuests",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2998",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:46"
          },
          {
            "contract": "SimpleQuests",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)33513",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:47"
          },
          {
            "contract": "SimpleQuests",
            "label": "partnerVault",
            "type": "t_contract(PartnerVault)24691",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:48"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextQuestID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:92"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextRewardID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:93"
          },
          {
            "contract": "SimpleQuests",
            "label": "questTemplates",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:95"
          },
          {
            "contract": "SimpleQuests",
            "label": "quests",
            "type": "t_mapping(t_uint256,t_struct(Quest)33964_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:96"
          },
          {
            "contract": "SimpleQuests",
            "label": "questSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:97"
          },
          {
            "contract": "SimpleQuests",
            "label": "questDeadlines",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:98"
          },
          {
            "contract": "SimpleQuests",
            "label": "questIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:99"
          },
          {
            "contract": "SimpleQuests",
            "label": "characterQuest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:100"
          },
          {
            "contract": "SimpleQuests",
            "label": "tierChances",
            "type": "t_mapping(t_uint256,t_array(t_uint256)4_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:101"
          },
          {
            "contract": "SimpleQuests",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:102"
          },
          {
            "contract": "SimpleQuests",
            "label": "lastFreeSkipUsage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:103"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:104"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewardClaimed",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:105"
          },
          {
            "contract": "SimpleQuests",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)33977_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:106"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:107"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletionsGoal",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:108"
          },
          {
            "contract": "SimpleQuests",
            "label": "walletQuestProgress",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:109"
          },
          {
            "contract": "SimpleQuests",
            "label": "questCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:110"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(Junk)48447": {
            "label": "contract Junk"
          },
          "t_contract(RaidTrinket)49064": {
            "label": "contract RaidTrinket"
          },
          "t_contract(Shields)54482": {
            "label": "contract Shields"
          },
          "t_contract(BurningManager)2998": {
            "label": "contract BurningManager"
          },
          "t_contract(SafeRandoms)33513": {
            "label": "contract SafeRandoms"
          },
          "t_contract(PartnerVault)24691": {
            "label": "contract PartnerVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Quest)33964_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Quest)"
          },
          "t_struct(Quest)33964_storage": {
            "label": "struct SimpleQuests.Quest",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_enum(Rarity)33997"
              },
              {
                "label": "requirementType",
                "type": "t_enum(ItemType)33991"
              },
              {
                "label": "requirementRarity",
                "type": "t_uint256"
              },
              {
                "label": "requirementAmount",
                "type": "t_uint256"
              },
              {
                "label": "requirementExternalAddress",
                "type": "t_address"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)33991"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Rarity)33997": {
            "label": "enum SimpleQuests.Rarity",
            "members": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC",
              "LEGENDARY"
            ]
          },
          "t_enum(ItemType)33991": {
            "label": "enum SimpleQuests.ItemType",
            "members": [
              "NONE",
              "WEAPON",
              "JUNK",
              "DUST",
              "TRINKET",
              "SHIELD",
              "STAMINA",
              "SOUL",
              "RAID",
              "EXPERIENCE",
              "EXTERNAL",
              "EXTERNAL_HOLD",
              "CHARACTER"
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)4_storage)": {
            "label": "mapping(uint256 => uint256[4])"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Reward)33977_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Reward)"
          },
          "t_struct(Reward)33977_storage": {
            "label": "struct SimpleQuests.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)33991"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6545ce5a56a8a4ae04447e982e90b1bd25f7dd13512a35d3eaa959e4b4440319": {
      "address": "0xB10B9c07Cc9330a9956D46709b7376BF35775AD9",
      "txHash": "0xaa39acc22e2550ed6f6522e77f6ba013f592cf59bbac8617de8bb1b548a19017",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:20"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:21"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)33513",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:22"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:23"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47955",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:24"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userEventShardSupply",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:34"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:35"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:44"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventInfo",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)37534_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:46"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userForgedAtEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:47"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userOrderOptionForEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:48"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkill",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:49"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkillUpdatedTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:50"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userSkillStakingShardsRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:51"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponArt",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:52"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:53"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:54"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:55"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(SafeRandoms)33513": {
            "label": "contract SafeRandoms"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)47955": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)37534_storage)": {
            "label": "mapping(uint256 => struct SpecialWeaponsManager.EventInfo)"
          },
          "t_struct(EventInfo)37534_storage": {
            "label": "struct SpecialWeaponsManager.EventInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "weaponElement",
                "type": "t_uint8"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "orderedCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea94afb1402d83c6df33c45fbe8ac44b7a4e5a88813784c87ec5b104a356782d": {
      "address": "0xaFC5C5A78eD855f8f1ca0821C8125Cd3f0a2012e",
      "txHash": "0x42d9bfca371b3010038c2c4684cbc06d5e31f8c73706f4d8b382c35a29eae823",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:13"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)39281",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:16"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "userClaimedAtGiveaway",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:18"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "nftClaimedAtGiveaway",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:19"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayIdToAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:21"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayIdToSpecialEventId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:22"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:23"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "nextGiveawayId",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(SpecialWeaponsManager)39281": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b0b8440157c24eb3d763e22b0e1998921bd2da9505a502196dfa423f762dbcc": {
      "address": "0x786F964334A202BcF1B947a19CaaCB6FeD21c7D0",
      "txHash": "0xd6529e64523d57b07a35a504b278dcdb6e29f557ac8bd2e5b150932a450658ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:15"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)41841",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:16"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)42033",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:17"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:18"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:19"
          }
        ],
        "types": {
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(WeaponCosmetics)41841": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(WeaponRenameTagConsumables)42033": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "704de1c5096200ec89e3a5819e41da5d803454aef045320b0a23487d5e8f292e": {
      "address": "0x3Ce518b9917562AaeA07c24cF7F74b69C8d371E0",
      "txHash": "0x8c08f8c9039873de9767f8e613d17ebedd1766f6ef3df57119365ddab622b8c7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:17"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)8141",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:18"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)8573",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:19"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:20"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:21"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "giveawayGen2Enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:22"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:27"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "equipmentManager",
            "type": "t_contract(EquipmentManager)14505",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:28"
          }
        ],
        "types": {
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(CharacterCosmetics)8141": {
            "label": "contract CharacterCosmetics"
          },
          "t_contract(CharacterRenameTagConsumables)8573": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(EquipmentManager)14505": {
            "label": "contract EquipmentManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f80c5afe088a939b19a95dac1c2202c479049e112c5b96cda0376d1ec9de0328": {
      "address": "0x14fE017f2199b5B89F9d8Abb5090A0741Acab756",
      "txHash": "0xabd45091bfec6b8a02bbb83488aa61f6bb4230c3e0282a274a1b2d963b4fee49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "shields",
            "type": "t_contract(Shields)54482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:13"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:14"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:15"
          }
        ],
        "types": {
          "t_contract(Shields)54482": {
            "label": "contract Shields"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3de7e79b8e5b62f548437fd2b9dda17aa5b206eb8758d21c764593678c145359": {
      "address": "0x8EE85F5b31d9f18B23040D910a26882542502FaC",
      "txHash": "0x096db81f426f39f166a409326ea9ecb9fc9969e7787941bc9c020e11ecdde8db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)31442",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:52"
          },
          {
            "contract": "PvpRankings",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:54"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)31442": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "94840fc3e04ca9b01128c022f0287ca397f2f92c24fe5638a0897d2d20ea7d46": {
      "address": "0x173ce09Bc4177f6ab95Ff7f0B31Bdf95C395410C",
      "txHash": "0x589600bf8a99fee5087d3a36b0aa340081b737806321d7de6625b592878fb0ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpCore",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:58"
          },
          {
            "contract": "PvpCore",
            "label": "characters",
            "type": "t_contract(Characters)44242",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:59"
          },
          {
            "contract": "PvpCore",
            "label": "weapons",
            "type": "t_contract(Weapons)62189",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:60"
          },
          {
            "contract": "PvpCore",
            "label": "shields",
            "type": "t_contract(Shields)54482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:61"
          },
          {
            "contract": "PvpCore",
            "label": "skillToken",
            "type": "t_contract(IERC20)68445",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:62"
          },
          {
            "contract": "PvpCore",
            "label": "randoms",
            "type": "t_contract(IRandoms)47974",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:63"
          },
          {
            "contract": "PvpCore",
            "label": "pvprankings",
            "type": "t_contract(PvpRankings)32772",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:64"
          },
          {
            "contract": "PvpCore",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:67"
          },
          {
            "contract": "PvpCore",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:69"
          },
          {
            "contract": "PvpCore",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:71"
          },
          {
            "contract": "PvpCore",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:73"
          },
          {
            "contract": "PvpCore",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:75"
          },
          {
            "contract": "PvpCore",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:77"
          },
          {
            "contract": "PvpCore",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:79"
          },
          {
            "contract": "PvpCore",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:81"
          },
          {
            "contract": "PvpCore",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:83"
          },
          {
            "contract": "PvpCore",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:85"
          },
          {
            "contract": "PvpCore",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)28651_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:88"
          },
          {
            "contract": "PvpCore",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)28658_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:90"
          },
          {
            "contract": "PvpCore",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:92"
          },
          {
            "contract": "PvpCore",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:94"
          },
          {
            "contract": "PvpCore",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:96"
          },
          {
            "contract": "PvpCore",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:98"
          },
          {
            "contract": "PvpCore",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:100"
          },
          {
            "contract": "PvpCore",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:102"
          },
          {
            "contract": "PvpCore",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:104"
          },
          {
            "contract": "PvpCore",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:106"
          },
          {
            "contract": "PvpCore",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:108"
          },
          {
            "contract": "PvpCore",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:110"
          },
          {
            "contract": "PvpCore",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:115"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44242": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62189": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)54482": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)68445": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)47974": {
            "label": "contract IRandoms"
          },
          "t_contract(PvpRankings)32772": {
            "label": "contract PvpRankings"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)28651_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Fighter)"
          },
          "t_struct(Fighter)28651_storage": {
            "label": "struct PvpCore.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)28658_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Match)"
          },
          "t_struct(Match)28658_storage": {
            "label": "struct PvpCore.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_struct(UintSet)69490_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc1a08f6dfb6a8ac8a71c9e71b1a35db5db38b44c4e276454e981e396768490e": {
      "address": "0x0202FF84A71bDb77e8Dd24930e869Fe3585CD998",
      "txHash": "0x01ca52b14514ce29e4d4f9a737f5d28e126bdb4831def10ed395dae7dae03aeb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "JunkBridgeProxyContract",
            "label": "junk",
            "type": "t_contract(Junk)48447",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\JunkBridgeProxyContract.sol:13"
          },
          {
            "contract": "JunkBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\JunkBridgeProxyContract.sol:14"
          },
          {
            "contract": "JunkBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\JunkBridgeProxyContract.sol:15"
          }
        ],
        "types": {
          "t_contract(Junk)48447": {
            "label": "contract Junk"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1d35b2bc4443892a6afe67eda17da1cb07905f4ac3032466c9a2c3fa6230152": {
      "address": "0xE601e60A3BCd767a94FE9671eE677794285433C3",
      "txHash": "0xbce28674be9e273b03b600d1e7b606bea3c075119f4c0b9ddc15ef9113c12909",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Launchpad",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:32"
          },
          {
            "contract": "Launchpad",
            "label": "tierStakingRequirement",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:43"
          },
          {
            "contract": "Launchpad",
            "label": "tierAllocationWeight",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:44"
          },
          {
            "contract": "Launchpad",
            "label": "launches",
            "type": "t_mapping(t_uint256,t_struct(Launch)15671_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:47"
          },
          {
            "contract": "Launchpad",
            "label": "launchTokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:48"
          },
          {
            "contract": "Launchpad",
            "label": "launchStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:49"
          },
          {
            "contract": "Launchpad",
            "label": "launchFundsToRaise",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:50"
          },
          {
            "contract": "Launchpad",
            "label": "launchBaseAllocation",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:51"
          },
          {
            "contract": "Launchpad",
            "label": "launchTotalRaised",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:52"
          },
          {
            "contract": "Launchpad",
            "label": "launchTokenAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:53"
          },
          {
            "contract": "Launchpad",
            "label": "launchEligibleUsersSnapshot",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:56"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserStakedAmountSnapshot",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:57"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserInvestment",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:58"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:59"
          },
          {
            "contract": "Launchpad",
            "label": "launchTotalUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:60"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserTotalUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:61"
          },
          {
            "contract": "Launchpad",
            "label": "launchPeriodicVestingsPercentages",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:64"
          },
          {
            "contract": "Launchpad",
            "label": "launchPeriodicVestingsStartTimestamps",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:65"
          },
          {
            "contract": "Launchpad",
            "label": "launchLinearVestingsDurations",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:66"
          },
          {
            "contract": "Launchpad",
            "label": "launchLinearVestingsStartTimestamps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:67"
          },
          {
            "contract": "Launchpad",
            "label": "userLinearVestingClaimTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:68"
          },
          {
            "contract": "Launchpad",
            "label": "userClaimedVestingPortion",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_bool)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:69"
          },
          {
            "contract": "Launchpad",
            "label": "nextLaunchId",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:71"
          },
          {
            "contract": "Launchpad",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:72"
          },
          {
            "contract": "Launchpad",
            "label": "_game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:74"
          },
          {
            "contract": "Launchpad",
            "label": "didUserCommitToLaunch",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Launch)15671_storage)": {
            "label": "mapping(uint256 => struct Launchpad.Launch)"
          },
          "t_struct(Launch)15671_storage": {
            "label": "struct Launchpad.Launch",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "detailsJsonUri",
                "type": "t_string_storage"
              },
              {
                "label": "imageUrl",
                "type": "t_string_storage"
              },
              {
                "label": "fundingTokenAddress",
                "type": "t_address"
              },
              {
                "label": "phase",
                "type": "t_uint256"
              },
              {
                "label": "commitOnly",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)69369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => bool)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d2d37f329829438c8f3733df0695ca9d9e9fd0086d95dfb449fab13a72001653": {
      "address": "0xccCd97604643B795c4b48d76680d4D5f16B59360",
      "txHash": "0x0e9767f9bd6d6a6105baf3e65e9278705990b32482f427afeec27fcc7f2992ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokensManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:14"
          },
          {
            "contract": "TokensManager",
            "label": "combatTokenChargePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:16"
          },
          {
            "contract": "TokensManager",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:18"
          },
          {
            "contract": "TokensManager",
            "label": "skillTokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:19"
          },
          {
            "contract": "TokensManager",
            "label": "offsetSlippage",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:20"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aa94682caee0a36752eb9d520c4c85fa205ab3982b98d9807e12d1911df3345c": {
      "address": "0xa6a9666243BCaFF0F0c31Eb91789c9FE9DaeEB14",
      "txHash": "0x258a2cd1cbe518b58c44e8e62d59b7f5fa6df11b60339dd0a4bcc231d216fa4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20BridgeEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:19"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeVars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:26"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeTokenVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:27"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:58"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:59"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOuts",
            "type": "t_mapping(t_uint256,t_struct(ERC20BridgeOutRequests)11222_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:60"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferInsCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:62"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferIns",
            "type": "t_mapping(t_uint256,t_struct(ERC20BridgeReceivedTokens)11235_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:63"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:67"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOutOfPlayersHistory",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:68"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferInOfPlayersHistory",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:69"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_supportedTokenTypes",
            "type": "t_struct(AddressSet)69369_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:72"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)69490_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:73"
          },
          {
            "contract": "ERC20Bridge",
            "label": "game",
            "type": "t_contract(CryptoBlades)47866",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:75"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20ProxyContract",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:78"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_botLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:80"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20AllowedChains",
            "type": "t_mapping(t_address,t_struct(UintSet)69490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:82"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_targetChainAllowedERC20s",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:84"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_whitelistedWallets",
            "type": "t_mapping(t_address,t_struct(AddressSet)69369_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:87"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(ERC20BridgeOutRequests)11222_storage)": {
            "label": "mapping(uint256 => struct ERC20Bridge.ERC20BridgeOutRequests)"
          },
          "t_struct(ERC20BridgeOutRequests)11222_storage": {
            "label": "struct ERC20Bridge.ERC20BridgeOutRequests",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "erc20Address",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(ERC20BridgeReceivedTokens)11235_storage)": {
            "label": "mapping(uint256 => struct ERC20Bridge.ERC20BridgeReceivedTokens)"
          },
          "t_struct(ERC20BridgeReceivedTokens)11235_storage": {
            "label": "struct ERC20Bridge.ERC20BridgeReceivedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "erc20Address",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceTransferId",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)69490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)69369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_contract(CryptoBlades)47866": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_address,t_struct(AddressSet)69369_storage)": {
            "label": "mapping(address => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1cd70dd93678f2a05d4b144c32c83e77d0ba7fcafb64e50f32cce4aa124c8769": {
      "address": "0x018056B11fEe3A9Cc414897218DE92a68e971E51",
      "txHash": "0x919804ba0357d57341a51d0a8f6b770691fef06e2dacb0583f7f0600545a5678",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SkillERC20BridgeProxyContract",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SkillERC20BridgeProxyContract.sol:13"
          },
          {
            "contract": "SkillERC20BridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SkillERC20BridgeProxyContract.sol:14"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5a20ade9ce757fca7b0e6090ae68b4ee7d4e5fafac7ee773ec75a3c6a86c4030": {
      "address": "0x9e1EA0e8636B61101d80937a4851C1c130271d79",
      "txHash": "0x9693197ba8f918d8ccb0e993021df35190587c85ba4cb24cf389489aef70c270",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLandBridgeProxyContract",
            "label": "_cbkLand",
            "type": "t_contract(CBKLand)3730",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandBridgeProxyContract.sol:13"
          },
          {
            "contract": "CBKLandBridgeProxyContract",
            "label": "_nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandBridgeProxyContract.sol:14"
          },
          {
            "contract": "CBKLandBridgeProxyContract",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandBridgeProxyContract.sol:15"
          }
        ],
        "types": {
          "t_contract(CBKLand)3730": {
            "label": "contract CBKLand"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a73eed2a203ede622cd265dd875b09acb9c0f7502ed37e8444c493bc364786f0": {
      "address": "0x828c96dDd58b5C409C51b589b15f662011870F5f",
      "txHash": "0x47545b8b0644740f0c31f7e3e1e918c4ec58a5fa50b7c475eb2cf8ec1f543854",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a814f1a72129a94bccd11dc0b80bc5b4f2dbb9f97ec4926613f8abce4ce1a58": {
      "address": "0xab1Ae3177Cddad3D8116a375e9d8cD481997d2E7",
      "txHash": "0x59c9b6d85baae514e9a127b73afc1efa6db0ea904b9b998719a5b55b35f72eb5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Dex",
            "label": "tokenPairs",
            "type": "t_mapping(t_uint256,t_struct(TokenPair)9888_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Dex.sol:28"
          },
          {
            "contract": "Dex",
            "label": "collectedFees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Dex.sol:29"
          },
          {
            "contract": "Dex",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Dex.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(TokenPair)9888_storage)": {
            "label": "mapping(uint256 => struct Dex.TokenPair)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(TokenPair)9888_storage": {
            "label": "struct Dex.TokenPair",
            "members": [
              {
                "label": "token1",
                "type": "t_address"
              },
              {
                "label": "token1Amount",
                "type": "t_uint256"
              },
              {
                "label": "token2",
                "type": "t_address"
              },
              {
                "label": "token2Amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "44844598262ca1394b9962b78f02bfc22093b3ee09a3b307e845089b07f28629": {
      "address": "0x67C654fcD3b1C51A559e0c34b3578833B736632A",
      "txHash": "0x6ea2cfef998315c06754dbc12a8beaffe108d899062cd9ef81ebf1f787623768",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "EquipmentManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:92"
          },
          {
            "contract": "EquipmentManager",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:93"
          },
          {
            "contract": "EquipmentManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:94"
          },
          {
            "contract": "EquipmentManager",
            "label": "nftVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:95"
          },
          {
            "contract": "EquipmentManager",
            "label": "equippedSlotAddress",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:98"
          },
          {
            "contract": "EquipmentManager",
            "label": "equippedSlotID",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:100"
          },
          {
            "contract": "EquipmentManager",
            "label": "calculatorProxy",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:103"
          },
          {
            "contract": "EquipmentManager",
            "label": "equippableInSlot",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)69369_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:105"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)69369_storage))": {
            "label": "mapping(address => mapping(uint256 => struct EnumerableSet.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69369_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)69369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)69104_storage"
              }
            ]
          },
          "t_struct(Set)69104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62636_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62636_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66174_storage"
              }
            ]
          },
          "t_struct(Set)66174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
