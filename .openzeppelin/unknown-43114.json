{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x843d40CCa39d9Cf4c36A25AC163df8a6b4BaF4a2",
    "txHash": "0x2095cb1ee5dcc76d2f800e79a7ca3a54f7ec23bec8ff7578f192962f4fb415ac"
  },
  "proxies": [
    {
      "address": "0x79dc8A125f2C929165414342FC959Ea7bBCbb6E8",
      "txHash": "0xa18151063863cae0cdad41e08adf568be44a322a6ae23ebb5d8d4c9de67f0280",
      "kind": "transparent"
    },
    {
      "address": "0xF1C976d354d206935a3191dbEeA5a8C2f5fD9BB8",
      "txHash": "0x6bba64f1ce933293a5feabb4decc1a90a949b37ade7c05316530f74ecf84d821",
      "kind": "transparent"
    },
    {
      "address": "0x28857ccCCa599f0876792094870758A18F581Dc0",
      "txHash": "0xa148a1ec5dc6672552b368595197d44157b9bd31b2447df3ca86b6d725f97ffe",
      "kind": "transparent"
    },
    {
      "address": "0xe8f172B51186A4c8127D5eE05617dCA6aAf478fE",
      "txHash": "0x9459de15f2afc3d18235ba4eae60a65cfe0afe3bdc95436d15959d9863c52d4d",
      "kind": "transparent"
    },
    {
      "address": "0x46419526a59ec1d73b72620ae16da091bE8486bd",
      "txHash": "0x0ddb2672be89e27bd47f762a846df1d6aeb5f5f767ac11938e2500ba44348df8",
      "kind": "transparent"
    },
    {
      "address": "0xc72ef1f4bED83A5B60d74D01E10C4334a12d4d28",
      "txHash": "0x58ad2c8ea411a453b0c36187424e15d57e76283f8d097f0301f4dcce2605ab3e",
      "kind": "transparent"
    },
    {
      "address": "0x9469ED8d4b86e4442b4AA848bB94B9f9130f123E",
      "txHash": "0xf8b969c28f5636fe7f01016dc8ea171a7da46b2a264496b92d27ea0f9c809955",
      "kind": "transparent"
    },
    {
      "address": "0xdE1785178DAFb32D4afFA80e30f9EdB86e0c1f69",
      "txHash": "0x44e3434f8e60cacc10334514340e00555ef472bbaadbddf66d76ce8d43076134",
      "kind": "transparent"
    },
    {
      "address": "0xf055e7F7cbed74821A857D80Dd0E5b45576a41BD",
      "txHash": "0x44c2c9f258aef5910e8e3d301efccc102bd4c11b496a4a029dc70fa7cb4ebf4f",
      "kind": "transparent"
    },
    {
      "address": "0x96ED2b0247837b150364f45a44444d4c7Cc2E1d1",
      "txHash": "0x33ee7649434d9194d8e57647b8263ca355cb3378dbc4949b41507477a85c327e",
      "kind": "transparent"
    },
    {
      "address": "0xE8f14F0a5a5f059ae060664e0f165B7e5A52e4e5",
      "txHash": "0x44d8ea714c957c813a3919964a0f3286e2149acd8fd017600ecee3746c3fc010",
      "kind": "transparent"
    },
    {
      "address": "0xD52e4004979DD3a44A7a6BB2F85A7b0c109e255a",
      "txHash": "0x4d2c2480e48439ada10a6d157a381847241891e7e86166a74a2b399496654f03",
      "kind": "transparent"
    },
    {
      "address": "0x1609BD8ea43b1c23dE90071B82CD08FA098DdCF3",
      "txHash": "0x39cfacda765244387c3d19a837630adf2d05c320b2eebba22ea61d231dc2fc6a",
      "kind": "transparent"
    },
    {
      "address": "0x7672F65BAD0Ac8d190dc781E963c62db090e4A84",
      "txHash": "0xe0605eb825206510167681f0642ed3a8f2c36ac4d901cd1d6f464e9f563445eb",
      "kind": "transparent"
    },
    {
      "address": "0x04B8dAD3aDa3f95052038dfDA79c57afe6C21047",
      "txHash": "0x8d7627db2b195c38c175697dfae477861df034ce99bdbd9fd6ce6d84974be7c2",
      "kind": "transparent"
    },
    {
      "address": "0xeC8A94061C493Beeb1D5F314E8dcF299a05257Eb",
      "txHash": "0x63ce63304cb43801f236f3ef21d1ee97415243dcdaa716b8a27f45cee085d65f",
      "kind": "transparent"
    },
    {
      "address": "0x5DB9132692D5A0493b0BA3c8fE4Fca36f9ecCc1c",
      "txHash": "0xe4be4b2413a132dc885ad4b818328a9558999f32f04500ce255ca01ff521600d",
      "kind": "transparent"
    },
    {
      "address": "0x19Af1B099f555069f5f0773114D4A0d63DA7f435",
      "txHash": "0x5eb3463e6f535ba47597a91d41338ef7ba15b2fde9ceae5c26d4d885d4c5dacb",
      "kind": "transparent"
    },
    {
      "address": "0x9218f0cfDD8E6214B86b2cb32e582dA80658109D",
      "txHash": "0x079f807460d56928a8e542d666513f2e0c1a3c074826a4df3ab15300f946bb54",
      "kind": "transparent"
    },
    {
      "address": "0xDA465eE8CE9beD89cAb598DC6E4D18d1F85205Cd",
      "txHash": "0xcec458c5313aad2dbc8a134f960f4e859abfe653f3219362010e445df2e8ed82",
      "kind": "transparent"
    },
    {
      "address": "0x4CD3857E900cb1b5F6FAd08459B80A3A3d23b401",
      "txHash": "0xbd122f287643b92216e0e3145315955f2aed2dea266379731007ee318e4d3504",
      "kind": "transparent"
    },
    {
      "address": "0xaE24589630ecc54b5E5CCDa1FD3f08317bD70083",
      "txHash": "0xb8a072254a1e13ab65a57ce405a470436bec00d6d774db13a72075fc8b9ed2dc",
      "kind": "transparent"
    },
    {
      "address": "0x33505a9CF65A4D16587568E8305e230291c8aE60",
      "txHash": "0xc1f9667e9f5cbcb157020ffa335934f3990f39a2c203b5e12320cce7b07c4f09",
      "kind": "transparent"
    },
    {
      "address": "0x70b7b790005bEc59f6acA8EDf1ead929cF62d246",
      "txHash": "0x9b5b518824c2eeac3b02b9d7d43c466b71eac972eb1756384c3def09d547c274",
      "kind": "transparent"
    },
    {
      "address": "0xe10165871dCaDA193e0489373AD08bd27E348964",
      "txHash": "0xe8791cf7edaeff1fb84a5c9d1c79dfd4263315eb38335d8ff7c0a145e29f9531",
      "kind": "transparent"
    },
    {
      "address": "0xB3e8b0139f7E073440E797eCC088e1E0F5c3dfd9",
      "txHash": "0xebd278bb360f7dd1e521800b2d066cc96c008f21f0ce34c14c8f608c5d24cbae",
      "kind": "transparent"
    },
    {
      "address": "0x0422064947CFC8eE368167e7258765026129A052",
      "txHash": "0x67badae11101bd51163c6735654c376f903e6f1e756663e97de3e40a6ac608d1",
      "kind": "transparent"
    },
    {
      "address": "0xb5c02943971A263011DA86B274846E720F95ABdc",
      "txHash": "0xe76092a2f80e06fa5303819e2329f97094e97f4d140f88bfa05a6b2d1220ce97",
      "kind": "transparent"
    },
    {
      "address": "0xbAC6B71a5bC3517Bee588299980B3C357a518e5C",
      "txHash": "0xb82ec0a2e014f1b1acf852ab9a4dc4ad17bc5a4422b918325bc3f231e68edf7a",
      "kind": "transparent"
    },
    {
      "address": "0x8a1529CFfE40532c4e561Ca81c7B168b0DDED401",
      "txHash": "0xb9355b5a818e78db87e498abf1e30f1fb995779942517ac2a722d376dcfddaf5",
      "kind": "transparent"
    },
    {
      "address": "0xb2eF5041f7649F13e057E3eeF8998dE0Be0a5dd6",
      "txHash": "0xbe2afbba56b7e4b3ede631612480457a2e9878129d1b09eb68a963c1e3baf184",
      "kind": "transparent"
    },
    {
      "address": "0x66eb98A303Eb58c0f153e3B47d31d3B28550F1Aa",
      "txHash": "0xf08eb669f788b87ba79003bfaa25a5b39686866a822611cd74c494014b1503cc",
      "kind": "transparent"
    },
    {
      "address": "0x174e2BA3136387F5d8B7E4dB32ab197a359578f5",
      "txHash": "0xecb9a7f287e30b832a4ab21e94d237f3ba00e32fc9254805b6f564d001d828e7",
      "kind": "transparent"
    },
    {
      "address": "0xEcf0C5259861B8a8B3Dc07Ccafd802A1d78081D0",
      "txHash": "0xb5c4d585dda75297e082e2694dd8566b0aae1d58edcb8052cc61bb97022b03e1",
      "kind": "transparent"
    },
    {
      "address": "0x71A57Fa35bdc38695a685af5652dfAA80466E55B",
      "txHash": "0x381cdb51cad95ad68eaa203740b592b291dcff5dd6f3dec0ecc9468744100c6e",
      "kind": "transparent"
    },
    {
      "address": "0x5B1cCb62D2F9c8523abBa89A56432005cef03b99",
      "txHash": "0x96d465c7ce10bdb1fc8fc98114e645257cbfe7d73a4e8cb62b69da779df5f467",
      "kind": "transparent"
    },
    {
      "address": "0xB861C1196BEb96856FD0733Bba108304b1B51806",
      "txHash": "0xf9945236308b1ed687b6f7842b79bff7c18a08f0b098cf1511c93b5e5fc33a9b",
      "kind": "transparent"
    },
    {
      "address": "0xC4Ca6D299ed56318FcB30344f47F5763aFB3c396",
      "txHash": "0xc99193fac4ef4c43507de05b58f55ad423e505a0b50dba368c93f5a830541a58",
      "kind": "transparent"
    },
    {
      "address": "0x007a0A156044Dd75C201739537F175F6c85a651D",
      "txHash": "0xf0df6361f2179e80f14f7c3bef46dfcf158c0ed39f123791852bb5fc20240098",
      "kind": "transparent"
    },
    {
      "address": "0xe1154cB3Ba6E0a0735B6419A5a443b39127492f8",
      "txHash": "0x7ea2fa7ad4c7daa04462c079bcda34fd25da8362f5254d195e05d63f952317c2",
      "kind": "transparent"
    },
    {
      "address": "0xc4a94907264a8C53183041ab6286A646f5D6e62F",
      "txHash": "0x2aacf5329197ae187b0a32967ea87fae02557230ae3b9d48acf1abd84ab4a3fb",
      "kind": "transparent"
    },
    {
      "address": "0xE05661982155d0615521b4dE88F641F03fEb3E14",
      "txHash": "0x3bcb8e1f94bd4f6e948d52156b1eb7608f848ccf8f23e742a08c2e2c1351ce54",
      "kind": "transparent"
    },
    {
      "address": "0x443424799fDF95e20aAB84d348d53A585fD2f442",
      "txHash": "0x7e7b7402645c1320d0a2019f3625f4606186b39438e5f1a6b698fe8308fc2ef9",
      "kind": "transparent"
    },
    {
      "address": "0x7825D5dA2Ce0dcA8733e40685a01Bd2eD90FC800",
      "txHash": "0xb00dddebcb28ff246979cf5a95b3cb9289184f78e6e0027ec3eecdfd22f376d6",
      "kind": "transparent"
    },
    {
      "address": "0xEA619b5A3D86709730903462B3658bbc122c179E",
      "txHash": "0x315c5eee1473878b370d68657282043025a3857275e8166d1c75e618de315f79",
      "kind": "transparent"
    },
    {
      "address": "0xA0a59920eBD018c25D875A8a68b46C20f1C77836",
      "txHash": "0x879d12667226cf332e897fc5d6550703e21832da846586904adcc3089b2bf7ef",
      "kind": "transparent"
    },
    {
      "address": "0x2dCA536C0728d92F2CF860a737d98DF3726da8a9",
      "txHash": "0x1da0f1700a9ff0f89290ccf710cfa81b204a79ef2066da64c60319bb9f13b37f",
      "kind": "transparent"
    },
    {
      "address": "0x8C38c78bdc753f75dA71C044CCC8e62f5a7288B7",
      "txHash": "0x6981b54d775e807914e0211e27889d2eaaf3fca36c5605ca9b4e65a52e01cbab",
      "kind": "transparent"
    },
    {
      "address": "0x9e5579370dEFeC296581481d430f916727951BcC",
      "txHash": "0xff9cf48dc44e3e83f94a19438f1955b657c2b69b0284b521fbbb153ecd1c9817",
      "kind": "transparent"
    },
    {
      "address": "0x9D38BF3ca5E9B9B725348DDBB82866D2e7093c86",
      "txHash": "0x4bab9c84258fd5564063b86ec4cce91004479f3452f74188368cdbe8efc02d0d",
      "kind": "transparent"
    },
    {
      "address": "0x30ff0aA322e0AB1C910840059Ef3014e51a46636",
      "txHash": "0xe78034f430d9a688313314e77e53ca4c7752d15e409e63fea6fd2d87cfcc5c84",
      "kind": "transparent"
    },
    {
      "address": "0x9B6E8b5f121C5073bEd7877F6A4274BD8a42E92E",
      "txHash": "0xd451218b0525be966977aa8df124bf0558fb88639b930829aab8189a97b594b5",
      "kind": "transparent"
    },
    {
      "address": "0xFF6A695763B72A82B2B5adb73C5bb5a6178094d9",
      "txHash": "0x67906b10f9fb1de10eb1269bc0248ef87e620b414d329922a39271028b6ccbdb",
      "kind": "transparent"
    },
    {
      "address": "0xFc5a0c8a5adB7B2cD32f859fBd4AeaA362DaA151",
      "txHash": "0xe9bf052071fcc4f2ae9d7f76228ef6135df5916287cf813a077abe45aa65b68c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d5854441c84500cef08bd570270f5c05a2d94933cc4f89c6fa0caad7f27a63b5": {
      "address": "0xC6a87AF4e44fC381dDF57733Ba2b9D237fCbc973",
      "txHash": "0x5a583c7b2be0382d903997f162a6414f36f47aea0faf0fe772288426ac623757",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)36068",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)36068",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)19274",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)36068": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)19274": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81a7b14bdf59edcfbda5901a3672a21508a9e49744ce9d3a943c701adbc11119": {
      "address": "0xC5707a6a16CCe1963Ec3E6cdEE0A91e4876Be395",
      "txHash": "0x03cb3d8bacc105aaff487ef38d5e6227c535a35bd4d44f152a41a19d0f8f5e4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "priceSet",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BasicPriceOracle.sol:10"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "currentPrice_",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BasicPriceOracle.sol:11"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff5ff8e3d41ebeb4f47c4771eb7946c550d9b8c05402efae509d8b793aa20566": {
      "address": "0xf8885F284BF2c1c6fd1a57774D5141D0730db8fD",
      "txHash": "0xa3e7bcea791e03e505e181c42836dc5edc4a9e7b25d7382abc241721cc78d056",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)14536_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)14541_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:97"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:105"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:107"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:109"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:110"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:112"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:114"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:115"
          }
        ],
        "types": {
          "t_array(t_struct(Character)14536_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)14536_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)14541_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)14541_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eef8f84376f71b3131f13f8621624c91745e096bbde57544d65be3474f679ee0": {
      "address": "0x1C7eD111353FC677f41b853206D78C5373727D65",
      "txHash": "0x68774fc9633fed5debedf7449997977a4aeb7e12187467a8d251775f5c8f46a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)27613_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)27625_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)27620_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:96"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:101"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:106"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:109"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:112"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:114"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:119"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:121"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:127"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)27613_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)27613_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)27625_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)27625_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)27620_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)27620_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dadf96b4271b3e87738e18bfe31e13d7f63782993199c755bf5670e57b7b894": {
      "address": "0xC938a77fe5B6E4291464A80C7DB74cc4dC3909c9",
      "txHash": "0x9b60f9c4c5ca2583692e54e2b4ba932a40ebf3e3996c2d3e26fc4b4bcc7d19f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:55"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)36068",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)19291",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)19310",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:129"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:131"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:134"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:140"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:143"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:150"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)19327",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1619",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)15941_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)15960_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:201"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:202"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)36068": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)19291": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)19310": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)19327": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1619": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)15941_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)15941_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)15960_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)15960_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4c0f0e6fc7c8f3ba20b0a543fd7b958478140b107aaa5486d95ac18cb6c24547": {
      "address": "0x22d3e897844f18c8fD70e1CAd13D1cA1DFD4f092",
      "txHash": "0x4d3dc2bbcbbbfd85969f902cc5dd8fb6728e11ae3325ceb164714acc68197417",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "MultiAccessUpgradeable",
            "label": "access",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\multiAccessUpgradeable.sol:8"
          },
          {
            "contract": "Raid",
            "label": "completed",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:17"
          },
          {
            "contract": "Raid",
            "label": "expectedFinishTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:18"
          },
          {
            "contract": "Raid",
            "label": "game",
            "type": "t_contract(CryptoBlades)19274",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:20"
          },
          {
            "contract": "Raid",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:21"
          },
          {
            "contract": "Raid",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:22"
          },
          {
            "contract": "Raid",
            "label": "raiders",
            "type": "t_array(t_struct(Raider)20080_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:30"
          },
          {
            "contract": "Raid",
            "label": "participation",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid.sol:31"
          },
          {
            "contract": "RaidBasic",
            "label": "staminaDrain",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raidBasic.sol:14"
          },
          {
            "contract": "RaidBasic",
            "label": "weaponDrops",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raidBasic.sol:15"
          },
          {
            "contract": "RaidBasic",
            "label": "bounty",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raidBasic.sol:16"
          },
          {
            "contract": "RaidBasic",
            "label": "bossTrait",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raidBasic.sol:17"
          },
          {
            "contract": "RaidBasic",
            "label": "totalPower",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raidBasic.sol:19"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(CryptoBlades)19274": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_array(t_struct(Raider)20080_storage)dyn_storage": {
            "label": "struct Raid.Raider[]"
          },
          "t_struct(Raider)20080_storage": {
            "label": "struct Raid.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_uint256"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "58d6ef1af34779ad8d28d0413251e22f91066ff28c1b52dd6c86c492d16dd318": {
      "address": "0x3d8ffBea4e74720b90D6E4BCAeD35f2dF3521Ee6",
      "txHash": "0x2f8445583627841a5e8e8aaa92667735bb7e854426edfac1b1e01aa6622060d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTMarket",
            "label": "skillToken",
            "type": "t_contract(IERC20)36068",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:79"
          },
          {
            "contract": "NFTMarket",
            "label": "taxRecipient",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:80"
          },
          {
            "contract": "NFTMarket",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)8215_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:83"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenIDs",
            "type": "t_mapping(t_address,t_struct(UintSet)37113_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:85"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenTypes",
            "type": "t_struct(AddressSet)36992_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:87"
          },
          {
            "contract": "NFTMarket",
            "label": "isTokenBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:90"
          },
          {
            "contract": "NFTMarket",
            "label": "isUserBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:92"
          },
          {
            "contract": "NFTMarket",
            "label": "tax",
            "type": "t_mapping(t_address,t_int128)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:95"
          },
          {
            "contract": "NFTMarket",
            "label": "freeTax",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:97"
          },
          {
            "contract": "NFTMarket",
            "label": "defaultTax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:98"
          },
          {
            "contract": "NFTMarket",
            "label": "allowedTokenTypes",
            "type": "t_struct(AddressSet)36992_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:101"
          },
          {
            "contract": "NFTMarket",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:103"
          },
          {
            "contract": "NFTMarket",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:104"
          },
          {
            "contract": "NFTMarket",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)19291",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:106"
          },
          {
            "contract": "NFTMarket",
            "label": "addFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:107"
          },
          {
            "contract": "NFTMarket",
            "label": "changeFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:108"
          },
          {
            "contract": "NFTMarket",
            "label": "nftTargetBuyers",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTMarket.sol:111"
          }
        ],
        "types": {
          "t_contract(IERC20)36068": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)8215_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarket.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)8215_storage)": {
            "label": "mapping(uint256 => struct NFTMarket.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)8215_storage": {
            "label": "struct NFTMarket.Listing",
            "members": [
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)37113_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)37113_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)36727_storage"
              }
            ]
          },
          "t_struct(Set)36727_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)36992_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)36727_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_int128)": {
            "label": "mapping(address => int128)"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_contract(IPriceOracle)19291": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1009c3de4d06ffe5f5d5ee4601d916e4c0d6414ddf0237c12a167957eee273e": {
      "address": "0x1974dbE35c813bbc3E030efe285D0C21F1C65F54",
      "txHash": "0x20d49659af2e25800445667c8f4c0d3425fa8b3b40a9665216b9f69d1dfa62b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WaxBridge",
            "label": "latestWaxChainBlockNumberProcessed",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WaxBridge.sol:27"
          },
          {
            "contract": "WaxBridge",
            "label": "totalOwedBnb",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WaxBridge.sol:28"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitPerPeriod",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WaxBridge.sol:29"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WaxBridge.sol:30"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawableBnb",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WaxBridge.sol:31"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawnBnbDuringPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WaxBridge.sol:32"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "498e2a0b3757e479509d6aec2c2acfebb9b98f681a684fb0bae2c243d547bfca": {
      "address": "0x3d7523F00A42Fd99567b74BEC7E2a9f43ec1d446",
      "txHash": "0xa6c0243da792acca0db6d0c72129b97541d345a7ff540c306b07f0adf3aafc5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Promos",
            "label": "bits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Promos.sol:27"
          },
          {
            "contract": "Promos",
            "label": "firstCharacterPromoInGameOnlyFundsGivenInUsd",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Promos.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6e316192db2abf3792e0c4060fb79ed8aaa21bac2a74aaf1891af38a28100b33": {
      "address": "0x5BbeBa3afFe39e0f9747897dA32eE7590814026c",
      "txHash": "0xb45decb5b2d7203fa4eda7c598324eeeed08810ceffe30ecdb3f998cb8db6490",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)36068",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)36068",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)19274",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)36068": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)19274": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9c15cb7e79d257114bac4eea0f232a2c7c33dc00e2d9d479b976cda62cecbef6": {
      "address": "0x40fb18629253CEfF6f657148267521e2705b6D0a",
      "txHash": "0xf33ea1e84c0f8a79c816b118bebfaf77118aabc67d8ab52e4b61221336f626c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:41"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)19310",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:42"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:44"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)24736",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)19274",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:47"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:51"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:52"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:54"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)5456",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:57"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:59"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:60"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Blacksmith.sol:62"
          }
        ],
        "types": {
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)19310": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)24736": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)19274": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)5456": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "535d0ebd7f27b7b739c6b77a2723f3a64bd1c5fc55972ff4dbd2c4012bf6c599": {
      "address": "0x3C388180DdD8E811c60d58C881E473c402af7C37",
      "txHash": "0xf1b32d6a8090bbd58925739dd283c91b606a456acc4b0bf840653a0f52ddec67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)23180_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)23185_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:75"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)23180_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)23180_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)23185_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)23185_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5a71bda464eb057b97363461c14823213429810d25dc96133f5e156ebdd93ef3": {
      "address": "0xd8dfa2e42e04720f8b9a01ed8D1DE8A085E2fEa1",
      "txHash": "0xf91113dbe10df97a8a391eb0cdc99a5ab4b196ae70a5f51792db49e958ad7300",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:8"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:10"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:11"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2a94e5476f89e4df095abfa2bf42ee5b09e40238514bc7546cdbe17e48519f3": {
      "address": "0x0aBb23EA06960608a4fa1529678C9abc208b4E8d",
      "txHash": "0x8a27eee2de388ab1ca2c570962fd4e6eedf74bda30c467b53ddac4d26a4fd650",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:8"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:10"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:11"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4322f7eb3a20b3806459092652155a844a07307cdea3231b7e644e90eaf0cc7": {
      "address": "0xAC2c2D87B595095C60B79ce49137eD34e1C8dd28",
      "txHash": "0xf96a0526446a28142b409a8b5e62671d6ea72b6870585a23439ec4bdce909b9f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterFireTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterFireTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e1d8625a92e88e37048891a31e12336c43f4f7fade4fb791c74336d4a81b1d0": {
      "address": "0x1D0c4F81bF7d2f8597b3b2C692a602a81Fc71f7D",
      "txHash": "0x4bb069959271e8a071d565717666dd8fe753144b0b729a866d43e026674b0670",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterEarthTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterEarthTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e65f4b8daed7de019900bac4443cf47cde2f31aac348f3705c2542ad0e49541": {
      "address": "0xF66bF8EE861d8733E539f7fa74D2cEBcb8C1b5Da",
      "txHash": "0xc0fa5ed6a9352b2e75dd91ad8e301a8efba86933375d9fdcc3afe56f6c91780e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterWaterTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterWaterTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb3787187641ad8d28f7c96c64ed6b49b53bcaf28794b61f791de65f05114e62": {
      "address": "0xfE0BD6F00AD929ab270F22bdF32f92fa009FDE66",
      "txHash": "0xf89f7400883fbcd1e379110dba69350bb900d5b126ab48159cf12cb523576343",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterLightningTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterLightningTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "939c7015137f92f0e1bb5238c51109732e80f2b8f8ec492b9ba65816574fee96": {
      "address": "0x29F8917c2E6e6bAcc9FD813354bCBEd8A8dD89E3",
      "txHash": "0x4cef4b6110f158aa8e467c759f6b426bb3ba3096d34ab893215268377c9d1ecc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "KeyLootbox",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\KeyLootbox.sol:14"
          }
        ],
        "types": {
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b0e50ec132ae9003750c3a96c82aa847c58acbc5579d4eb43defcfd2009e373": {
      "address": "0xA178e2eB5396CC017398b37e264c6EFb25D01797",
      "txHash": "0xc1b534ff0c23864164fb49aa063ac976a5e5b3bc1d22f3c8a75368a793edfd54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "RaidTrinket",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:23"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:25"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenEffect",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:26"
          }
        ],
        "types": {
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ecbf861af3612fa398692277f416c595ca1832e2ab46bbe92d165a3e9ab0667": {
      "address": "0x10AB7be2480690906748B8f124b0EEbB967a942F",
      "txHash": "0xcdabc6adcea927f5b4190672956bc421a2d9830e9610fc7242eeeeb5db2ed612",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Junk",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\Junk.sol:23"
          },
          {
            "contract": "Junk",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\Junk.sol:25"
          }
        ],
        "types": {
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "604f9c2434d1c399476d7442f9c70970efdd08df1e3eb7fb29cf2d8213612b1e": {
      "address": "0x9A8B798555075D4809C90D224Fd52247786587dc",
      "txHash": "0xc94d067abfdc1f0acb18d889132016522d6489e68b2c2bded7b3dac933f464cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)19274",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:47"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:48"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:49"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)13234",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:50"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:60"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:61"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:62"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:63"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:68"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:70"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)20312_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:79"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\raid1.sol:81"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)19274": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)13234": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)20312_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)20312_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)20312_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8569567bec2ffba20ca3a832081619a67f9ca884c879097748bd54679990eb16": {
      "address": "0x00B1e2303cCD05a5374e1ccD0EFc2fDfdE44c4c7",
      "txHash": "0x09a680041d8aa4da63d4be46de585668a85936855fe6b21da8ed3615b74df698",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Cosmetics.sol:20"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponCosmetics.sol:8"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a89b2e0d698c0976302d6ee58efdef40db33c07d81248c34c5f0ae00e5136d5e": {
      "address": "0x827C2f617b67634262C5811aB2F2A8104f81dF20",
      "txHash": "0x90779072e2d3fdaab0c9c6f73276dcfcb39108f656b9f126c125db7891ebbe81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Cosmetics.sol:20"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterCosmetics.sol:8"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharacterCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "89f63445cd038f63046309ab1eec2178e2cf40869837f3788b8c87a1b77824b8": {
      "address": "0x53f39b59Fff3C7C6d36C0DB83A0025dbcF4B9C2D",
      "txHash": "0x609021e44be1bac4c8c66ec676a4ebcb8082a83642f86461275110e0bbf3b31c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)30420",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:25"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)15546",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:26"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)10634",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:27"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)14142",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)6301",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)13950",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)5869",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:33"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)37113_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:35"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:37"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)37113_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:39"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:41"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:65"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:66"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:67"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:68"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)10737_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:74"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:78"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)36992_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:81"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:90"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)37113_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:110"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:112"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)10800_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:113"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:114"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:115"
          }
        ],
        "types": {
          "t_contract(Weapons)30420": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)15546": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)10634": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)14142": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)6301": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)13950": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)5869": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)37113_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)37113_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)37113_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)36727_storage"
              }
            ]
          },
          "t_struct(Set)36727_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)10737_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)10737_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)36992_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)36727_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)10800_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)10800_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4d81e0f1d5cf67941c4452fadd293e81466f03f6131c062946135f92a3c993f": {
      "address": "0x3B1834fb1BBC899e736d7c32A0097aDCA02c519E",
      "txHash": "0x50ada4b4af08183a0f6a6209f38697a02b8784b27c0b7afabc6b3e73f02ed0ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34183_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)33560_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLand",
            "label": "landMinted",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:28"
          },
          {
            "contract": "CBKLand",
            "label": "landData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:30"
          },
          {
            "contract": "CBKLand",
            "label": "landStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:32"
          },
          {
            "contract": "CBKLand",
            "label": "landBoolData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:35"
          },
          {
            "contract": "CBKLand",
            "label": "landAddressData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:38"
          },
          {
            "contract": "CBKLand",
            "label": "tierStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:41"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34183_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)34183_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)33560_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33242_storage"
              }
            ]
          },
          "t_struct(Map)33242_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33234_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33234_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33234_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "04b95c5ecde7e3698d4dbd4baf418bda9013946c50721438aa37878e14f60d84": {
      "address": "0x3f15DF914102bcA362d4a558751C50D5b851F1f8",
      "txHash": "0xedbc9c98f0e80c59aa6ec93c8a0949ffeaa0a5f83f5012afe3b2d03569ccc79d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLandSale",
            "label": "cbkLand",
            "type": "t_contract(CBKLand)2258",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:13"
          },
          {
            "contract": "CBKLandSale",
            "label": "totalSales",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:44"
          },
          {
            "contract": "CBKLandSale",
            "label": "sales",
            "type": "t_mapping(t_uint256,t_struct(purchaseInfo)2408_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:45"
          },
          {
            "contract": "CBKLandSale",
            "label": "purchaseAddressMapping",
            "type": "t_mapping(t_address,t_struct(purchaseInfo)2408_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:46"
          },
          {
            "contract": "CBKLandSale",
            "label": "availableLand",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:47"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkZoneLandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:48"
          },
          {
            "contract": "CBKLandSale",
            "label": "t1LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:54"
          },
          {
            "contract": "CBKLandSale",
            "label": "t2LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:59"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksWithT2Land",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:60"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandSalePerChunk",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:62"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandOffset",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:63"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT2LandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:66"
          },
          {
            "contract": "CBKLandSale",
            "label": "t3LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:70"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT3LandSoldTo",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:71"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunkIds",
            "type": "t_struct(UintSet)37113_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:75"
          },
          {
            "contract": "CBKLandSale",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:77"
          },
          {
            "contract": "CBKLandSale",
            "label": "_reservedEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:78"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunks",
            "type": "t_mapping(t_address,t_struct(UintSet)37113_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:80"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunksCounter",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:81"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksReservedFor",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:82"
          },
          {
            "contract": "CBKLandSale",
            "label": "resellerLandBudget",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:85"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:88"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLands",
            "type": "t_mapping(t_address,t_struct(UintSet)37113_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:89"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandTier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:90"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandReseller",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:91"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandForPlayer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:92"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandClaimed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:93"
          },
          {
            "contract": "CBKLandSale",
            "label": "takenT3Chunks",
            "type": "t_struct(UintSet)37113_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLandSale.sol:95"
          }
        ],
        "types": {
          "t_contract(CBKLand)2258": {
            "label": "contract CBKLand"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(purchaseInfo)2408_storage)": {
            "label": "mapping(uint256 => struct CBKLandSale.purchaseInfo)"
          },
          "t_struct(purchaseInfo)2408_storage": {
            "label": "struct CBKLandSale.purchaseInfo",
            "members": [
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "purchasedTier",
                "type": "t_uint256"
              },
              {
                "label": "stamp",
                "type": "t_uint256"
              },
              {
                "label": "free",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(purchaseInfo)2408_storage)": {
            "label": "mapping(address => struct CBKLandSale.purchaseInfo)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_struct(UintSet)37113_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)36727_storage"
              }
            ]
          },
          "t_struct(Set)36727_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)37113_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "29c7a69ddefe63997ecb16fa6f90e5f6a2eade9452c6b075ed3cffcf9a4419f7": {
      "address": "0x7Bb45833d4Abf8789c224cd646F43414Bd5954d3",
      "txHash": "0x5079411bfcd8d793a63a3cf04fc5b02fa401405b3b00a969153b2787c4d2848c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Merchandise",
            "label": "game",
            "type": "t_contract(CryptoBlades)19274",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:32"
          },
          {
            "contract": "Merchandise",
            "label": "skillOracle",
            "type": "t_contract(IPriceOracle)19291",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:33"
          },
          {
            "contract": "Merchandise",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:35"
          },
          {
            "contract": "Merchandise",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:36"
          },
          {
            "contract": "Merchandise",
            "label": "itemPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:38"
          },
          {
            "contract": "Merchandise",
            "label": "nextOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:40"
          },
          {
            "contract": "Merchandise",
            "label": "lowestUnprocessedOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:41"
          },
          {
            "contract": "Merchandise",
            "label": "orderBuyer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:42"
          },
          {
            "contract": "Merchandise",
            "label": "orderPaidAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:43"
          },
          {
            "contract": "Merchandise",
            "label": "orderBaskets",
            "type": "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:44"
          },
          {
            "contract": "Merchandise",
            "label": "orderData",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Merchandise.sol:45"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)19274": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)19291": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint256 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)30867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)30867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34062_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34062_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)33797_storage"
              }
            ]
          },
          "t_struct(Set)33797_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "118d89ddbee2a834af125de900f1d5ee601c277a6151f21c51b2d939bd3ff21f": {
      "address": "0x39b6893fA82422B2896998099E6179b067296640",
      "txHash": "0x6d2a4569771e7c09108eef8b29187c288120accc438d66fed5dc4b3d101bfd42",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)31009",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:26"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)16089",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:27"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)10821",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)14642",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)6423",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)14450",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)5991",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:34"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)37702_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:36"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:38"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)37702_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:40"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:42"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:67"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:68"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)10928_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:76"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:80"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)37581_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:83"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:92"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)37702_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:112"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:114"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)10991_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:115"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:116"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)37702_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:120"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:123"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:125"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)19767",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:127"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:128"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:131"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:133"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)13734",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:135"
          }
        ],
        "types": {
          "t_contract(Weapons)31009": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)16089": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)10821": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)14642": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)6423": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)14450": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)5991": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)37702_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)37702_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)37702_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)37316_storage"
              }
            ]
          },
          "t_struct(Set)37316_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)10928_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)10928_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)37581_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)37316_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)10991_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)10991_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)19767": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)13734": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1c800f14ff52cd633c88588f7f4c2f52d59936f90048cd314be262ba4e34102": {
      "address": "0x35D338B3356e2Baa118E277Ff2a8AD19753f506C",
      "txHash": "0xf2efab0bc20b5c22d616b1647cd49bb40b23d57f2e82bd4054907b7cb0885cd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLandSale",
            "label": "cbkLand",
            "type": "t_contract(CBKLand)2258",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:13"
          },
          {
            "contract": "CBKLandSale",
            "label": "totalSales",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:45"
          },
          {
            "contract": "CBKLandSale",
            "label": "sales",
            "type": "t_mapping(t_uint256,t_struct(purchaseInfo)2420_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:46"
          },
          {
            "contract": "CBKLandSale",
            "label": "purchaseAddressMapping",
            "type": "t_mapping(t_address,t_struct(purchaseInfo)2420_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:47"
          },
          {
            "contract": "CBKLandSale",
            "label": "availableLand",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:48"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkZoneLandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:49"
          },
          {
            "contract": "CBKLandSale",
            "label": "t1LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:55"
          },
          {
            "contract": "CBKLandSale",
            "label": "t2LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:60"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksWithT2Land",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:61"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandSalePerChunk",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:63"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandOffset",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:64"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT2LandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:67"
          },
          {
            "contract": "CBKLandSale",
            "label": "t3LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:71"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT3LandSoldTo",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:72"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunkIds",
            "type": "t_struct(UintSet)37702_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:76"
          },
          {
            "contract": "CBKLandSale",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:78"
          },
          {
            "contract": "CBKLandSale",
            "label": "_reservedEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:79"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunks",
            "type": "t_mapping(t_address,t_struct(UintSet)37702_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:81"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunksCounter",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:82"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksReservedFor",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:83"
          },
          {
            "contract": "CBKLandSale",
            "label": "resellerLandBudget",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:86"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:89"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLands",
            "type": "t_mapping(t_address,t_struct(UintSet)37702_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:90"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandTier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:91"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandReseller",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:92"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandForPlayer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:93"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandClaimed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:94"
          },
          {
            "contract": "CBKLandSale",
            "label": "takenT3Chunks",
            "type": "t_struct(UintSet)37702_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\CBKLandSale.sol:96"
          }
        ],
        "types": {
          "t_contract(CBKLand)2258": {
            "label": "contract CBKLand"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(purchaseInfo)2420_storage)": {
            "label": "mapping(uint256 => struct CBKLandSale.purchaseInfo)"
          },
          "t_struct(purchaseInfo)2420_storage": {
            "label": "struct CBKLandSale.purchaseInfo",
            "members": [
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "purchasedTier",
                "type": "t_uint256"
              },
              {
                "label": "stamp",
                "type": "t_uint256"
              },
              {
                "label": "free",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(purchaseInfo)2420_storage)": {
            "label": "mapping(address => struct CBKLandSale.purchaseInfo)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_struct(UintSet)37702_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)37316_storage"
              }
            ]
          },
          "t_struct(Set)37316_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)37702_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6718639dd9de0ea610e621b2f414c4b31fda51541dc438fca01cd4e4f114e116": {
      "address": "0x2C5C982dd3220A95D8A984B1E4b38d46a2A8d49d",
      "txHash": "0x6431394f12a247cafa328b072f4bf7205f619af3ec177db06670bc92c5bba7ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)16089",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:55"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)31009",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)36657",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)19784",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)19803",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:129"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:131"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:134"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:140"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:143"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:150"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)13734",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)19820",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1619",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)16484_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)16503_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:201"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:202"
          }
        ],
        "types": {
          "t_contract(Characters)16089": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)31009": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)36657": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)19784": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)19803": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13734": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)19820": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1619": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)16484_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)16484_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)16503_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)16503_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e73366d4027ad7ae5d107a2d31b5f23c0cce7fef17347e9385896b2605ee1817": {
      "address": "0x40fBc00cEDe66F4579D31fa69B898E6B76D2Ad92",
      "txHash": "0xbc7f573e4551d70aee8fbe3e77dfa769bca1a55f9d411a8124accf55645dedff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34772_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)34149_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)15036_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)15041_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:97"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:105"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)13734",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:107"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:109"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:110"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:112"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:114"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:115"
          }
        ],
        "types": {
          "t_array(t_struct(Character)15036_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)15036_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)15041_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)15041_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13734": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34772_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)34772_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)34149_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33831_storage"
              }
            ]
          },
          "t_struct(Map)33831_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33823_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33823_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33823_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc0b92369658b6ccb4e1d9aaea201e5e8a56c42d0e399901513463086e2f07c9": {
      "address": "0xb3E6f3e7bf7Db1d1B9aE58998e8d52a99003cbFA",
      "txHash": "0x7b3dbf75e77682320f137ead5f1a69e7782f172134e6ad964db675ead042b1c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)34772_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)34149_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)28092_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)28104_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)28099_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:96"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:101"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:106"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:109"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:112"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:114"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:119"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)13734",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:121"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:127"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)28092_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)28092_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)28104_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)28104_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)28099_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)28099_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)13734": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)34772_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)34772_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)34149_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)33831_storage"
              }
            ]
          },
          "t_struct(Map)33831_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)33823_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)33823_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)33823_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f184f41078625626e6341681efed51fc2e8e2d595f21de3332d144c410f073ec": {
      "address": "0x7552ba89872a8bCB9ae731995A6F63dEBA702dB5",
      "txHash": "0xfb6e288560e68e2bd68e04f465ea72e133e54bf06cd2b45d7168a40c8cab26b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)19767",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:47"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)16089",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:48"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)31009",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:49"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)13734",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:50"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:60"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:61"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:62"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:63"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:68"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:70"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)20805_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:79"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:81"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)19767": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)16089": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)31009": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)13734": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)20805_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)20805_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)20805_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8075524e334bd2c7171906ba2fdd643431db9d042b1d4b8d84fb7b7b0bd5552e": {
      "address": "0xD094E3714ABeF56daC3C41b873b989B753E21f37",
      "txHash": "0xc6caf31189346478ea85e22ab5fa233ac4a108287bceeaee31d82042e07d62ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Merchandise",
            "label": "game",
            "type": "t_contract(CryptoBlades)19767",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:28"
          },
          {
            "contract": "Merchandise",
            "label": "skillOracle",
            "type": "t_contract(IPriceOracle)19784",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:29"
          },
          {
            "contract": "Merchandise",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:31"
          },
          {
            "contract": "Merchandise",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:32"
          },
          {
            "contract": "Merchandise",
            "label": "itemPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:34"
          },
          {
            "contract": "Merchandise",
            "label": "nextOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:36"
          },
          {
            "contract": "Merchandise",
            "label": "lowestUnprocessedOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:37"
          },
          {
            "contract": "Merchandise",
            "label": "orderBuyer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:38"
          },
          {
            "contract": "Merchandise",
            "label": "orderPaidAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:39"
          },
          {
            "contract": "Merchandise",
            "label": "orderBaskets",
            "type": "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:40"
          },
          {
            "contract": "Merchandise",
            "label": "orderData",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:41"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)19767": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)19784": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint256 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "01d7ff7bbdb0bb5c7e26b203901a0f0544ddefea80665b917a571c59f780705d": {
      "address": "0xC01D362B75dB614Aa0507cDAc15D7E43CFc09133",
      "txHash": "0x899e0f2da4b24f65cb8e9273aa4efb783c85d7cc2e44503828f24069cf77004d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)31009",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:41"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)19803",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:42"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:44"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)25215",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)19767",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:47"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:51"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:52"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:54"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)5578",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:57"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:59"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:60"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:62"
          }
        ],
        "types": {
          "t_contract(Weapons)31009": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)19803": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)25215": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)19767": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)5578": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)31456_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)31456_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)34651_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)34651_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)34386_storage"
              }
            ]
          },
          "t_struct(Set)34386_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7fd0f1f24ee6689a39072d41c8bc37c686d53e738f692a27a33a46b11abd336c": {
      "address": "0x703F5Ad13fbB07e7384c1f170e1044E33D365f90",
      "txHash": "0x25611ce603cf123bc4311bc3fda9793f85ff834bfb9ec5787c75c4a08076d73e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)16795",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:55"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)31741",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)37389",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)20516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)20535",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:129"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:131"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:134"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:140"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:143"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:150"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)13852",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)20552",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1619",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)17190_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)17209_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:201"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:202"
          }
        ],
        "types": {
          "t_contract(Characters)16795": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)31741": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)37389": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)20516": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)20535": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13852": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)20552": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1619": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)17190_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)17190_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)17209_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)17209_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)32188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)35383_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)35383_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)35118_storage"
              }
            ]
          },
          "t_struct(Set)35118_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "97593c31f9988f5f0367155f5e6f27c512d0fab7d066a80104e1c7864cfb14f2": {
      "address": "0x7f25686b5a211280C2555c08B7e6d2930e7e87e6",
      "txHash": "0xae14a232169a8b37a6c5c0ca3683991142ce38f6c0f8739ab0dd0ddac61c8cf4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Merchandise",
            "label": "game",
            "type": "t_contract(CryptoBlades)20499",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:30"
          },
          {
            "contract": "Merchandise",
            "label": "skillOracle",
            "type": "t_contract(IPriceOracle)20516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:31"
          },
          {
            "contract": "Merchandise",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:33"
          },
          {
            "contract": "Merchandise",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:34"
          },
          {
            "contract": "Merchandise",
            "label": "itemPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:36"
          },
          {
            "contract": "Merchandise",
            "label": "nextOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:38"
          },
          {
            "contract": "Merchandise",
            "label": "lowestUnprocessedOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:39"
          },
          {
            "contract": "Merchandise",
            "label": "orderBuyer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:40"
          },
          {
            "contract": "Merchandise",
            "label": "orderPaidAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:41"
          },
          {
            "contract": "Merchandise",
            "label": "orderBaskets",
            "type": "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:42"
          },
          {
            "contract": "Merchandise",
            "label": "orderData",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:43"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)20499": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)20516": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint256 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)32188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)35383_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)35383_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)35118_storage"
              }
            ]
          },
          "t_struct(Set)35118_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a787bbd85c97419ffc9140387539e1465793c17454edcc0d76bd4b553bbbdf5e": {
      "address": "0xc35DddF05fbf80A9E129AB5B3f5ABC0fDfd6F5c5",
      "txHash": "0x40da0332f43a866076f66928f3a86bae2f974b346af9ee0b6d42c7f24b572e32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:18"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)14058_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:20"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)20499",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:35"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)14058_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)14058_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)20499": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)32188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)35383_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)35383_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)35118_storage"
              }
            ]
          },
          "t_struct(Set)35118_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d05f9efd6a517b9c49b5d3546e8b0d6e377d203de1f40c1fc2fe8de4c28e971d": {
      "address": "0x583A77245564E100A7654f024125A6Edcd424f33",
      "txHash": "0x0a373882462a4265c6dcf4ddb963801473e5ea7a369d6a7a61d945d690bd6404",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)31741",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:26"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)16795",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:27"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)10777",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)15348",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)6423",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)15156",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)5991",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:34"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)38434_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:36"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:38"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)38434_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:40"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:42"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:67"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:68"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)10884_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:76"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:80"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)38313_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:83"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:92"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)38434_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:112"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:114"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)10947_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:115"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:116"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)38434_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:120"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:123"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:125"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)20499",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:127"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:128"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:131"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:133"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)13852",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:135"
          },
          {
            "contract": "NFTStorage",
            "label": "_localChainPrefix",
            "type": "t_string_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:137"
          }
        ],
        "types": {
          "t_contract(Weapons)31741": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)16795": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)10777": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)15348": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)6423": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)15156": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)5991": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)38434_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)38434_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)38434_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38048_storage"
              }
            ]
          },
          "t_struct(Set)38048_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)10884_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)10884_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)38313_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38048_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)10947_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)10947_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)20499": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)13852": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)32188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)32188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)35383_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)35383_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)35118_storage"
              }
            ]
          },
          "t_struct(Set)35118_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0b3b95d9d174c86ce9f5847e663953c887b2d5ebc6593d73b16282b8050d2d64": {
      "address": "0x88f264c18255592F101A04694BCF664FEB6DE780",
      "txHash": "0x8c3c5b5d659a35329628886de3013034b8444327db436472c405fd8a4ce080fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)32192_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)16795",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:55"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)31745",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)37393",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)20520",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)20539",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:129"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:131"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:134"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:140"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:143"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:150"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)13852",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)20556",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1619",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)17190_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)17209_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:201"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:202"
          }
        ],
        "types": {
          "t_contract(Characters)16795": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)31745": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)37393": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)20520": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)20539": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13852": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)20556": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1619": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)17190_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)17190_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)17209_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)17209_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)32192_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)32192_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)35387_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)35387_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)35122_storage"
              }
            ]
          },
          "t_struct(Set)35122_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ebc52d11254bdb60909e94dd7367349d55420ec3f52be14f2f56cdd6363ecbd1": {
      "address": "0x236777456dD5159Da6c38A0E24f46e30C6f9e326",
      "txHash": "0x0f2288650fa420187d5c7c5b69e2f01921166315664917715518e71af18e48ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)32410_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:18"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)14123_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:20"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)20721",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:35"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:37"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:38"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Treasury.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)14123_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)14123_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)20721": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)32410_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)32410_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)35605_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)35605_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)35340_storage"
              }
            ]
          },
          "t_struct(Set)35340_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a906733071436f827418f88e942360d3d87aafb9848561ef2beea6f429ebae83": {
      "address": "0x13B287CF4D1003d91D7cF847CB98275f08785F43",
      "txHash": "0x6f529e6034209d45951073e6d52a2e72991797ad713cf6188af253ca2dd8d2d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)20476",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:55"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)35544",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)41192",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)24142",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)24161",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:129"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:131"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:134"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:140"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:143"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:150"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)13516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)24178",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1629",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)20871_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)20890_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:201"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:202"
          }
        ],
        "types": {
          "t_contract(Characters)20476": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)35544": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)41192": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)24142": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)24161": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13516": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)24178": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1629": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)20871_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)20871_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)20890_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)20890_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1c714f7fd76d455b5935b4edc37f02adb6971616b787423d7d524da924a4e604": {
      "address": "0xE7701bf0F0E3C8B16A717FCcBED5e4c4D9e46B31",
      "txHash": "0x75642c4d496605d6ba7adcde495376c80b074f0b0947b23a37c92d84f08cdf0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)39307_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)38684_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)28019_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)28024_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)13516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:75"
          },
          {
            "contract": "Shields",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:77"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)28019_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)28019_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)28024_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)28024_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)13516": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)39307_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)39307_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)38684_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)38366_storage"
              }
            ]
          },
          "t_struct(Map)38366_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)38358_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)38358_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)38358_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1bfd3ea991a8b320986794889bc0dc111df5bfa0af91d7011d754f0a416e1191": {
      "address": "0x35211FD2ADfC77596C204610865aF4dbE4E56a45",
      "txHash": "0x5d04a9e0352276c94ec252e123cc033b4c52192070cc42b3551741b1a3d092ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)39307_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)38684_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)19165_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:95"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)19170_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:101"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:104"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)13516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:106"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:108"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:109"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:111"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:113"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:114"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:116"
          }
        ],
        "types": {
          "t_array(t_struct(Character)19165_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)19165_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)19170_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)19170_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)13516": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)39307_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)39307_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)38684_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)38366_storage"
              }
            ]
          },
          "t_struct(Map)38366_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)38358_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)38358_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)38358_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c731e235ba100902eea52a9248acf297f4810bcd7dfd047a1dec29f019f018f": {
      "address": "0x33308cee4A0Fe9de469beB2CE3Dc288cd7BFcd34",
      "txHash": "0xa051ca520f22dd1b4064050f8dd662a674e9631efbf4a43f53777bb333f4b942",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)39307_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)38684_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)32554_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)32566_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)32561_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:96"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:101"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:106"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:109"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:112"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:114"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:119"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)13516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:121"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:127"
          },
          {
            "contract": "Weapons",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:129"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)32554_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)32554_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)32566_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)32566_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)32561_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)32561_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)13516": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)39307_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)39307_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)38684_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)38366_storage"
              }
            ]
          },
          "t_struct(Map)38366_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)38358_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)38358_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)38358_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e193c916eafc108fd4598afa30ccb3f010e6a387d88b00f79e1e4a4be9cc2687": {
      "address": "0xd1aEdEE4214630E7CA93De5c535b4838d8675c3e",
      "txHash": "0xe650ad8df2654e3f214bb04d4174becfd519bdbcd5b5e8ba926a33bc1ea2164c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)24125",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:47"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)20476",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:48"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)35544",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:49"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)13516",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:50"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:60"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:61"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:62"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:63"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:68"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:70"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)25163_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:79"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:81"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)24125": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)20476": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)35544": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)13516": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)25163_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)25163_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)25163_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "60e24cf32c05c8118dd7bffc856a763cbb4fd0698b57187d052ab4f111afc24a": {
      "address": "0xAB839F78Aff8F26c66A8C92d9e3A12744C9313F5",
      "txHash": "0xa08ff585d8a599cf89aaf18207a156b4b21f8e9b81250c3f8ffd927160e842e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)35544",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:40"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)24161",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:41"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:43"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)29677",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:45"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)24125",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:50"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:51"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:53"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:55"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)5588",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:58"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:59"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:61"
          }
        ],
        "types": {
          "t_contract(Weapons)35544": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)24161": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)29677": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)24125": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)5588": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "02a5586d519143013cb51631ee004dd1c4ba140fe8056d1f90401778b1efe895": {
      "address": "0x609fd790D0c1E1b875f4990DD5Ac358EE5CC1a7a",
      "txHash": "0xaa6e46a8f0c6da7c7a0d6d434fb0476a05cc04ce3c705430ccbdaac50825c674",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Merchandise",
            "label": "game",
            "type": "t_contract(CryptoBlades)24125",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:30"
          },
          {
            "contract": "Merchandise",
            "label": "skillOracle",
            "type": "t_contract(IPriceOracle)24142",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:31"
          },
          {
            "contract": "Merchandise",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:33"
          },
          {
            "contract": "Merchandise",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:34"
          },
          {
            "contract": "Merchandise",
            "label": "itemPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:36"
          },
          {
            "contract": "Merchandise",
            "label": "nextOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:38"
          },
          {
            "contract": "Merchandise",
            "label": "lowestUnprocessedOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:39"
          },
          {
            "contract": "Merchandise",
            "label": "orderBuyer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:40"
          },
          {
            "contract": "Merchandise",
            "label": "orderPaidAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:41"
          },
          {
            "contract": "Merchandise",
            "label": "orderBaskets",
            "type": "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:42"
          },
          {
            "contract": "Merchandise",
            "label": "orderData",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:43"
          },
          {
            "contract": "Merchandise",
            "label": "externalOrderId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Merchandise.sol:44"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)24125": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)24142": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint256 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)35991_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)35991_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)39186_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)39186_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)38921_storage"
              }
            ]
          },
          "t_struct(Set)38921_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7397f4f562574b83aefae27a46b09b7990ae48ed35a30e71d5609f175333119a": {
      "address": "0x9679517Bdfec8f130B7eC79e92a6c16472E38Cf1",
      "txHash": "0xb73034e606192e97606f7d312ce63385d04f8c6476d3d560279df79c9ec8fff3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)40930_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)40307_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)37614_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLand",
            "label": "landMinted",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:28"
          },
          {
            "contract": "CBKLand",
            "label": "landData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:30"
          },
          {
            "contract": "CBKLand",
            "label": "landStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:32"
          },
          {
            "contract": "CBKLand",
            "label": "landBoolData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:35"
          },
          {
            "contract": "CBKLand",
            "label": "landAddressData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:38"
          },
          {
            "contract": "CBKLand",
            "label": "tierStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CBKLand.sol:41"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)37614_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)37614_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)40809_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)40809_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40544_storage"
              }
            ]
          },
          "t_struct(Set)40544_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)40930_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)40930_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40544_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)40307_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)39989_storage"
              }
            ]
          },
          "t_struct(Map)39989_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)39981_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)39981_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)39981_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d9a957b9b1ffa1d059ee751f4433cabe9ff2446c4b2c419ec1c11d402d05a70e": {
      "address": "0x4492dC6d9Ae35F7a54c8daC1b4b5e7A2cf0A941B",
      "txHash": "0x76391c702cb98bdd8322a9939272d7314d3227ab9d6f9105cd23e4ade010c79c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)42815",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)42815",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)24408",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)42815": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)24408": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "133d8d1b68549b9e822076205b8f3a37ebc21a1c7830a6526766db5e6c70b3b3": {
      "address": "0xbbB266A71F18C4cD8CF80251a00804455756818c",
      "txHash": "0xa4a1f9e2f8371b38d4bb58597186f44f731bff6fb07b5d9cb62eb4c79cab3f51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)42815",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)42815",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)24408",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)42815": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)24408": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c4beeeaf5b2c42bdabb424b933993a3356af8757c40a562ac36c64fd6ea1c545": {
      "address": "0x622C377BcA65cD5ddfFA90762E2340D4814bf92f",
      "txHash": "0xf2f208ee9118ba377d944c4969896e86f882f511158aa45b4db7b85ab687b082",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)40930_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)40307_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)37614_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)19303_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:100"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)19308_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:101"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:106"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:109"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)14170",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:111"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:113"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:114"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:116"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:118"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:119"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:121"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)7882",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:124"
          }
        ],
        "types": {
          "t_array(t_struct(Character)19303_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)19303_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)19308_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)19308_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)14170": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)7882": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)37614_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)37614_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)40809_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)40809_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40544_storage"
              }
            ]
          },
          "t_struct(Set)40544_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)40930_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)40930_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40544_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)40307_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)39989_storage"
              }
            ]
          },
          "t_struct(Map)39989_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)39981_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)39981_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)39981_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "495ca70d62262d25eece276071f7cab7dcba049c22a7ab80230165351fba055f": {
      "address": "0x262c104c8e68506dcE4ec705482dd833e84CcF5B",
      "txHash": "0xdef7d394f09f84a5e7c3ee7c75465761059a95e4ee8b22dac8bb9adcfbe6b1b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)37614_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Garrison",
            "label": "characters",
            "type": "t_contract(Characters)20759",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:18"
          },
          {
            "contract": "Garrison",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)43739_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:20"
          },
          {
            "contract": "Garrison",
            "label": "userGarrison",
            "type": "t_mapping(t_address,t_struct(UintSet)43860_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:22"
          },
          {
            "contract": "Garrison",
            "label": "characterOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:23"
          },
          {
            "contract": "Garrison",
            "label": "allCharactersInGarrison",
            "type": "t_struct(UintSet)43860_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:24"
          }
        ],
        "types": {
          "t_contract(Characters)20759": {
            "label": "contract Characters"
          },
          "t_struct(AddressSet)43739_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43474_storage"
              }
            ]
          },
          "t_struct(Set)43474_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UintSet)43860_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)43860_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43474_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)37614_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)37614_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)40809_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)40809_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40544_storage"
              }
            ]
          },
          "t_struct(Set)40544_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2ef7bb486dca280cd2a5910666547e87aa6390960030db0018d74c67942c67a0": {
      "address": "0xaA2270f4098E9A5a972fde573679BdE9A7A6ab2c",
      "txHash": "0xb7c205bf551980eb15a8a91a46e7c0c9da6faee43eead1754ab6d47997389a88",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)40971_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)40348_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)37655_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)19344_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)19349_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:103"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:108"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:111"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)14170",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:113"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:116"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:118"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:120"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:121"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:123"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)7882",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:126"
          }
        ],
        "types": {
          "t_array(t_struct(Character)19344_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)19344_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)19349_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)19349_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)14170": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)7882": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)37655_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)37655_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)40850_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)40850_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40585_storage"
              }
            ]
          },
          "t_struct(Set)40585_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)40971_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)40971_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40585_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)40348_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)40030_storage"
              }
            ]
          },
          "t_struct(Map)40030_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)40022_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)40022_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)40022_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1382b2c028b9216fbf064eb36306f87aa9cc1a5c02e9b7229653452938fe8bf": {
      "address": "0x6B207e7EeF93f9603eCC9f69605dF05658033872",
      "txHash": "0xccf04036ec6530628ea3dd61a3cea16b94e2ed3a3c26631630294543c9bdad3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)37674_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:18"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)17506_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:20"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)24468",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:35"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:37"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:38"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)17506_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)17506_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)24468": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)37674_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)37674_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)40869_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)40869_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40604_storage"
              }
            ]
          },
          "t_struct(Set)40604_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ca1957bdd9dfbddad525785bf29efb621bf2df8fe343857a3420b9de790673cf": {
      "address": "0x3693290f5B502A0D3be9510c88d05f8e66c17AB2",
      "txHash": "0xb1f8f9eb905e851bc3687ed925ba7bbac2ccf3fca43555a9c30080010bbd0384",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)37729_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)24523",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:44"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)20874",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:45"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)37282",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)30075",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)42930",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)24559",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:52"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:54"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:56"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:58"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:60"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:62"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:64"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:66"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:68"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:70"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:72"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:74"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:76"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:78"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:80"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:82"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)43975_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:84"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)14216_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:87"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)14223_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:89"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:91"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:93"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:95"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:97"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:99"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:101"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:103"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:105"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:107"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:109"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:111"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:113"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)43975_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:115"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)24523": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)20874": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)37282": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)30075": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)42930": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)24559": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)43975_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43589_storage"
              }
            ]
          },
          "t_struct(Set)43589_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)14216_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)14216_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)14223_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)14223_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)43975_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)37729_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)37729_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)40924_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)40924_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)40659_storage"
              }
            ]
          },
          "t_struct(Set)40659_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e56bcc762182f42a55b5df99c48bd8a45af9786d5c234cf7608972ef0b32db1": {
      "address": "0x1C7195cc9b4c9981602F6Bc3e41cBd6E36B497C0",
      "txHash": "0xae58f2c3336cde05d7e7fbef70c0922fc05239abba826e8dc8d49a978f43eca1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)39897",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:40"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)27034",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:41"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:43"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)32655",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:45"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)26998",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:50"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:51"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:53"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:55"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)6163",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:58"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:59"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:61"
          }
        ],
        "types": {
          "t_contract(Weapons)39897": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)27034": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)32655": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)26998": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)6163": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c76a7840a335999aa5a6941485c92a52ea6027773bda7168d49421938f80bca2": {
      "address": "0xF005a2bee4088F1b069D784d2fBeF93F9549D647",
      "txHash": "0x9838eb4ff88a166442f0d548ff9be83a6e8e04651d411282c9791dec97bebd58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)39897",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:27"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)11878",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)21055",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)7230",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)20863",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)6798",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:33"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:35"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)46590_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:37"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:39"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)46590_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:41"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:43"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:68"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)11986_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:73"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:77"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:81"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)46469_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:84"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:94"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)46590_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:114"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:116"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)12052_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:118"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:119"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)46590_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:122"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:125"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:127"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)26998",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:129"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:130"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:133"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:135"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)15290",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:137"
          },
          {
            "contract": "NFTStorage",
            "label": "_localChainPrefix",
            "type": "t_string_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:139"
          },
          {
            "contract": "NFTStorage",
            "label": "shields",
            "type": "t_contract(Shields)32655",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:141"
          }
        ],
        "types": {
          "t_contract(Weapons)39897": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)11878": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)21055": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)7230": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)20863": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)6798": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)46590_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)46590_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)46590_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_struct(Set)46204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)11986_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)11986_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)46469_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)12052_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)12052_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)26998": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)15290": {
            "label": "contract Promos"
          },
          "t_contract(Shields)32655": {
            "label": "contract Shields"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "03cb19d4d35dfd0cfd4c254fb28020306b385d95de0f6c2f1e752eeb83d01e19": {
      "address": "0x013897602e1F220561Da57E8d3b705AA933e7344",
      "txHash": "0xcdeb0afde8e3786e2459d6ca293c628f96559539ebe350552061465be2c7b7f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)43660_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)43037_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)30852_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)30857_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)15290",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:75"
          },
          {
            "contract": "Shields",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\shields.sol:77"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)30852_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)30852_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)30857_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)30857_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)15290": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)43660_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)43660_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)43037_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)42719_storage"
              }
            ]
          },
          "t_struct(Map)42719_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)42711_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)42711_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)42711_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e84fc5886db6f4a95c540c813a0da8592034baaae57e1d74d9d49a0101135698": {
      "address": "0x6F09af5a3461e8c80E49763a438D714eaFAE7390",
      "txHash": "0xf076b4ccc724c1540c5cd7c59a99621a2f2a91fffb9ffd459a291c129ccb445b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SafeRandoms",
            "label": "currentSeedIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:73"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedIndexBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:74"
          },
          {
            "contract": "SafeRandoms",
            "label": "firstRequestBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:75"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedHashes",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:76"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:79"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedSalts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:80"
          },
          {
            "contract": "SafeRandoms",
            "label": "queuedSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:81"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionLimited",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:83"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionBlocks",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:84"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitResolutionEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:86"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitRequestEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:87"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitPopEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SafeRandoms.sol:88"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ee59c5b22282c71fa91458ba3d691c1846fb000f786aa59b7eaf09395f2bb378": {
      "address": "0x4bc7Bee84d60f1fA2f627e7e248DCa7F80f5685E",
      "txHash": "0x7a83dacf33e01c0bc56b695983c7b5a7a2a4478896e4c76a9e06f5020d91b89a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)43660_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)43037_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)36872_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)36884_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)36879_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:96"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:101"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:106"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:109"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:112"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:114"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:119"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)15290",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:121"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:127"
          },
          {
            "contract": "Weapons",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\weapons.sol:129"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)36872_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)36872_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)36884_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)36884_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)36879_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)36879_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)15290": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)43660_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)43660_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)43037_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)42719_storage"
              }
            ]
          },
          "t_struct(Map)42719_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)42711_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)42711_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)42711_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa96259bc2e0aa30e4f55b99a42d6a49c36118cd5438cdc96f2915b07bc5ec3c": {
      "address": "0x393cA9ee60dF8fb81bd374EAf9D1FE148df2D7ff",
      "txHash": "0xf8458ab3e234040f843f87c2f108c87cb287c610f5a41a1fb94622c26e042681",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)26998",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)39897",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)32655",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)45545",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)27034",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:51"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:54"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:56"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:58"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:60"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:62"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:64"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:66"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:68"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:70"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:72"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:74"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:76"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:78"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:80"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:82"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:84"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)46590_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:86"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)15337_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:89"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)15344_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:91"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:93"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:95"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:97"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:99"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:101"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:103"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:105"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:107"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:109"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:111"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:113"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:115"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)46590_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:117"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:119"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:120"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)26998": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)39897": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)32655": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)45545": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)27034": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)46590_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_struct(Set)46204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)15337_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)15337_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)15344_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)15344_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)46590_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85f94dd4293e7ab72f3afda5511f9552ead108f0058f92fecf585ddcf9688cec": {
      "address": "0x7738c88a1795a8b48C5A8429a5F848747638a0E9",
      "txHash": "0xf27fba6d24b14ae003eb34a30be812096caddf0e76301b0bc30fc85025530ebb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)39897",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)45545",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)27015",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)27034",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:60"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:130"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:132"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:135"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:138"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:142"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:145"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:147"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:149"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)15290",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:162"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)27051",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:168"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:171"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1671",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)23711_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)23730_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:197"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:200"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:202"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:203"
          }
        ],
        "types": {
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)39897": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)45545": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)27015": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)27034": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15290": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)27051": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1671": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)23711_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)23711_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)23730_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)23730_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "69f44c0b100bec7ddfd5a47fa69bc29bec6d276f38f45b85a394077c405f7565": {
      "address": "0x32C7c6d6Ca1ac586BA28E81F39B3aeEEaE432938",
      "txHash": "0xaeb85e8d184c40a513ded02f8dacd0d51c6ae949b8f03fc57c7548a932650040",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)26998",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:49"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:50"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)39897",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:51"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)15290",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:52"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:62"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:63"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:64"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:70"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)28037_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:76"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:77"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:81"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\raid1.sol:83"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)26998": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)39897": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)15290": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)28037_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)28037_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)28037_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "95f758510d4ac618cf362308573cb1756ade60b330a7de18b3e763a1822c2eb4": {
      "address": "0x3D69c00b917c01885657Fd55550fE64Ad1AEc5BC",
      "txHash": "0x9a80c327881a53dff224a95aafa7b8f858f846a7bcf99f5cf5ebc73423bb4ec7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTMarket",
            "label": "skillToken",
            "type": "t_contract(IERC20)45545",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:86"
          },
          {
            "contract": "NFTMarket",
            "label": "taxRecipient",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:87"
          },
          {
            "contract": "NFTMarket",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)9377_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:90"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenIDs",
            "type": "t_mapping(t_address,t_struct(UintSet)46590_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:92"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenTypes",
            "type": "t_struct(AddressSet)46469_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:94"
          },
          {
            "contract": "NFTMarket",
            "label": "isTokenBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:97"
          },
          {
            "contract": "NFTMarket",
            "label": "isUserBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:99"
          },
          {
            "contract": "NFTMarket",
            "label": "tax",
            "type": "t_mapping(t_address,t_int128)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:102"
          },
          {
            "contract": "NFTMarket",
            "label": "freeTax",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:104"
          },
          {
            "contract": "NFTMarket",
            "label": "defaultTax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:105"
          },
          {
            "contract": "NFTMarket",
            "label": "allowedTokenTypes",
            "type": "t_struct(AddressSet)46469_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:108"
          },
          {
            "contract": "NFTMarket",
            "label": "weapons",
            "type": "t_contract(Weapons)39897",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:110"
          },
          {
            "contract": "NFTMarket",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:111"
          },
          {
            "contract": "NFTMarket",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)27015",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:113"
          },
          {
            "contract": "NFTMarket",
            "label": "addFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:114"
          },
          {
            "contract": "NFTMarket",
            "label": "changeFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:115"
          },
          {
            "contract": "NFTMarket",
            "label": "nftTargetBuyers",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:118"
          },
          {
            "contract": "NFTMarket",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2190",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTMarket.sol:120"
          }
        ],
        "types": {
          "t_contract(IERC20)45545": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)9377_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarket.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)9377_storage)": {
            "label": "mapping(uint256 => struct NFTMarket.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)9377_storage": {
            "label": "struct NFTMarket.Listing",
            "members": [
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)46590_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)46590_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_struct(Set)46204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)46469_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_int128)": {
            "label": "mapping(address => int128)"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)39897": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_contract(IPriceOracle)27015": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(BurningManager)2190": {
            "label": "contract BurningManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c60b374d332ebb44eb28cf0f40db84c824abec19038de0b644ef67dbc8dbd444": {
      "address": "0xA29a5e32DD453De88F7EdCb89bfd69860DA1A4a7",
      "txHash": "0x909dc55f652b12fa0af0a044e87e14ea25f6b1543ea3e8d5012c701a715cf4b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)43660_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)43037_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)21464_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)21469_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:103"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:108"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:111"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)15290",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:113"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:116"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:118"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:120"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:121"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:123"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)8563",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:126"
          }
        ],
        "types": {
          "t_array(t_struct(Character)21464_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)21464_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)21469_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)21469_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15290": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)8563": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)43660_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)43660_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)43037_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)42719_storage"
              }
            ]
          },
          "t_struct(Map)42719_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)42711_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)42711_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)42711_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2754c4eb8f226f2e72acbcbeb1341327f1160e6f5128628a18113bdf740e50d9": {
      "address": "0x6801a7cA16F5aBD8e0338F6F41a6B524dDCdb3eD",
      "txHash": "0x5d582232292aa4e0770c8f1b543c91b629370841a556fd8a1825d9fe46795ea8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Garrison",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Garrison.sol:20"
          },
          {
            "contract": "Garrison",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)46469_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Garrison.sol:22"
          },
          {
            "contract": "Garrison",
            "label": "userGarrison",
            "type": "t_mapping(t_address,t_struct(UintSet)46590_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Garrison.sol:24"
          },
          {
            "contract": "Garrison",
            "label": "characterOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Garrison.sol:25"
          },
          {
            "contract": "Garrison",
            "label": "allCharactersInGarrison",
            "type": "t_struct(UintSet)46590_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Garrison.sol:26"
          },
          {
            "contract": "Garrison",
            "label": "game",
            "type": "t_contract(CryptoBlades)26998",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Garrison.sol:28"
          }
        ],
        "types": {
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_struct(AddressSet)46469_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_struct(Set)46204_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UintSet)46590_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)46590_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46204_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(CryptoBlades)26998": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d138b015eab76ccb380cec40fdc058edeef07bf98adf53fab589b9f85d9a52f0": {
      "address": "0xe6D98Dc214bB7f0501912DFBe30B1118992F03Ef",
      "txHash": "0x3af6204691a2c652a9a5660b1d48fbf0abaa2170291163eb39664f79957f3771",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BurningManager",
            "label": "characters",
            "type": "t_contract(Characters)23260",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:16"
          },
          {
            "contract": "BurningManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)26998",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:17"
          },
          {
            "contract": "BurningManager",
            "label": "garrison",
            "type": "t_contract(Garrison)8563",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:18"
          },
          {
            "contract": "BurningManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:20"
          },
          {
            "contract": "BurningManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:22"
          }
        ],
        "types": {
          "t_contract(Characters)23260": {
            "label": "contract Characters"
          },
          "t_contract(CryptoBlades)26998": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Garrison)8563": {
            "label": "contract Garrison"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40344_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40344_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43539_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43539_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43274_storage"
              }
            ]
          },
          "t_struct(Set)43274_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "af216fc244bcc08403111d345bbfeaa4e876339e0999b4abf10210491af7ab44": {
      "address": "0x9851D3AF2f252f98822D6fca828964952377c995",
      "txHash": "0x873fc511f0e4811f3d241b4bdc18efc0e3f0443af69cdc421f83e7818b27b02f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)39964",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:27"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)23327",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)11896",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)21112",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)7248",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)20920",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)6816",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:33"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:35"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)46657_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:37"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:39"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)46657_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:41"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:43"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:68"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)12004_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:73"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:77"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:81"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)46536_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:84"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:94"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)46657_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:114"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:116"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)12070_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:118"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:119"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)46657_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:122"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:125"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:127"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)27065",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:129"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:130"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:133"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:135"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)15347",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:137"
          },
          {
            "contract": "NFTStorage",
            "label": "_localChainPrefix",
            "type": "t_string_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:139"
          },
          {
            "contract": "NFTStorage",
            "label": "shields",
            "type": "t_contract(Shields)32722",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\NFTStorage.sol:141"
          }
        ],
        "types": {
          "t_contract(Weapons)39964": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)23327": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)11896": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)21112": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)7248": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)20920": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)6816": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)46657_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)46657_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)46657_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46271_storage"
              }
            ]
          },
          "t_struct(Set)46271_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)12004_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)12004_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)46536_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46271_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)12070_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)12070_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)27065": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)15347": {
            "label": "contract Promos"
          },
          "t_contract(Shields)32722": {
            "label": "contract Shields"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40411_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)40411_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43606_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43606_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43341_storage"
              }
            ]
          },
          "t_struct(Set)43341_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "44d1c0646a25e647e187d4d1033047d41949ac25db0ade0b4fe317ed4abf707f": {
      "address": "0x7907c3345a645A494d5fF4924CDc89e5d892c800",
      "txHash": "0x42f320a3633e6b05d9cd6d7c3f70f7eb082048c487016bf1937c71d7e66ce668",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)43727_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)43104_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)21521_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)21526_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:103"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:108"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:111"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)15347",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:113"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:116"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:118"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:120"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:121"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:123"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)8581",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\characters.sol:126"
          }
        ],
        "types": {
          "t_array(t_struct(Character)21521_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)21521_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)21526_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)21526_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15347": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)8581": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40411_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40411_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43606_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43606_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43341_storage"
              }
            ]
          },
          "t_struct(Set)43341_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)43727_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)43727_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43341_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)43104_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)42786_storage"
              }
            ]
          },
          "t_struct(Map)42786_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)42778_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)42778_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)42778_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b188f4e698636700017624c1b90b0c1ab0326baabf2cf44ef24ceec07f76b1e": {
      "address": "0xE3694C7d5Df12Dd2Ee74222B2A3095B8635A69bf",
      "txHash": "0xdb67a89501297c49f589e7d90961d738dd15c88378e00143ce1b69c1fac57720",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BurningManager",
            "label": "characters",
            "type": "t_contract(Characters)23327",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:16"
          },
          {
            "contract": "BurningManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)27065",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:17"
          },
          {
            "contract": "BurningManager",
            "label": "garrison",
            "type": "t_contract(Garrison)8581",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:18"
          },
          {
            "contract": "BurningManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:20"
          },
          {
            "contract": "BurningManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\BurningManager.sol:22"
          }
        ],
        "types": {
          "t_contract(Characters)23327": {
            "label": "contract Characters"
          },
          "t_contract(CryptoBlades)27065": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Garrison)8581": {
            "label": "contract Garrison"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40411_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40411_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43606_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43606_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43341_storage"
              }
            ]
          },
          "t_struct(Set)43341_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dbcc70d733989c4e5e55f6f53b795f008f9b3dce3bf5cc18bab8edb25f04e91e": {
      "address": "0xb41da8E8DaF28e3b073D6D9F8b9A9C99F0F411Fb",
      "txHash": "0xa8886a399ce6d674ef2dc5a5b143e5362167e7f75768352efdc9de98f241ae14",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)40421_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:18"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)19669_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:20"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)27075",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:35"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:37"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:38"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:39"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)19669_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)19669_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)27075": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)40421_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)40421_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)43616_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)43616_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)43351_storage"
              }
            ]
          },
          "t_struct(Set)43351_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4159a1a4f97f37e208839b739f31a65e25f2b669beb17f4baa0a4cc574d97054": {
      "address": "0x38400Daa749d9965f8b849BbbC49CD70733B1175",
      "txHash": "0x10418e3351193325f6c3f60170a942cfa7c69fb81c4adcd6f33db6b813f8b85c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:19"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)21858_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:24"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)29461",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:36"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:38"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:39"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)21858_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)21858_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)29461": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43248_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46443_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46443_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(Set)46178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4f79c4ab5a63d561565ac076c5d94c94b41e6a4261c01bab4f639f69e42efc40": {
      "address": "0xebaaB8578d8dd9600cF138E4F5fe51117e8E8DdF",
      "txHash": "0x55998ec728df92aef8936c585ded0c3b2a0da0f828f94d4546cc3d18648b4549",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)46564_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)45941_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)23777_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:106"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)23782_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:107"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:112"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)15381",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:117"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:119"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:120"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:122"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:124"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:125"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:133"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)8576",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:136"
          }
        ],
        "types": {
          "t_array(t_struct(Character)23777_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)23777_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)23782_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)23782_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15381": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)8576": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43248_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46443_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46443_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(Set)46178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)46564_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)46564_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)45941_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)45623_storage"
              }
            ]
          },
          "t_struct(Map)45623_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)45615_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)45615_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)45615_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a43898b87a7b338f510903a495024db0ff10607b5f39c3b310640da8435ed629": {
      "address": "0xc3E2132f4Dd12E8c61f39C00FdFd7dFc614cdD2E",
      "txHash": "0x21da3db08f4a94112c7a44e4dc3e8c5cf0daf60a3cbddbbef2c17e70ce244e16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)46564_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)45941_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)39790_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:93"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)39802_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)39797_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:97"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:102"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:108"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:110"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:113"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:118"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)15381",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:120"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:122"
          },
          {
            "contract": "Weapons",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:124"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)39790_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)39790_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)39802_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)39802_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)39797_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)39797_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)15381": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43248_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46443_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46443_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(Set)46178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)46564_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)46564_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)45941_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)45623_storage"
              }
            ]
          },
          "t_struct(Map)45623_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)45615_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)45615_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)45615_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa3d18f7d08589276e55966c41437a61d0bdc9a08c755f8615bff8d16704f48f": {
      "address": "0x4C55fd23f437E6BfE905a8441e84BCA6c7c5aF66",
      "txHash": "0xe7a9102c4b2d44cadb35d17e99f8ea86ba80d293d7df26979f80d966ce469713",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)29461",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)25701",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)42801",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)35578",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)48449",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)29497",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:51"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:54"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:56"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:58"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:60"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:62"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:64"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:66"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:68"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:70"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:72"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:74"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:76"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:78"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:80"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:82"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:84"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)49494_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:86"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)15428_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:89"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)15435_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:91"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:93"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:95"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:97"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:99"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:101"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:103"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:105"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:107"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:109"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:111"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:113"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:115"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)49494_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:117"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:119"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:120"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)29461": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)25701": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)42801": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)35578": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)48449": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)29497": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)49494_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)49108_storage"
              }
            ]
          },
          "t_struct(Set)49108_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)15428_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)15428_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)15435_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)15435_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)49494_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43248_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46443_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46443_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(Set)46178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "10df2f81ed8fd4c2b4428415293f60c2eafb3ee533bdc59a3e0762d9b6778c68": {
      "address": "0x7EfC04B8C98FeA7d5ece774BC9D9Dc9Dea572346",
      "txHash": "0x102f22a976802cbfc19ebe8a1074dd8232d61f38650eb64e17420521253fb424",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)25701",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)42801",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)48449",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)29478",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)29497",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:60"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:130"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:132"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:135"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:138"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:142"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:145"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:147"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:149"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)15381",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:162"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)29514",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:168"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:171"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1671",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)26186_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)26205_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:197"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:200"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:202"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:203"
          }
        ],
        "types": {
          "t_contract(Characters)25701": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)42801": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)48449": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)29478": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)29497": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15381": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)29514": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1671": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)26186_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)26186_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)26205_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)26205_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43248_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43248_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46443_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46443_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46178_storage"
              }
            ]
          },
          "t_struct(Set)46178_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "125d7ca5d12871eb8acaaf12fecb0f048861254c223b2fc0ea7cc6af92d2d283": {
      "address": "0x7843Bd2aDdE5E54bD6e61C28fA89009240a48C08",
      "txHash": "0x69688b62c98c5f9b87a831b1f4846e56f7ecb6f5c7d8bf25fbdd9b51198ccfc6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)46543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)45920_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43227_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)23760_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:106"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)23765_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:107"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:112"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)15364",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:117"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:119"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:120"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:122"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:124"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:125"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:133"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)8576",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:136"
          }
        ],
        "types": {
          "t_array(t_struct(Character)23760_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)23760_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)23765_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)23765_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15364": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)8576": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43227_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43227_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46422_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46422_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46157_storage"
              }
            ]
          },
          "t_struct(Set)46157_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)46543_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)46543_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46157_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)45920_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)45602_storage"
              }
            ]
          },
          "t_struct(Map)45602_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)45594_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)45594_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)45594_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c478f81b04ad096595cd31525aa5087cadea54eb95eb05e8fafd5b4e4f17d1e9": {
      "address": "0xD981625F2657508d7dd6e522D3257277c0a2a2C1",
      "txHash": "0x346fdefd180253b57c31624df674e7c6c5e779422e3ea561e923ad4d40377fab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43227_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)25674",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:56"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)42780",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)48428",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)29457",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)29476",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:60"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:130"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:132"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:135"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:138"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:141"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:142"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:145"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:147"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:149"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)15364",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:162"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)29493",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:168"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:171"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1671",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)26159_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)26178_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:197"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:200"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:202"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:203"
          }
        ],
        "types": {
          "t_contract(Characters)25674": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)42780": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)48428": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)29457": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)29476": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)15364": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)29493": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1671": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)26159_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)26159_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)26178_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)26178_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43227_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43227_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46422_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46422_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46157_storage"
              }
            ]
          },
          "t_struct(Set)46157_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d2104e440f79eec8788dfffbb27442fb8a4488a72eef35f88121005e92f34b31": {
      "address": "0xbe99080182DBE3E580d020035995c742C4226515",
      "txHash": "0x7329c4e40eac74d226234b03351a648e4b1bb08980baf93a8881e34001cf9096",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)46612_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)45989_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43296_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Junk",
            "label": "promos",
            "type": "t_contract(Promos)15381",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\Junk.sol:23"
          },
          {
            "contract": "Junk",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\Junk.sol:25"
          },
          {
            "contract": "Junk",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\Junk.sol:27"
          }
        ],
        "types": {
          "t_contract(Promos)15381": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43296_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43296_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46491_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46491_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46226_storage"
              }
            ]
          },
          "t_struct(Set)46226_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)46612_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)46612_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46226_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)45989_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)45671_storage"
              }
            ]
          },
          "t_struct(Map)45671_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)45663_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)45663_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)45663_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d51f45d41f3c2d822107a13995b535a8e68d19ed08a2ec1ba06f746a840d3cff": {
      "address": "0xC865356dceda21CEce9b3Bb8B24CEd0A7bF8637F",
      "txHash": "0xd9c4ec8f68223bab2a4ed763a4d17dfc806f446dea9fe0b1fa913fe54bcb9872",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)46612_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)45989_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43296_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "RaidTrinket",
            "label": "promos",
            "type": "t_contract(Promos)15381",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\RaidTrinket.sol:24"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\RaidTrinket.sol:26"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenEffect",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\RaidTrinket.sol:27"
          },
          {
            "contract": "RaidTrinket",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\RaidTrinket.sol:29"
          }
        ],
        "types": {
          "t_contract(Promos)15381": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43296_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43296_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46491_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46491_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46226_storage"
              }
            ]
          },
          "t_struct(Set)46226_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)46612_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)46612_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46226_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)45989_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)45671_storage"
              }
            ]
          },
          "t_struct(Map)45671_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)45663_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)45663_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)45663_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3652c517fe06b96be0c55a30208bb97a0b7a37ec7aa4019dd88ec324cf194807": {
      "address": "0x89F72B82B9d4883E66F2ebeF0591b81cd7f9307E",
      "txHash": "0x1984ad2f08a094a24f3f949da24c88eb0eb90bfe8362868b5d7594f66330e4d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)46612_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)45989_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43296_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "KeyLootbox",
            "label": "promos",
            "type": "t_contract(Promos)15381",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\KeyLootbox.sol:14"
          },
          {
            "contract": "KeyLootbox",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\items\\KeyLootbox.sol:16"
          }
        ],
        "types": {
          "t_contract(Promos)15381": {
            "label": "contract Promos"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43296_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43296_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)46491_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)46491_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46226_storage"
              }
            ]
          },
          "t_struct(Set)46226_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)46612_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)46612_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)46226_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)45989_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)45671_storage"
              }
            ]
          },
          "t_struct(Map)45671_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)45663_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)45663_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)45663_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c25e523b40c9fd9ba823c7cd700fab0afbe1cebd1a2a91bbc50cbbe3645ce8c": {
      "address": "0xF25D014605458440eAEa9E64206969fA7E751A03",
      "txHash": "0xc3ae8852cd2e6d1765bc7502b67ae93f6e9ac1634e09f8c629eb9f333775eac3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)46254_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)32256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)28765",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)45807",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)38415",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)51455",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:51"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)32292",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:52"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:55"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:57"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:59"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:61"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:63"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:65"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:67"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:69"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:71"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:73"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:75"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:77"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:79"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:81"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:83"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:85"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)52500_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:87"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)16364_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:90"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)16371_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:92"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:94"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:96"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:98"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:100"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:102"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:104"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:106"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:108"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:110"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:112"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:114"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:116"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)52500_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:118"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:120"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:121"
          },
          {
            "contract": "PvpArena",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:123"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)32256": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)28765": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)45807": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)38415": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)51455": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)32292": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)52500_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)52114_storage"
              }
            ]
          },
          "t_struct(Set)52114_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)16364_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)16364_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)16371_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)16371_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)52500_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)46254_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)46254_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)49449_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)49449_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)49184_storage"
              }
            ]
          },
          "t_struct(Set)49184_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ecc1952f5d1ca357ee95a0bebd499a719e3a6c8b27ae9df0c65970b5f8a32ca7": {
      "address": "0x0B6Fb14D9d7fCC53abAA00c51401c9B16eA278f6",
      "txHash": "0x979fe1f02ecb4c608bd15d7ddc7e5333c07ef1a4851106c2b500587cf752eeb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)33822",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:45"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)30134",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)48096",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)40439",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)53744",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)33893",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:53"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:55"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:57"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:59"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:61"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:63"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:65"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:67"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:69"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:71"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:73"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:75"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:77"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:79"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:81"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:83"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)54789_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:85"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)16890_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:88"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)16897_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:90"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:92"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:94"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:96"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:98"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:100"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:102"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:104"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:106"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:108"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:110"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:112"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:114"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)54789_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:116"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:118"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:119"
          },
          {
            "contract": "PvpArena",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:122"
          },
          {
            "contract": "PvpArena",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PvpArena.sol:123"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)33822": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)30134": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)48096": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)40439": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)53744": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)33893": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)54789_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)54403_storage"
              }
            ]
          },
          "t_struct(Set)54403_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)16890_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)16890_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)16897_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)16897_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)54789_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "27daf0b7e41b47a994b2b60fd9422d274f44b5f1b2faf592334e0376f26181a9": {
      "address": "0x359aA083FCB5Bf1c4b424Ba550494979Ce7f61F2",
      "txHash": "0xf0cb79f6664e535d021a8d06ab314fb96ac5df71eb023778dda12af08d6e75bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51931_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51308_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48615_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)28226_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:83"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)28231_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:84"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:89"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:92"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)16871",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:94"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:97"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:99"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:101"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:110"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)9840",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:113"
          }
        ],
        "types": {
          "t_array(t_struct(Character)28226_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)28226_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)28231_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)28231_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)16871": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)9840": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48615_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48615_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51810_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51810_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51545_storage"
              }
            ]
          },
          "t_struct(Set)51545_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51931_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)51931_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51545_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51308_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50990_storage"
              }
            ]
          },
          "t_struct(Map)50990_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50982_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50982_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50982_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a773cc05b7dbfdc1625f72cb1e108f31238810fdc05159d12f37f60265dfa8e7": {
      "address": "0x75ee40e3b1E958B52c44025E353d66464ddb81fD",
      "txHash": "0x1ef7ad4340e6165be7c4ed42573f363503d3559d37a5c561fc80776b5320732b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48615_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BurningManager",
            "label": "characters",
            "type": "t_contract(Characters)30206",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:18"
          },
          {
            "contract": "BurningManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)33894",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:19"
          },
          {
            "contract": "BurningManager",
            "label": "garrison",
            "type": "t_contract(Garrison)9840",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:20"
          },
          {
            "contract": "BurningManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:22"
          },
          {
            "contract": "BurningManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:24"
          },
          {
            "contract": "BurningManager",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:28"
          },
          {
            "contract": "BurningManager",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:29"
          },
          {
            "contract": "BurningManager",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:30"
          },
          {
            "contract": "BurningManager",
            "label": "weapons",
            "type": "t_contract(Weapons)48168",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:34"
          },
          {
            "contract": "BurningManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)33946",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\BurningManager.sol:35"
          }
        ],
        "types": {
          "t_contract(Characters)30206": {
            "label": "contract Characters"
          },
          "t_contract(CryptoBlades)33894": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Garrison)9840": {
            "label": "contract Garrison"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)48168": {
            "label": "contract Weapons"
          },
          "t_contract(IPriceOracle)33946": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48615_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48615_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51810_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51810_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51545_storage"
              }
            ]
          },
          "t_struct(Set)51545_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "74ab30d51904c46eaab867ab316cdca5e56afcaef3f49c928180e5147b6239af": {
      "address": "0x2b6c1Ac6BF27f8a18c8dbD5d69B1ff42e7439dC8",
      "txHash": "0x5a57e81ed4c422164ecb4d03a7a006d81ab0e83499cbebf4c51f7a4187ca5a10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48615_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerVault",
            "label": "nfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PartnerVault.sol:19"
          },
          {
            "contract": "PartnerVault",
            "label": "currencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\PartnerVault.sol:20"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48615_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48615_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51810_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51810_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51545_storage"
              }
            ]
          },
          "t_struct(Set)51545_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "12a1f60dc072d972506a8d87385343831cce830bc69825e0e100904de5e1e3cf": {
      "address": "0x34F91bFEFAD9b2af065E3d3811A13D8aE53bB799",
      "txHash": "0x693278bbba757c194b880886b8f6f08a4538f3bbe4bb564a92f8ad04bfabc174",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SimpleQuests",
            "label": "characters",
            "type": "t_contract(Characters)30134",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:39"
          },
          {
            "contract": "SimpleQuests",
            "label": "weapons",
            "type": "t_contract(Weapons)48096",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:40"
          },
          {
            "contract": "SimpleQuests",
            "label": "junk",
            "type": "t_contract(Junk)34322",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:41"
          },
          {
            "contract": "SimpleQuests",
            "label": "trinket",
            "type": "t_contract(RaidTrinket)34939",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:42"
          },
          {
            "contract": "SimpleQuests",
            "label": "shields",
            "type": "t_contract(Shields)40439",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:43"
          },
          {
            "contract": "SimpleQuests",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2708",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:44"
          },
          {
            "contract": "SimpleQuests",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)21217",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:45"
          },
          {
            "contract": "SimpleQuests",
            "label": "partnerVault",
            "type": "t_contract(PartnerVault)16598",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:46"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextQuestID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:90"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextRewardID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:91"
          },
          {
            "contract": "SimpleQuests",
            "label": "questTemplates",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:93"
          },
          {
            "contract": "SimpleQuests",
            "label": "quests",
            "type": "t_mapping(t_uint256,t_struct(Quest)21646_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:94"
          },
          {
            "contract": "SimpleQuests",
            "label": "questSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:95"
          },
          {
            "contract": "SimpleQuests",
            "label": "questDeadlines",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:96"
          },
          {
            "contract": "SimpleQuests",
            "label": "questIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:97"
          },
          {
            "contract": "SimpleQuests",
            "label": "characterQuest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:98"
          },
          {
            "contract": "SimpleQuests",
            "label": "tierChances",
            "type": "t_mapping(t_uint256,t_array(t_uint256)4_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:99"
          },
          {
            "contract": "SimpleQuests",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:100"
          },
          {
            "contract": "SimpleQuests",
            "label": "lastFreeSkipUsage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:101"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:102"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewardClaimed",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:103"
          },
          {
            "contract": "SimpleQuests",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)21659_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:104"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:105"
          }
        ],
        "types": {
          "t_contract(Characters)30134": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)48096": {
            "label": "contract Weapons"
          },
          "t_contract(Junk)34322": {
            "label": "contract Junk"
          },
          "t_contract(RaidTrinket)34939": {
            "label": "contract RaidTrinket"
          },
          "t_contract(Shields)40439": {
            "label": "contract Shields"
          },
          "t_contract(BurningManager)2708": {
            "label": "contract BurningManager"
          },
          "t_contract(SafeRandoms)21217": {
            "label": "contract SafeRandoms"
          },
          "t_contract(PartnerVault)16598": {
            "label": "contract PartnerVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Quest)21646_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Quest)"
          },
          "t_struct(Quest)21646_storage": {
            "label": "struct SimpleQuests.Quest",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_enum(Rarity)21678"
              },
              {
                "label": "requirementType",
                "type": "t_enum(ItemType)21672"
              },
              {
                "label": "requirementRarity",
                "type": "t_uint256"
              },
              {
                "label": "requirementAmount",
                "type": "t_uint256"
              },
              {
                "label": "requirementExternalAddress",
                "type": "t_address"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)21672"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Rarity)21678": {
            "label": "enum SimpleQuests.Rarity",
            "members": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC",
              "LEGENDARY"
            ]
          },
          "t_enum(ItemType)21672": {
            "label": "enum SimpleQuests.ItemType",
            "members": [
              "NONE",
              "WEAPON",
              "JUNK",
              "DUST",
              "TRINKET",
              "SHIELD",
              "STAMINA",
              "SOUL",
              "RAID",
              "EXPERIENCE",
              "EXTERNAL",
              "EXTERNAL_HOLD"
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)4_storage)": {
            "label": "mapping(uint256 => uint256[4])"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Reward)21659_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Reward)"
          },
          "t_struct(Reward)21659_storage": {
            "label": "struct SimpleQuests.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)21672"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "347bed370d75f788dd19943faf877859ab4ec8c3ccabebae9d54e840f914e7cf": {
      "address": "0x0cA50Cc9481FB3c5C0E8a02fAca97B25b0C73D5C",
      "txHash": "0xf0085b4c695eef1c84c0b057dbfdaac528294f14fcba32de784ce3305e01587c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)48096",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)30134",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)13127",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)28041",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)7877",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)27849",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:33"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)7445",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:34"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:36"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)54789_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:38"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:40"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)54789_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:42"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:44"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:73"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)13236_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:74"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:78"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:82"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)54668_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:85"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:95"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)54789_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:115"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)13302_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:118"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:119"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:120"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)54789_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:123"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:126"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:128"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)33822",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:130"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:131"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:134"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:136"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:138"
          },
          {
            "contract": "NFTStorage",
            "label": "_localChainPrefix",
            "type": "t_string_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:140"
          },
          {
            "contract": "NFTStorage",
            "label": "shields",
            "type": "t_contract(Shields)40439",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:142"
          },
          {
            "contract": "NFTStorage",
            "label": "nftProxyContract",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:146"
          },
          {
            "contract": "NFTStorage",
            "label": "bot2p0Log",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:148"
          },
          {
            "contract": "NFTStorage",
            "label": "nftAllowedChains",
            "type": "t_mapping(t_address,t_struct(UintSet)54789_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:150"
          },
          {
            "contract": "NFTStorage",
            "label": "targetChainAllowedNFTs",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)54668_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\NFTStorage.sol:152"
          }
        ],
        "types": {
          "t_contract(Weapons)48096": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)30134": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)13127": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)28041": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)7877": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)27849": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)7445": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)54789_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)54789_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)54789_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)54403_storage"
              }
            ]
          },
          "t_struct(Set)54403_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)13236_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)13236_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)54668_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)54403_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)13302_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)13302_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)33822": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_contract(Shields)40439": {
            "label": "contract Shields"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)54668_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4f419e044bd14b396024a621f4178ddebb2aa0a19de0ad89b953eb3d23bed031": {
      "address": "0x996908e954274b3C979c514a2406c72d753f8a2A",
      "txHash": "0xd91509ec88183b4fa808a767ff6062da91f866844e6bfcc8536feea0f3b7c2ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51859_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51236_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)44939_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:93"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)44951_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)44946_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:97"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:102"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:108"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:110"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:113"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:118"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:120"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:122"
          },
          {
            "contract": "Weapons",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\weapons.sol:124"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)44939_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)44939_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)44951_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)44951_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)44946_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)44946_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51859_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)51859_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51236_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50918_storage"
              }
            ]
          },
          "t_struct(Map)50918_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50910_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50910_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50910_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ccf724bce7ee27f45aa2a214a8a49aa886b479c72a7597806907982dbef373ad": {
      "address": "0xF2C77335aaA9b24775cf5Ff2c324034b85389cb1",
      "txHash": "0x34a015ba4553b78ae848736fb892934ecb23a21be0d9b5e7264b8ae0b60fcbe7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)30134",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:57"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)48096",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:58"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)53744",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:59"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)33874",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:60"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)33893",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:61"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:139"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:142"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:145"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:149"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:156"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:171"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)33910",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:175"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:177"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1671",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:180"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)30851_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:203"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)30870_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:204"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:206"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:207"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:209"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:210"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)26045",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:212"
          }
        ],
        "types": {
          "t_contract(Characters)30134": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)48096": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)53744": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)33874": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)33893": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)33910": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1671": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)30851_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)30851_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)30870_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)30870_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)26045": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5af7e34ca56df6b17f0b6b28eb6d3f9793aec63a7e83d0900d97fc44470b3f84": {
      "address": "0x11587550a6FA04920Ca3f2e1f38D6bA5F07faB3a",
      "txHash": "0x8be005b89e6c6edadb4075728e49cf45da2db52e3e6e0e5eda11dfea20f8d626",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:20"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "weapons",
            "type": "t_contract(Weapons)48096",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:21"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)21217",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:22"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)33822",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:23"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)33874",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:24"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userEventShardSupply",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:34"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:35"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:44"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventInfo",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)24620_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:46"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userForgedAtEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:47"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userOrderOptionForEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:48"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkill",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:49"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkillUpdatedTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:50"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userSkillStakingShardsRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:51"
          }
        ],
        "types": {
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_contract(Weapons)48096": {
            "label": "contract Weapons"
          },
          "t_contract(SafeRandoms)21217": {
            "label": "contract SafeRandoms"
          },
          "t_contract(CryptoBlades)33822": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)33874": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)24620_storage)": {
            "label": "mapping(uint256 => struct SpecialWeaponsManager.EventInfo)"
          },
          "t_struct(EventInfo)24620_storage": {
            "label": "struct SpecialWeaponsManager.EventInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "weaponElement",
                "type": "t_uint8"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "orderedCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e96d22557b2232caa17cf36ed2dbf475c3f397a4f788e303759732a8e1d5ffb": {
      "address": "0xb499C6D23c296634E02FCbdf73E0B11091F1d836",
      "txHash": "0x5c947809913405b62ac2bb0e12e04170322cae431278316aaa536b8245ec49b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)53816",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)53816",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)33894",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          },
          {
            "contract": "SkillStakingRewardsUpgradeable",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)26073",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SkillStakingRewardsUpgradeable.sol:12"
          }
        ],
        "types": {
          "t_contract(SpecialWeaponsManager)26073": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_contract(IERC20)53816": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)33894": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eff96ff1a289def15422d09b44e364c1c6dd1050e04b19894253b153025de15f": {
      "address": "0x2711d28F3B146f8394C725F4802299FDE5767156",
      "txHash": "0xa80755a98ce0d7decaa928e0ae07f95a659d1eb9b6150626a6104ab8b8a902b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51859_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51236_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)38391_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)38396_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:75"
          },
          {
            "contract": "Shields",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\shields.sol:77"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)38391_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)38391_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)38396_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)38396_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51859_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)51859_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51236_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50918_storage"
              }
            ]
          },
          "t_struct(Map)50918_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50910_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50910_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50910_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "840b22e7c6e85707b4943bc2f830006e781068e44e942fa21b9a07fdd58b38b3": {
      "address": "0x6F8CF580359234096c619Df5aA2f9cf078f1d469",
      "txHash": "0xb88c9b064663150becdeca7f24602906b81d25e8383cda33984d77bbf4c88682",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51859_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51236_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)28198_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:83"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)28203_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:84"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:89"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:92"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:94"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:97"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:99"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:101"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:110"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)9812",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\characters.sol:113"
          }
        ],
        "types": {
          "t_array(t_struct(Character)28198_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)28198_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)28203_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)28203_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)9812": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51859_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)51859_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51236_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50918_storage"
              }
            ]
          },
          "t_struct(Map)50918_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50910_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50910_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50910_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06d64fe331d46b52e1c7e4d14b4fd34b05d8e04f994303075d3cbe878c321ab7": {
      "address": "0xb16488b5463490a7Fe8F95A64E318cb57f20fa19",
      "txHash": "0xeb04dbdf1d5184ddfc389d544840b041c407e70d4dd9e5154801cda021dfd8a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Garrison",
            "label": "characters",
            "type": "t_contract(Characters)30134",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:20"
          },
          {
            "contract": "Garrison",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)54668_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:22"
          },
          {
            "contract": "Garrison",
            "label": "userGarrison",
            "type": "t_mapping(t_address,t_struct(UintSet)54789_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:24"
          },
          {
            "contract": "Garrison",
            "label": "characterOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:25"
          },
          {
            "contract": "Garrison",
            "label": "allCharactersInGarrison",
            "type": "t_struct(UintSet)54789_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:26"
          },
          {
            "contract": "Garrison",
            "label": "game",
            "type": "t_contract(CryptoBlades)33822",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Garrison.sol:28"
          }
        ],
        "types": {
          "t_contract(Characters)30134": {
            "label": "contract Characters"
          },
          "t_struct(AddressSet)54668_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)54403_storage"
              }
            ]
          },
          "t_struct(Set)54403_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UintSet)54789_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)54789_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)54403_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(CryptoBlades)33822": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ea94afb1402d83c6df33c45fbe8ac44b7a4e5a88813784c87ec5b104a356782d": {
      "address": "0xD18b4e9E78F40175075d9fF0E66d58e76Ac16836",
      "txHash": "0x960a6f48ed24bfb9bcd3b09b6f1fe47972330fa23e200edb929e990ce9229168",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:13"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)26045",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:16"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "userClaimedAtGiveaway",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:18"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "nftClaimedAtGiveaway",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:19"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayIdToAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:21"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayIdToSpecialEventId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:22"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:23"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "nextGiveawayId",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(SpecialWeaponsManager)26045": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b497afaffd0c08f17fa9f183e5459862b55f51671b38722f1f72d541275b00b1": {
      "address": "0x60976041018331157153E52F46C2bAEd2f9E8807",
      "txHash": "0x19df5a3ac2854c67d5426d7507ab6961ddfdd0bc68605b3f811dd48b554c7078",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SafeRandoms",
            "label": "currentSeedIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:73"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedIndexBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:74"
          },
          {
            "contract": "SafeRandoms",
            "label": "firstRequestBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:75"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedHashes",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:76"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:79"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedSalts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:80"
          },
          {
            "contract": "SafeRandoms",
            "label": "queuedSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:81"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionLimited",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:83"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionBlocks",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:84"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitResolutionEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:86"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitRequestEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:87"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitPopEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SafeRandoms.sol:88"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "017f1013f476f13b40abd3c16f7861bcc678465723ca89653391b3ffd9f83485": {
      "address": "0x0E1550F6E7C4C43FcAbD33c744e340Fd1C5ce9FC",
      "txHash": "0xcbe875b6d9cea128070732d4a7ee6903ab43f54c3306dd64f9f27efa9621b288",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51859_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51236_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Junk",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\Junk.sol:23"
          },
          {
            "contract": "Junk",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\Junk.sol:25"
          },
          {
            "contract": "Junk",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\Junk.sol:27"
          }
        ],
        "types": {
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51859_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)51859_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51236_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50918_storage"
              }
            ]
          },
          "t_struct(Map)50918_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50910_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50910_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50910_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b9738c0efbe4c9a68c14345015cf7841a3560b4d6386102cb215c23d8f340726": {
      "address": "0x7E4ebcD53219AfAf8D8F454d66E96A90373790a9",
      "txHash": "0x84188227b7fa49baad640dbded32ee0c4a73c45ed11d7fe76d2e263313d84aac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51859_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51236_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "RaidTrinket",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:24"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:26"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenEffect",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:27"
          },
          {
            "contract": "RaidTrinket",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\RaidTrinket.sol:29"
          }
        ],
        "types": {
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51859_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)51859_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51236_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50918_storage"
              }
            ]
          },
          "t_struct(Map)50918_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50910_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50910_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50910_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1199c84cbc69989a68ca094dbaec7dba05d2d521f54e003f96d16194126777d5": {
      "address": "0xf67463271ba37792bC6010219b7FfCBBd58C2cf8",
      "txHash": "0x9605dc16186254f8fa72f974247ae509008731a85aaf78376deb279976d7aba2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)51859_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)51236_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "KeyLootbox",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\KeyLootbox.sol:14"
          },
          {
            "contract": "KeyLootbox",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\items\\KeyLootbox.sol:16"
          }
        ],
        "types": {
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)51859_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)51859_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)51236_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)50918_storage"
              }
            ]
          },
          "t_struct(Map)50918_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)50910_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)50910_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)50910_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dc465ddf186aecc56b963743385e902dabb857215e5d4ca28d8535b3d5629629": {
      "address": "0xDBC06Ccf51F85b8Ae7a888f63a1156e26EFA8acc",
      "txHash": "0xf2da86598288a6c30c6a7a52b9698c32019b008c71e3dd6bb1fc0297eec2412f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weapons",
            "type": "t_contract(Weapons)48096",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:15"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)27849",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:16"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)28041",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:17"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:18"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:19"
          }
        ],
        "types": {
          "t_contract(Weapons)48096": {
            "label": "contract Weapons"
          },
          "t_contract(WeaponCosmetics)27849": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(WeaponRenameTagConsumables)28041": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e8285847909e75579f60673f74db20bdb8f8174519de3ef95780afe09cc75cfd": {
      "address": "0x0C5D5385400bb1557257eeDF9154935377AC459E",
      "txHash": "0xc654676144c8ba8fa47d5773109aab263ff24db05f03fda4eddb318c36f93d23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characters",
            "type": "t_contract(Characters)30134",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:15"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)7445",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:16"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)7877",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:17"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:18"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:19"
          }
        ],
        "types": {
          "t_contract(Characters)30134": {
            "label": "contract Characters"
          },
          "t_contract(CharacterCosmetics)7445": {
            "label": "contract CharacterCosmetics"
          },
          "t_contract(CharacterRenameTagConsumables)7877": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "461a1d50d2ce2ceab2788c34f03f9e8f6db2b0a7d092597c1f5edf75eb2487d5": {
      "address": "0x589fFDb177Ff5ECd2B99b0702573697aB325fC01",
      "txHash": "0x8128aa04a1075cefd25509e2fbea32941a4fd7c9291ec8d6aa2c92b6d5faedc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "shields",
            "type": "t_contract(Shields)40439",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:13"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:14"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:15"
          }
        ],
        "types": {
          "t_contract(Shields)40439": {
            "label": "contract Shields"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48543_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48543_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51738_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51738_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51473_storage"
              }
            ]
          },
          "t_struct(Set)51473_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d9c08bb21ba0eaa4890bdb97f07c32f0556ba9fcde4cb6c615779afba7288a82": {
      "address": "0x22c9968d8E33C03f59F5b1A6bbC124FbC2F8B224",
      "txHash": "0x336db031a1769197dcad6fd364c10c7ee3d318de526a9907fd0304ea8593b550",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48776_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:19"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)26281_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:24"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)34055",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:36"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:38"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:39"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:40"
          },
          {
            "contract": "Treasury",
            "label": "projectLogo",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:41"
          },
          {
            "contract": "Treasury",
            "label": "projectDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:42"
          },
          {
            "contract": "Treasury",
            "label": "projectWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:43"
          },
          {
            "contract": "Treasury",
            "label": "projectNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\Treasury.sol:44"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)26281_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)26281_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)34055": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48776_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48776_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51971_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51971_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51706_storage"
              }
            ]
          },
          "t_struct(Set)51706_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a996636bbfcf82cdc1aa493e86eb22819a15ecdba0eb707ed82386398bfa2c5a": {
      "address": "0xDB4C6F2624Fa1E0b37faa7a4A0074547363CE82A",
      "txHash": "0x255fc4507811ac3da4978ca6a7bb0280348eadf8302a36c242a074b742c92333",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48776_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:20"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "weapons",
            "type": "t_contract(Weapons)48329",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:21"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)21217",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:22"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)34055",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:23"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)34107",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:24"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userEventShardSupply",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:34"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:35"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:44"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventInfo",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)24620_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:46"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userForgedAtEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:47"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userOrderOptionForEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:48"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkill",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:49"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkillUpdatedTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:50"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userSkillStakingShardsRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:51"
          }
        ],
        "types": {
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_contract(Weapons)48329": {
            "label": "contract Weapons"
          },
          "t_contract(SafeRandoms)21217": {
            "label": "contract SafeRandoms"
          },
          "t_contract(CryptoBlades)34055": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)34107": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)24620_storage)": {
            "label": "mapping(uint256 => struct SpecialWeaponsManager.EventInfo)"
          },
          "t_struct(EventInfo)24620_storage": {
            "label": "struct SpecialWeaponsManager.EventInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "weaponElement",
                "type": "t_uint8"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "orderedCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48776_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)48776_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)51971_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)51971_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)51706_storage"
              }
            ]
          },
          "t_struct(Set)51706_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "869b95080c55dc2b6837cd0773461cef9c0e8942539fe57df425dc1111900c22": {
      "address": "0x0964A36678aE026d06bc2713A422f6C9A3551B16",
      "txHash": "0xa068a11239019c521667644a8d8f2ae08cc77f17de4ce07bd8b48578968e0ffe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)53046_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SimpleQuests",
            "label": "characters",
            "type": "t_contract(Characters)34432",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:39"
          },
          {
            "contract": "SimpleQuests",
            "label": "weapons",
            "type": "t_contract(Weapons)52599",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:40"
          },
          {
            "contract": "SimpleQuests",
            "label": "junk",
            "type": "t_contract(Junk)38825",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:41"
          },
          {
            "contract": "SimpleQuests",
            "label": "trinket",
            "type": "t_contract(RaidTrinket)39442",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:42"
          },
          {
            "contract": "SimpleQuests",
            "label": "shields",
            "type": "t_contract(Shields)44942",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:43"
          },
          {
            "contract": "SimpleQuests",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2708",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:44"
          },
          {
            "contract": "SimpleQuests",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)25155",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:45"
          },
          {
            "contract": "SimpleQuests",
            "label": "partnerVault",
            "type": "t_contract(PartnerVault)16598",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:46"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextQuestID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:90"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextRewardID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:91"
          },
          {
            "contract": "SimpleQuests",
            "label": "questTemplates",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:93"
          },
          {
            "contract": "SimpleQuests",
            "label": "quests",
            "type": "t_mapping(t_uint256,t_struct(Quest)25581_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:94"
          },
          {
            "contract": "SimpleQuests",
            "label": "questSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:95"
          },
          {
            "contract": "SimpleQuests",
            "label": "questDeadlines",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:96"
          },
          {
            "contract": "SimpleQuests",
            "label": "questIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:97"
          },
          {
            "contract": "SimpleQuests",
            "label": "characterQuest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:98"
          },
          {
            "contract": "SimpleQuests",
            "label": "tierChances",
            "type": "t_mapping(t_uint256,t_array(t_uint256)4_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:99"
          },
          {
            "contract": "SimpleQuests",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:100"
          },
          {
            "contract": "SimpleQuests",
            "label": "lastFreeSkipUsage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:101"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:102"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewardClaimed",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:103"
          },
          {
            "contract": "SimpleQuests",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)25594_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:104"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:105"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletionsGoal",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SimpleQuests.sol:106"
          }
        ],
        "types": {
          "t_contract(Characters)34432": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)52599": {
            "label": "contract Weapons"
          },
          "t_contract(Junk)38825": {
            "label": "contract Junk"
          },
          "t_contract(RaidTrinket)39442": {
            "label": "contract RaidTrinket"
          },
          "t_contract(Shields)44942": {
            "label": "contract Shields"
          },
          "t_contract(BurningManager)2708": {
            "label": "contract BurningManager"
          },
          "t_contract(SafeRandoms)25155": {
            "label": "contract SafeRandoms"
          },
          "t_contract(PartnerVault)16598": {
            "label": "contract PartnerVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Quest)25581_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Quest)"
          },
          "t_struct(Quest)25581_storage": {
            "label": "struct SimpleQuests.Quest",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_enum(Rarity)25613"
              },
              {
                "label": "requirementType",
                "type": "t_enum(ItemType)25607"
              },
              {
                "label": "requirementRarity",
                "type": "t_uint256"
              },
              {
                "label": "requirementAmount",
                "type": "t_uint256"
              },
              {
                "label": "requirementExternalAddress",
                "type": "t_address"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)25607"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Rarity)25613": {
            "label": "enum SimpleQuests.Rarity",
            "members": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC",
              "LEGENDARY"
            ]
          },
          "t_enum(ItemType)25607": {
            "label": "enum SimpleQuests.ItemType",
            "members": [
              "NONE",
              "WEAPON",
              "JUNK",
              "DUST",
              "TRINKET",
              "SHIELD",
              "STAMINA",
              "SOUL",
              "RAID",
              "EXPERIENCE",
              "EXTERNAL",
              "EXTERNAL_HOLD"
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)4_storage)": {
            "label": "mapping(uint256 => uint256[4])"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Reward)25594_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Reward)"
          },
          "t_struct(Reward)25594_storage": {
            "label": "struct SimpleQuests.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)25607"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)53046_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)53046_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)56241_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)56241_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)55976_storage"
              }
            ]
          },
          "t_struct(Set)55976_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6545ce5a56a8a4ae04447e982e90b1bd25f7dd13512a35d3eaa959e4b4440319": {
      "address": "0x8c0199fa81e953494C25fFa857A23006Fd194684",
      "txHash": "0x5df1e242666ccd4a7617c79873d6121342767d45c3c3ad3a31b21ffa09930bd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)53046_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:20"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "weapons",
            "type": "t_contract(Weapons)52599",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:21"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)25155",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:22"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)38325",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:23"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)38377",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:24"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userEventShardSupply",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:34"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:35"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:44"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventInfo",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)28541_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:46"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userForgedAtEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:47"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userOrderOptionForEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:48"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkill",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:49"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkillUpdatedTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:50"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userSkillStakingShardsRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:51"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponArt",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:52"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:53"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:54"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:55"
          }
        ],
        "types": {
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_contract(Weapons)52599": {
            "label": "contract Weapons"
          },
          "t_contract(SafeRandoms)25155": {
            "label": "contract SafeRandoms"
          },
          "t_contract(CryptoBlades)38325": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)38377": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)28541_storage)": {
            "label": "mapping(uint256 => struct SpecialWeaponsManager.EventInfo)"
          },
          "t_struct(EventInfo)28541_storage": {
            "label": "struct SpecialWeaponsManager.EventInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "weaponElement",
                "type": "t_uint8"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "orderedCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)53046_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)53046_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)56241_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)56241_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)55976_storage"
              }
            ]
          },
          "t_struct(Set)55976_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "63c5590e6e8dcd4d546a2a950425974d091366eb9b23c8f455bb89de72602045": {
      "address": "0x3DcD3Ea1b5EBB0002987d81601b81DF1433079C7",
      "txHash": "0x7e74de52ec1f6b025ec3c264f60f1706892ea340f05415bee6f713c16c3e290e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)53046_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)34432",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:66"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)52599",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:67"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)58247",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:68"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)38377",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:69"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)38396",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:70"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:175"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)16843",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:180"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)38413",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:184"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:186"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:187"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1671",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)35173_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:212"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)35192_storage)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:213"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:215"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:216"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:218"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:219"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)30288",
            "src": "..\\..\\..\\..\\..\\C\\Users\\Karola\\repo\\cryptoblades\\contracts\\cryptoblades.sol:221"
          }
        ],
        "types": {
          "t_contract(Characters)34432": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)52599": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)58247": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)38377": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)38396": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)16843": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)38413": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1671": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)35173_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)35173_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)35192_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)35192_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)30288": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)53046_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)53046_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)56241_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)56241_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)55976_storage"
              }
            ]
          },
          "t_struct(Set)55976_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f4bd3150671c27fc9068f41d37a956d9ab852b708b9d79225d1c20de0bbf7aa3": {
      "address": "0x468027B1688b84b9cCbC8E240F46F5AdfE960e61",
      "txHash": "0x5dc0e84d01c80a4076aa28f415bd112808b84ee77064e5022712c8f0602d1297",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)55881_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)41116",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:45"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)37167",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)55434",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)47777",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)61082",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)41187",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:53"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:55"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:57"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:59"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:61"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:63"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:65"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:67"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:69"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:71"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:73"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:75"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:77"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:79"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:81"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:83"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)62127_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:85"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)19409_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:88"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)19416_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:90"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:92"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:94"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:96"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:98"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:100"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:102"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:104"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:106"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:108"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:110"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:112"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:114"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)62127_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:116"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:118"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:119"
          },
          {
            "contract": "PvpArena",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:122"
          },
          {
            "contract": "PvpArena",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpArena.sol:123"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41116": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37167": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)55434": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)47777": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)61082": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)41187": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)62127_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61741_storage"
              }
            ]
          },
          "t_struct(Set)61741_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)19409_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)19409_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)19416_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)19416_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)62127_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)55881_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)55881_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59076_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59076_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)58811_storage"
              }
            ]
          },
          "t_struct(Set)58811_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea622ffd0510b9d2579ecf3fd5dd1caa88fcfb7b7ab36c925d5e99fb05d7844f": {
      "address": "0x003c9208b558AA1f72BB079162dA4bFC95cCCaB2",
      "txHash": "0xd63afc1a49c64e9ac5e0af177fe6b159c5af831f3bf20f14ec1f60409970c118",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)55881_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)41116",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)37167",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)61082",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)25775",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:52"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41116": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37167": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)61082": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)25775": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)55881_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)55881_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59076_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59076_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)58811_storage"
              }
            ]
          },
          "t_struct(Set)58811_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8b9fbd07dd2d70b8dbadaca23ce8747cf87d83225522e1ed7c15e3209301ede7": {
      "address": "0xecC8fFc4b3f7C4043b1F252B2d7006B8A1B4C2Bd",
      "txHash": "0xb74777f0a787c67b92de03b4f9a47529c161e737d8619739fae794df52ae9c7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)55881_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpCore",
            "label": "game",
            "type": "t_contract(CryptoBlades)41116",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:57"
          },
          {
            "contract": "PvpCore",
            "label": "characters",
            "type": "t_contract(Characters)37167",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:58"
          },
          {
            "contract": "PvpCore",
            "label": "weapons",
            "type": "t_contract(Weapons)55434",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:59"
          },
          {
            "contract": "PvpCore",
            "label": "shields",
            "type": "t_contract(Shields)47777",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:60"
          },
          {
            "contract": "PvpCore",
            "label": "skillToken",
            "type": "t_contract(IERC20)61082",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:61"
          },
          {
            "contract": "PvpCore",
            "label": "randoms",
            "type": "t_contract(IRandoms)41187",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:62"
          },
          {
            "contract": "PvpCore",
            "label": "pvprankings",
            "type": "t_contract(PvpRankings)26941",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:63"
          },
          {
            "contract": "PvpCore",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:66"
          },
          {
            "contract": "PvpCore",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:68"
          },
          {
            "contract": "PvpCore",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:70"
          },
          {
            "contract": "PvpCore",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:72"
          },
          {
            "contract": "PvpCore",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:74"
          },
          {
            "contract": "PvpCore",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:76"
          },
          {
            "contract": "PvpCore",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:78"
          },
          {
            "contract": "PvpCore",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:80"
          },
          {
            "contract": "PvpCore",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:82"
          },
          {
            "contract": "PvpCore",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)62127_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:84"
          },
          {
            "contract": "PvpCore",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)23076_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:87"
          },
          {
            "contract": "PvpCore",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)23083_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:89"
          },
          {
            "contract": "PvpCore",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:91"
          },
          {
            "contract": "PvpCore",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:93"
          },
          {
            "contract": "PvpCore",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:95"
          },
          {
            "contract": "PvpCore",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:97"
          },
          {
            "contract": "PvpCore",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:99"
          },
          {
            "contract": "PvpCore",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:101"
          },
          {
            "contract": "PvpCore",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:103"
          },
          {
            "contract": "PvpCore",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)62127_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:105"
          },
          {
            "contract": "PvpCore",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:107"
          },
          {
            "contract": "PvpCore",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:109"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41116": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37167": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)55434": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)47777": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)61082": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)41187": {
            "label": "contract IRandoms"
          },
          "t_contract(PvpRankings)26941": {
            "label": "contract PvpRankings"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(UintSet)62127_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61741_storage"
              }
            ]
          },
          "t_struct(Set)61741_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)23076_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Fighter)"
          },
          "t_struct(Fighter)23076_storage": {
            "label": "struct PvpCore.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)23083_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Match)"
          },
          "t_struct(Match)23083_storage": {
            "label": "struct PvpCore.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_struct(UintSet)62127_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)55881_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)55881_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59076_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59076_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)58811_storage"
              }
            ]
          },
          "t_struct(Set)58811_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "405af4044357a35494b5998a40d805109f5578be95d27d584e2b72966d3d2600": {
      "address": "0x1a5A3fc2f8A4cF9BAc9Bbf7aDfA613EF2DF257dB",
      "txHash": "0x8ffd243be0194a73c654902bca752d7a36971b16b8fd7d7a6d85b233086f2776",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56005_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpCore",
            "label": "game",
            "type": "t_contract(CryptoBlades)41240",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:57"
          },
          {
            "contract": "PvpCore",
            "label": "characters",
            "type": "t_contract(Characters)37291",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:58"
          },
          {
            "contract": "PvpCore",
            "label": "weapons",
            "type": "t_contract(Weapons)55558",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:59"
          },
          {
            "contract": "PvpCore",
            "label": "shields",
            "type": "t_contract(Shields)47901",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:60"
          },
          {
            "contract": "PvpCore",
            "label": "skillToken",
            "type": "t_contract(IERC20)61206",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:61"
          },
          {
            "contract": "PvpCore",
            "label": "randoms",
            "type": "t_contract(IRandoms)41311",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:62"
          },
          {
            "contract": "PvpCore",
            "label": "pvprankings",
            "type": "t_contract(PvpRankings)27026",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:63"
          },
          {
            "contract": "PvpCore",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:66"
          },
          {
            "contract": "PvpCore",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:68"
          },
          {
            "contract": "PvpCore",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:70"
          },
          {
            "contract": "PvpCore",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:72"
          },
          {
            "contract": "PvpCore",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:74"
          },
          {
            "contract": "PvpCore",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:76"
          },
          {
            "contract": "PvpCore",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:78"
          },
          {
            "contract": "PvpCore",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:80"
          },
          {
            "contract": "PvpCore",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:82"
          },
          {
            "contract": "PvpCore",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)62251_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:84"
          },
          {
            "contract": "PvpCore",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)23128_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:87"
          },
          {
            "contract": "PvpCore",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)23135_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:89"
          },
          {
            "contract": "PvpCore",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:91"
          },
          {
            "contract": "PvpCore",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:93"
          },
          {
            "contract": "PvpCore",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:95"
          },
          {
            "contract": "PvpCore",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:97"
          },
          {
            "contract": "PvpCore",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:99"
          },
          {
            "contract": "PvpCore",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:101"
          },
          {
            "contract": "PvpCore",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:103"
          },
          {
            "contract": "PvpCore",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)62251_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:105"
          },
          {
            "contract": "PvpCore",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:107"
          },
          {
            "contract": "PvpCore",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:109"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41240": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37291": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)55558": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)47901": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)61206": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)41311": {
            "label": "contract IRandoms"
          },
          "t_contract(PvpRankings)27026": {
            "label": "contract PvpRankings"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(UintSet)62251_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61865_storage"
              }
            ]
          },
          "t_struct(Set)61865_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)23128_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Fighter)"
          },
          "t_struct(Fighter)23128_storage": {
            "label": "struct PvpCore.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)23135_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Match)"
          },
          "t_struct(Match)23135_storage": {
            "label": "struct PvpCore.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_struct(UintSet)62251_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56005_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)56005_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59200_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59200_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)58935_storage"
              }
            ]
          },
          "t_struct(Set)58935_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6fa6ed9c896af6ec186d382bec204b2dc40e43fa7c955bceff9a006abdc96499": {
      "address": "0x3785D037fB8BaFb18F744948e190E11a285433aA",
      "txHash": "0xf339154540727694195befa352574c95e75f50c50911c34f7424babb6ff2e37a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56024_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)37291",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:67"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)55577",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:68"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)61225",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:69"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)41311",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:70"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)41330",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:71"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:147"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:149"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:162"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:168"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:171"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:174"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:177"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)19414",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:179"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)41347",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:183"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:185"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:187"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:188"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1671",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:190"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)38079_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:199"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:213"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)38098_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:214"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:216"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:217"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:219"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:220"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)32900",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\cryptoblades.sol:222"
          }
        ],
        "types": {
          "t_contract(Characters)37291": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)55577": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)61225": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)41311": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)41330": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)19414": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)41347": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1671": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)38079_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)38079_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)38098_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)38098_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)32900": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56024_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)56024_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59219_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59219_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)58954_storage"
              }
            ]
          },
          "t_struct(Set)58954_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fc9559b185851b23937b9e265b47d0614c64b3ab53c1366ec3eead959f965180": {
      "address": "0x257376317E40eF18737Fc5053AD28b1613B3c578",
      "txHash": "0x426b7b7ddf851ed54a31eadb2aefd34734331e3ec03019110254a7e64fcdc874",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56224_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)55777",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:43"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)41530",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:44"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)48120",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:48"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)41459",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:49"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:53"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:54"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:58"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)6672",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:59"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:61"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:62"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\Blacksmith.sol:64"
          }
        ],
        "types": {
          "t_contract(Weapons)55777": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)41530": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)48120": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)41459": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)6672": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56224_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)56224_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59419_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59419_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)59154_storage"
              }
            ]
          },
          "t_struct(Set)59154_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bc60b90f4f46ae43fdd8cc628ae08e29caf2dab07611eff6d8be76458534019f": {
      "address": "0xa0a1Ff14Fd708b59B807022e98D5FA213C95522A",
      "txHash": "0xf7fa5f40f1437f12948d991a134ee55c17cc544f527ac7311dd576b876a1a898",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56224_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpCore",
            "label": "game",
            "type": "t_contract(CryptoBlades)41459",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:57"
          },
          {
            "contract": "PvpCore",
            "label": "characters",
            "type": "t_contract(Characters)37491",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:58"
          },
          {
            "contract": "PvpCore",
            "label": "weapons",
            "type": "t_contract(Weapons)55777",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:59"
          },
          {
            "contract": "PvpCore",
            "label": "shields",
            "type": "t_contract(Shields)48120",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:60"
          },
          {
            "contract": "PvpCore",
            "label": "skillToken",
            "type": "t_contract(IERC20)61425",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:61"
          },
          {
            "contract": "PvpCore",
            "label": "randoms",
            "type": "t_contract(IRandoms)41530",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:62"
          },
          {
            "contract": "PvpCore",
            "label": "pvprankings",
            "type": "t_contract(PvpRankings)27226",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:63"
          },
          {
            "contract": "PvpCore",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:66"
          },
          {
            "contract": "PvpCore",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:68"
          },
          {
            "contract": "PvpCore",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:70"
          },
          {
            "contract": "PvpCore",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:72"
          },
          {
            "contract": "PvpCore",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:74"
          },
          {
            "contract": "PvpCore",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:76"
          },
          {
            "contract": "PvpCore",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:78"
          },
          {
            "contract": "PvpCore",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:80"
          },
          {
            "contract": "PvpCore",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:82"
          },
          {
            "contract": "PvpCore",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)62470_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:84"
          },
          {
            "contract": "PvpCore",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)23119_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:87"
          },
          {
            "contract": "PvpCore",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)23126_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:89"
          },
          {
            "contract": "PvpCore",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:91"
          },
          {
            "contract": "PvpCore",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:93"
          },
          {
            "contract": "PvpCore",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:95"
          },
          {
            "contract": "PvpCore",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:97"
          },
          {
            "contract": "PvpCore",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:99"
          },
          {
            "contract": "PvpCore",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:101"
          },
          {
            "contract": "PvpCore",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:103"
          },
          {
            "contract": "PvpCore",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)62470_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:105"
          },
          {
            "contract": "PvpCore",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:107"
          },
          {
            "contract": "PvpCore",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpCore.sol:109"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41459": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37491": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)55777": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)48120": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)61425": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)41530": {
            "label": "contract IRandoms"
          },
          "t_contract(PvpRankings)27226": {
            "label": "contract PvpRankings"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(UintSet)62470_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)62084_storage"
              }
            ]
          },
          "t_struct(Set)62084_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)23119_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Fighter)"
          },
          "t_struct(Fighter)23119_storage": {
            "label": "struct PvpCore.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)23126_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Match)"
          },
          "t_struct(Match)23126_storage": {
            "label": "struct PvpCore.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_struct(UintSet)62470_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56224_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)56224_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59419_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59419_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)59154_storage"
              }
            ]
          },
          "t_struct(Set)59154_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "be5b267b45a4513fa714df85e39b0c69347362cbeb97f4647dcfac8738e406e4": {
      "address": "0x83e8ac6dca2c7274433a30390131F7c6803B9C8C",
      "txHash": "0x48571d739ae0b557a0b4053f5049a0173aa526add0804fc25e96438516e8c7cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56224_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)41459",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)37491",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)61425",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)25848",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:52"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41459": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37491": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)61425": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)25848": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56224_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)56224_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59419_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59419_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)59154_storage"
              }
            ]
          },
          "t_struct(Set)59154_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ed3996665b2b189991237330b82246ff4f131a5e43e5f679057204cf5a06ea4a": {
      "address": "0x2016AFA78A727C038caBEd821DFFf444D1e9A557",
      "txHash": "0xe17a2f64d518cb985fb1963d607864ff1e5e7def093c26dac4afba35dfc2cc0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56268_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)41503",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)37535",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)61469",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)25848",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:52"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41503": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37535": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)61469": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)25848": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56268_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)56268_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59463_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59463_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)59198_storage"
              }
            ]
          },
          "t_struct(Set)59198_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "49c1b1a7235da15a05df30241c06969f64edfb94c426cb26ab6430b06c7f923a": {
      "address": "0x05fdCCBa47c3f91e92cDaaD846066f58eB9A3cC4",
      "txHash": "0x83d439513f311d63c1737932b2ea8130c4c5bd27f5343217c292b7f46b8f493c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56176_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)41411",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)37443",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)61377",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)25848",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:52"
          },
          {
            "contract": "PvpRankings",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PvpRankings.sol:54"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)41411": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)37443": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)61377": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)25848": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56176_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)56176_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59371_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59371_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)59106_storage"
              }
            ]
          },
          "t_struct(Set)59106_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2700f92d5e0b36ff5fec3e7ffa0dadd33aedc7fd41edb08fae15e1495ad69e2d": {
      "address": "0x8751D7ebC691e891be816441aC9B2220E90d2Ef6",
      "txHash": "0xf7cddf598316033a3a9fad12c379919d51b41d1f2ecafa0d331a875847fe2d7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)56625_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Launchpad",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:32"
          },
          {
            "contract": "Launchpad",
            "label": "tierStakingRequirement",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:43"
          },
          {
            "contract": "Launchpad",
            "label": "tierAllocationWeight",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:44"
          },
          {
            "contract": "Launchpad",
            "label": "launches",
            "type": "t_mapping(t_uint256,t_struct(Launch)10234_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:47"
          },
          {
            "contract": "Launchpad",
            "label": "launchTokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:48"
          },
          {
            "contract": "Launchpad",
            "label": "launchStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:49"
          },
          {
            "contract": "Launchpad",
            "label": "launchFundsToRaise",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:50"
          },
          {
            "contract": "Launchpad",
            "label": "launchBaseAllocation",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:51"
          },
          {
            "contract": "Launchpad",
            "label": "launchTotalRaised",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:52"
          },
          {
            "contract": "Launchpad",
            "label": "launchTokenAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:53"
          },
          {
            "contract": "Launchpad",
            "label": "launchEligibleUsersSnapshot",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)62750_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:56"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserStakedAmountSnapshot",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:57"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserInvestment",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:58"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:59"
          },
          {
            "contract": "Launchpad",
            "label": "launchTotalUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:60"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserTotalUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:61"
          },
          {
            "contract": "Launchpad",
            "label": "launchPeriodicVestingsPercentages",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:64"
          },
          {
            "contract": "Launchpad",
            "label": "launchPeriodicVestingsStartTimestamps",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:65"
          },
          {
            "contract": "Launchpad",
            "label": "launchLinearVestingsDurations",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:66"
          },
          {
            "contract": "Launchpad",
            "label": "launchLinearVestingsStartTimestamps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:67"
          },
          {
            "contract": "Launchpad",
            "label": "userLinearVestingClaimTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:68"
          },
          {
            "contract": "Launchpad",
            "label": "userClaimedVestingPortion",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_bool)))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:69"
          },
          {
            "contract": "Launchpad",
            "label": "nextLaunchId",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:71"
          },
          {
            "contract": "Launchpad",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:72"
          },
          {
            "contract": "Launchpad",
            "label": "_game",
            "type": "t_contract(CryptoBlades)41860",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Launchpad.sol:74"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Launch)10234_storage)": {
            "label": "mapping(uint256 => struct Launchpad.Launch)"
          },
          "t_struct(Launch)10234_storage": {
            "label": "struct Launchpad.Launch",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "detailsJsonUri",
                "type": "t_string_storage"
              },
              {
                "label": "imageUrl",
                "type": "t_string_storage"
              },
              {
                "label": "fundingTokenAddress",
                "type": "t_address"
              },
              {
                "label": "phase",
                "type": "t_uint256"
              },
              {
                "label": "commitOnly",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)62750_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)62750_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)62485_storage"
              }
            ]
          },
          "t_struct(Set)62485_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => bool)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(CryptoBlades)41860": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)56625_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)56625_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)59820_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)59820_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)59555_storage"
              }
            ]
          },
          "t_struct(Set)59555_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa94682caee0a36752eb9d520c4c85fa205ab3982b98d9807e12d1911df3345c": {
      "address": "0xc5F8e7aF335a8CcF575F94fCFf4b2B518930b564",
      "txHash": "0x8b9c0aa789ba3fc7fc6d81a74421c57006205be31f2f758e3ec55cab37b61d6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58244_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20BridgeEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:19"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeVars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:26"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeTokenVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:27"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:58"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:59"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOuts",
            "type": "t_mapping(t_uint256,t_struct(ERC20BridgeOutRequests)9226_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:60"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferInsCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:62"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferIns",
            "type": "t_mapping(t_uint256,t_struct(ERC20BridgeReceivedTokens)9239_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:63"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:67"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOutOfPlayersHistory",
            "type": "t_mapping(t_address,t_struct(UintSet)64490_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:68"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferInOfPlayersHistory",
            "type": "t_mapping(t_address,t_struct(UintSet)64490_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:69"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_supportedTokenTypes",
            "type": "t_struct(AddressSet)64369_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:72"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)64490_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:73"
          },
          {
            "contract": "ERC20Bridge",
            "label": "game",
            "type": "t_contract(CryptoBlades)43455",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:75"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20ProxyContract",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:78"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_botLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:80"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20AllowedChains",
            "type": "t_mapping(t_address,t_struct(UintSet)64490_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:82"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_targetChainAllowedERC20s",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)64369_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:84"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_whitelistedWallets",
            "type": "t_mapping(t_address,t_struct(AddressSet)64369_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\ERC20Bridge.sol:87"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(ERC20BridgeOutRequests)9226_storage)": {
            "label": "mapping(uint256 => struct ERC20Bridge.ERC20BridgeOutRequests)"
          },
          "t_struct(ERC20BridgeOutRequests)9226_storage": {
            "label": "struct ERC20Bridge.ERC20BridgeOutRequests",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "erc20Address",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(ERC20BridgeReceivedTokens)9239_storage)": {
            "label": "mapping(uint256 => struct ERC20Bridge.ERC20BridgeReceivedTokens)"
          },
          "t_struct(ERC20BridgeReceivedTokens)9239_storage": {
            "label": "struct ERC20Bridge.ERC20BridgeReceivedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "erc20Address",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceTransferId",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)64490_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)64490_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)64104_storage"
              }
            ]
          },
          "t_struct(Set)64104_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)64369_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)64104_storage"
              }
            ]
          },
          "t_contract(CryptoBlades)43455": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)64369_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_address,t_struct(AddressSet)64369_storage)": {
            "label": "mapping(address => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58244_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58244_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61174_storage"
              }
            ]
          },
          "t_struct(Set)61174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1cd70dd93678f2a05d4b144c32c83e77d0ba7fcafb64e50f32cce4aa124c8769": {
      "address": "0xd8daA50B2a8E37786c9A58fA3367ddBb52225Ad7",
      "txHash": "0x6ba020aaf0231cf0d1aca29511d72ba5fe470f8230a00b4ed6f53957aa74f64d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58244_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SkillERC20BridgeProxyContract",
            "label": "promos",
            "type": "t_contract(Promos)21048",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\SkillERC20BridgeProxyContract.sol:13"
          },
          {
            "contract": "SkillERC20BridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\SkillERC20BridgeProxyContract.sol:14"
          }
        ],
        "types": {
          "t_contract(Promos)21048": {
            "label": "contract Promos"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58244_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)58244_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61439_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61439_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61174_storage"
              }
            ]
          },
          "t_struct(Set)61174_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f6c2393ecb0c4e5e3357e7692fdb5e21e42132e610912e055937b49334ae6dab": {
      "address": "0xa946D4522b289f7DFF7741E190423542166Bf891",
      "txHash": "0xf3f4012d2f2417bff8374630bb975fcb0f4ac8b4038451a49a4d0b459e559434",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58245_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)39509",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:66"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)57798",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:67"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)63446",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:68"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)43532",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:69"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)43551",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:70"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:175"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)21048",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:180"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)43568",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:184"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:186"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:187"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1662",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)40294_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:212"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)40313_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:213"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:215"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:216"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:218"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:219"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)35081",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:221"
          }
        ],
        "types": {
          "t_contract(Characters)39509": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)57798": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)63446": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)43532": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)43551": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)21048": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)43568": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1662": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)40294_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)40294_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)40313_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)40313_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)35081": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58245_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58245_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61440_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61440_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61175_storage"
              }
            ]
          },
          "t_struct(Set)61175_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9ccba7b13bd3f761f148523bdcf55c9a55539a2364126fdf00411907e05685b8": {
      "address": "0xA9ECd7E49883976Ce8E0207c13F4A7b6060482Ad",
      "txHash": "0x0bc34c12246379a3dfe0ca925af2c6d0480576d418a64dabacd76f47c6f44ab9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58245_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:19"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)35396_storage)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:22"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:24"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)43456",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:38"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:40"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:41"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:42"
          },
          {
            "contract": "Treasury",
            "label": "projectLogo",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:43"
          },
          {
            "contract": "Treasury",
            "label": "projectDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:44"
          },
          {
            "contract": "Treasury",
            "label": "projectWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:45"
          },
          {
            "contract": "Treasury",
            "label": "projectNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\Treasury.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)35396_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)35396_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)43456": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58245_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)58245_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61440_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61440_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61175_storage"
              }
            ]
          },
          "t_struct(Set)61175_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff95fcd077cae0589722bba4e0c67cdf47297645722c8ce3261f54cf500b0f8a": {
      "address": "0x4b1d4418C12554C0da4De045035c04829CeAb1CE",
      "txHash": "0xfabd83cdece146363c0fa4c26efcd69ea317e49d610ca1b9c2bf3d69ab304287",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58250_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)39512",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:66"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)57803",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:67"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)63451",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:68"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)43537",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:69"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)43556",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:70"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:148"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:151"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:158"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:165"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:175"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)21048",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:180"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)43573",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:184"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:186"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:187"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1662",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)40297_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:212"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)40316_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:213"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:215"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:216"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:218"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:219"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)35081",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:221"
          }
        ],
        "types": {
          "t_contract(Characters)39512": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)57803": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)63451": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)43537": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)43556": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)21048": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)43573": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1662": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)40297_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)40297_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)40316_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)40316_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)35081": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58250_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58250_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61445_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61445_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61180_storage"
              }
            ]
          },
          "t_struct(Set)61180_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a3e6ad2f75e47441472716842d5af96ab45e2f4bb492642e6dc49985bcb9668f": {
      "address": "0x2feBCdF129Df8e3407fCA162127229561cb14C0b",
      "txHash": "0xbf0000ab8aa8078800fcbb44df26714d79cd3a9b227148dc7bf1ee40e09a02fb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58250_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokensManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)43461",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:14"
          },
          {
            "contract": "TokensManager",
            "label": "combatTokenChargePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:16"
          },
          {
            "contract": "TokensManager",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:18"
          },
          {
            "contract": "TokensManager",
            "label": "skillTokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:19"
          },
          {
            "contract": "TokensManager",
            "label": "offsetSlippage",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:20"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)43461": {
            "label": "contract CryptoBlades"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58250_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)58250_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61445_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61445_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61180_storage"
              }
            ]
          },
          "t_struct(Set)61180_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9ce257929ab3f3845d8e73db76ff5e49835b97eb9837184dc1831f16d79e6919": {
      "address": "0x7C692D4d002023c9312Bcbb1Ce51F8Ae8759fDEB",
      "txHash": "0x29b82fbb3a8f7d4fe4b2828bb7f748880d0052927f324db631c4d4877094a178",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)39520",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:72"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)57876",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:73"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)63524",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:74"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)43610",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:75"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)43629",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:76"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:154"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:171"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:173"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:175"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:179"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)21048",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:184"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:186"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)43646",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:188"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:190"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:192"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:193"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1662",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)40312_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:204"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:218"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)40331_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:219"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:221"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:222"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:224"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)35087",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\cryptoblades.sol:227"
          }
        ],
        "types": {
          "t_contract(Characters)39520": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)57876": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)63524": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)43610": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)43629": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)21048": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)43646": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1662": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)40312_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)40312_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)40331_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)40331_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)35087": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58323_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61518_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61518_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61253_storage"
              }
            ]
          },
          "t_struct(Set)61253_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8f6561496ffe0a7e0e11a33f491f2a3dc0020dbd15393cacab4aa197dbfd9bc1": {
      "address": "0x188A480bC594A0B37E5eC051E48b922DFfEF878C",
      "txHash": "0x6b20db6a7f573a4e09f43510b3b5a0bb0169926ed1eb448939e0b60bff9ae56d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokensManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)43534",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:14"
          },
          {
            "contract": "TokensManager",
            "label": "combatTokenChargePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:16"
          },
          {
            "contract": "TokensManager",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:18"
          },
          {
            "contract": "TokensManager",
            "label": "skillTokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:19"
          },
          {
            "contract": "TokensManager",
            "label": "offsetSlippage",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\TokensManager.sol:20"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)43534": {
            "label": "contract CryptoBlades"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)58323_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61518_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61518_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61253_storage"
              }
            ]
          },
          "t_struct(Set)61253_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3de7e79b8e5b62f548437fd2b9dda17aa5b206eb8758d21c764593678c145359": {
      "address": "0x04753f536182663186381a8cdA355829505165E7",
      "txHash": "0x1a70ccdf467fb7463b9fd96e170f89f83a915a0cbd91c5acb7af88f8c3e675ac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)43534",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)39520",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)63524",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)27497",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:52"
          },
          {
            "contract": "PvpRankings",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpRankings.sol:54"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)43534": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)39520": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)63524": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)27497": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)58323_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61518_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61518_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61253_storage"
              }
            ]
          },
          "t_struct(Set)61253_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0745ef7816c22285a0ff636cd311cf48f4595ccfa6c8d75762d3d48a77b0e74d": {
      "address": "0x5Ea049F0303F36F67766A02CF307DA15b507113f",
      "txHash": "0x24b90bec4c0c88cffc68ee21dcd9c7406effd9bc65f7698de1acbd8d757bed75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpCore",
            "label": "game",
            "type": "t_contract(CryptoBlades)43534",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:57"
          },
          {
            "contract": "PvpCore",
            "label": "characters",
            "type": "t_contract(Characters)39520",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:58"
          },
          {
            "contract": "PvpCore",
            "label": "weapons",
            "type": "t_contract(Weapons)57876",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:59"
          },
          {
            "contract": "PvpCore",
            "label": "shields",
            "type": "t_contract(Shields)50219",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:60"
          },
          {
            "contract": "PvpCore",
            "label": "skillToken",
            "type": "t_contract(IERC20)63524",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:61"
          },
          {
            "contract": "PvpCore",
            "label": "randoms",
            "type": "t_contract(IRandoms)43629",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:62"
          },
          {
            "contract": "PvpCore",
            "label": "pvprankings",
            "type": "t_contract(PvpRankings)28827",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:63"
          },
          {
            "contract": "PvpCore",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:66"
          },
          {
            "contract": "PvpCore",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:68"
          },
          {
            "contract": "PvpCore",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:70"
          },
          {
            "contract": "PvpCore",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:72"
          },
          {
            "contract": "PvpCore",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:74"
          },
          {
            "contract": "PvpCore",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:76"
          },
          {
            "contract": "PvpCore",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:78"
          },
          {
            "contract": "PvpCore",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:80"
          },
          {
            "contract": "PvpCore",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:82"
          },
          {
            "contract": "PvpCore",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)64569_storage",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:84"
          },
          {
            "contract": "PvpCore",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)24762_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:87"
          },
          {
            "contract": "PvpCore",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)24769_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:89"
          },
          {
            "contract": "PvpCore",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:91"
          },
          {
            "contract": "PvpCore",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:93"
          },
          {
            "contract": "PvpCore",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:95"
          },
          {
            "contract": "PvpCore",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:97"
          },
          {
            "contract": "PvpCore",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:99"
          },
          {
            "contract": "PvpCore",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:101"
          },
          {
            "contract": "PvpCore",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:103"
          },
          {
            "contract": "PvpCore",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)64569_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:105"
          },
          {
            "contract": "PvpCore",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:107"
          },
          {
            "contract": "PvpCore",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Users\\Kacper\\repo\\forked\\cryptoblades\\contracts\\PvpCore.sol:109"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)43534": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)39520": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)57876": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)50219": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)63524": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)43629": {
            "label": "contract IRandoms"
          },
          "t_contract(PvpRankings)28827": {
            "label": "contract PvpRankings"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(UintSet)64569_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)64183_storage"
              }
            ]
          },
          "t_struct(Set)64183_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)24762_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Fighter)"
          },
          "t_struct(Fighter)24762_storage": {
            "label": "struct PvpCore.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)24769_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Match)"
          },
          "t_struct(Match)24769_storage": {
            "label": "struct PvpCore.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_struct(UintSet)64569_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58323_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58323_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61518_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61518_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61253_storage"
              }
            ]
          },
          "t_struct(Set)61253_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "236eb123ac1b2e5c90babf9ab6328e4bd0c0d39dec100ed7ae2054303a90c40c": {
      "address": "0x51aE6073819Dd7374a508d88AD716bB234B2a17F",
      "txHash": "0x41e5ba075d5f06c03ee220123b0cdf40559056e0de5588e70dfa4af9c14197f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58575_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SimpleQuests",
            "label": "characters",
            "type": "t_contract(Characters)39772",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:41"
          },
          {
            "contract": "SimpleQuests",
            "label": "weapons",
            "type": "t_contract(Weapons)58128",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:42"
          },
          {
            "contract": "SimpleQuests",
            "label": "junk",
            "type": "t_contract(Junk)44354",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:43"
          },
          {
            "contract": "SimpleQuests",
            "label": "trinket",
            "type": "t_contract(RaidTrinket)44971",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:44"
          },
          {
            "contract": "SimpleQuests",
            "label": "shields",
            "type": "t_contract(Shields)50471",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:45"
          },
          {
            "contract": "SimpleQuests",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2699",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:46"
          },
          {
            "contract": "SimpleQuests",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)29693",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:47"
          },
          {
            "contract": "SimpleQuests",
            "label": "partnerVault",
            "type": "t_contract(PartnerVault)20928",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:48"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextQuestID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:92"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextRewardID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:93"
          },
          {
            "contract": "SimpleQuests",
            "label": "questTemplates",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:95"
          },
          {
            "contract": "SimpleQuests",
            "label": "quests",
            "type": "t_mapping(t_uint256,t_struct(Quest)30127_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:96"
          },
          {
            "contract": "SimpleQuests",
            "label": "questSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:97"
          },
          {
            "contract": "SimpleQuests",
            "label": "questDeadlines",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:98"
          },
          {
            "contract": "SimpleQuests",
            "label": "questIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:99"
          },
          {
            "contract": "SimpleQuests",
            "label": "characterQuest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:100"
          },
          {
            "contract": "SimpleQuests",
            "label": "tierChances",
            "type": "t_mapping(t_uint256,t_array(t_uint256)4_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:101"
          },
          {
            "contract": "SimpleQuests",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:102"
          },
          {
            "contract": "SimpleQuests",
            "label": "lastFreeSkipUsage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:103"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:104"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewardClaimed",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:105"
          },
          {
            "contract": "SimpleQuests",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)30140_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:106"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:107"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletionsGoal",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:108"
          },
          {
            "contract": "SimpleQuests",
            "label": "walletQuestProgress",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\SimpleQuests.sol:109"
          }
        ],
        "types": {
          "t_contract(Characters)39772": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)58128": {
            "label": "contract Weapons"
          },
          "t_contract(Junk)44354": {
            "label": "contract Junk"
          },
          "t_contract(RaidTrinket)44971": {
            "label": "contract RaidTrinket"
          },
          "t_contract(Shields)50471": {
            "label": "contract Shields"
          },
          "t_contract(BurningManager)2699": {
            "label": "contract BurningManager"
          },
          "t_contract(SafeRandoms)29693": {
            "label": "contract SafeRandoms"
          },
          "t_contract(PartnerVault)20928": {
            "label": "contract PartnerVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Quest)30127_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Quest)"
          },
          "t_struct(Quest)30127_storage": {
            "label": "struct SimpleQuests.Quest",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_enum(Rarity)30160"
              },
              {
                "label": "requirementType",
                "type": "t_enum(ItemType)30154"
              },
              {
                "label": "requirementRarity",
                "type": "t_uint256"
              },
              {
                "label": "requirementAmount",
                "type": "t_uint256"
              },
              {
                "label": "requirementExternalAddress",
                "type": "t_address"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)30154"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Rarity)30160": {
            "label": "enum SimpleQuests.Rarity",
            "members": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC",
              "LEGENDARY"
            ]
          },
          "t_enum(ItemType)30154": {
            "label": "enum SimpleQuests.ItemType",
            "members": [
              "NONE",
              "WEAPON",
              "JUNK",
              "DUST",
              "TRINKET",
              "SHIELD",
              "STAMINA",
              "SOUL",
              "RAID",
              "EXPERIENCE",
              "EXTERNAL",
              "EXTERNAL_HOLD",
              "CHARACTER"
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)4_storage)": {
            "label": "mapping(uint256 => uint256[4])"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Reward)30140_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Reward)"
          },
          "t_struct(Reward)30140_storage": {
            "label": "struct SimpleQuests.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)30154"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58575_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)58575_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61770_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61770_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61505_storage"
              }
            ]
          },
          "t_struct(Set)61505_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76db3d833bf068ba20765eed6b4dd23b226e6e662efaab37cddfd75d02efdf25": {
      "address": "0x24c75754Dc64cad43208E7EC968bB41AfDaE3F21",
      "txHash": "0xc93a45141763d62d39b4cb976e4ddb406e763b7aff856d0be0f14ee94269dd2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58575_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerVault",
            "label": "nfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PartnerVault.sol:21"
          },
          {
            "contract": "PartnerVault",
            "label": "currencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PartnerVault.sol:22"
          },
          {
            "contract": "PartnerVault",
            "label": "shownNfts",
            "type": "t_mapping(t_address,t_struct(UintSet)64821_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PartnerVault.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)64821_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)64821_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)64435_storage"
              }
            ]
          },
          "t_struct(Set)64435_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58575_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58575_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61770_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61770_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61505_storage"
              }
            ]
          },
          "t_struct(Set)61505_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ad41f1ca1fa77c142989ecc17ec4e913ab51adee45e4c7a4bdc19b95e8bf68c9": {
      "address": "0x569Cc681D3EAaB5fD37180e9d1efd4E2f6ae353B",
      "txHash": "0xe1087492531ec4d8763d7964a917aa3c2813a4098460d5d255599949bccb62e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)58612_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerVault",
            "label": "nfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PartnerVault.sol:21"
          },
          {
            "contract": "PartnerVault",
            "label": "currencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PartnerVault.sol:22"
          },
          {
            "contract": "PartnerVault",
            "label": "shownNfts",
            "type": "t_mapping(t_address,t_struct(UintSet)64858_storage)",
            "src": "..\\..\\..\\..\\..\\..\\C\\Work\\Projects\\Binance Projects\\Kryptoknights\\kryptoknights\\contracts\\PartnerVault.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)64858_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)64858_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)64472_storage"
              }
            ]
          },
          "t_struct(Set)64472_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)58612_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)58612_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)61807_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)61807_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)61542_storage"
              }
            ]
          },
          "t_struct(Set)61542_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
