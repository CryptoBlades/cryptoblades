{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2Dac5a7057041Fd17653bc2F82CCb5eAAD541be6",
    "txHash": "0x57c29a70cc27d70d1e98e504c0b224854c448d7715a4fe059769934ff7f115a6"
  },
  "proxies": [
    {
      "address": "0xd268f331E48731B1C6168B4c516a6b0F89BCCf2A",
      "txHash": "0xd50e0c0b2a0122337550acefe7c2a8b2872c7086d5c6e836b80396c03a7d024c",
      "kind": "transparent"
    },
    {
      "address": "0x0577b2784a2d53e2e2aFd8bC3acdd704D6dF6DAF",
      "txHash": "0x3f5e1d5b286bfcd08d115ee8c0bd1f6b6a9558085b3865d30edc3b03349fccd5",
      "kind": "transparent"
    },
    {
      "address": "0x3f2699b49faCD881eeaBE631CE21D9fa11833DC8",
      "txHash": "0xc93794bba5cf3bb74e6e1acc1a2070533d39cfebb0725a0c23277d9d75fbade6",
      "kind": "transparent"
    },
    {
      "address": "0x481487CfeA53187a3E1cdb2A731072dfF5A800E3",
      "txHash": "0x5876938448c94585905428e63168666e1aeb739bae086479d9923f2a92221041",
      "kind": "transparent"
    },
    {
      "address": "0x88f3FCF1F26D99F9dC3fc4Ad19093CEf9605F321",
      "txHash": "0x9dd56631eef6b98bc74c4f4e05d9e746588c5d292ff5356cfe49e79860c54654",
      "kind": "transparent"
    },
    {
      "address": "0x6F20795F9d979985b641C10a7c715D4ED8b926bF",
      "txHash": "0xcdd1a174290dc4e81b791d5cc6b77f815fbfb86daab2ee4cf19df85115c93b99",
      "kind": "transparent"
    },
    {
      "address": "0xe268EaFe3dc248e976e4cF4B66475C7F9BAcd32B",
      "txHash": "0x1b359ac5457c68662931387db0ece1bc8494abed8764a8ea3b5a626db802c42a",
      "kind": "transparent"
    },
    {
      "address": "0xEf80A82340961C31D5E79996312E6c4E785bE980",
      "txHash": "0xc934c82cb942088a7ef7f30800f3f6bc1164906e05623279a81d83ccccd8a665",
      "kind": "transparent"
    },
    {
      "address": "0x680f909f0FFF1b2AF3F5f9782b6a8600d73fAAea",
      "txHash": "0x938081817a7cc78b9035cc368860d975b543c1a4a9e559321406d3072083e52a",
      "kind": "transparent"
    },
    {
      "address": "0x68224AD3d5580b27703Cf8018f1b6b88eaA4bc25",
      "txHash": "0xca6686d6c9ae38130bb7b1ad513d30090a35bbd0aaaa9500985fd12098e760ce",
      "kind": "transparent"
    },
    {
      "address": "0xeae6c7C62F1D62dBBebd04dA1E0319f742E49e22",
      "txHash": "0x6ea299a1ab53043eb71c60596f6244d3a47310bebbd73f9cf15f350c43a8049e",
      "kind": "transparent"
    },
    {
      "address": "0x4e6bBfA4DFf766e37562a5a38720E1898254F05A",
      "txHash": "0x6720b0550aa01a373e0489d2c914388165171adb02d0030bcd029275e003700b",
      "kind": "transparent"
    },
    {
      "address": "0xe0Acb8CE53c483DD4D72b982675d24ED9bd0584C",
      "txHash": "0x90fe689ca392d1ee52c2b0471bf360a9f6b83cb9534bf7724fee5e39a844d0c4",
      "kind": "transparent"
    },
    {
      "address": "0xaD6291aF9Bc46d08C20bDDDB6e57A901a5b28f2A",
      "txHash": "0x3121bf3f499ca7fe711edeed5258373f4ea5849c9bc4e481c65de4fd7421ec06",
      "kind": "transparent"
    },
    {
      "address": "0xaB737c459767e70da1888aEf5b120708a4540B20",
      "txHash": "0xe3fd9ad8da193c3b9d3052b48fb31edefad710958cde8e9574228647239431e2",
      "kind": "transparent"
    },
    {
      "address": "0x20632b27680579aC8782CF592322d812Cf44e6b1",
      "txHash": "0x3c28510a903b6f6dfdc1c6e0ab0c80484f6df0acefb84040e9bcafe4562769f9",
      "kind": "transparent"
    },
    {
      "address": "0x0879ACa6027c9597Bc33676f538A27c32Cc028a2",
      "txHash": "0x8f9229205a9706437bcf9dd3d2112df88c237841e85543bc8b67ea8392e753f1",
      "kind": "transparent"
    },
    {
      "address": "0xEe39400000Eb928438aB556270324F9c3b378A5F",
      "txHash": "0x62fca4b40ed81eac2deab0a97ed7b924aef148377f39198e127e28253bbbe4b0",
      "kind": "transparent"
    },
    {
      "address": "0x8f01EF261b08Ad28C2dCd3E2757F5879917058C4",
      "txHash": "0x7cd0bac23668583450701d4e4c17aa92ac82e6e826b06004b7fac2c28c6325d0",
      "kind": "transparent"
    },
    {
      "address": "0xF14f9C5671188f708F470f06AC0DA71545fA03cB",
      "txHash": "0x4472aa9c8091cf2a1efa1ae1f3d9fa58c534e23692d8bbc94788197ca1dd71a6",
      "kind": "transparent"
    },
    {
      "address": "0x099F755C98e373CdC91cb3D16aF53bD6b1ec2E38",
      "txHash": "0x90f6867eff686baaf78afe450e7dd7e6a713b74ddc7c80f47219b1c68eb32064",
      "kind": "transparent"
    },
    {
      "address": "0x84b1e2dfC7CEc5BBCEbFD2F7f1EE8d2c755082fC",
      "txHash": "0x1144278121bc7984248421c192f62d6c328725e84f3bdf739b26315a008b35ea",
      "kind": "transparent"
    },
    {
      "address": "0x1d40040485D8Dc56F9716b764f25b9Ea5657dE11",
      "txHash": "0x689a7b43f63f1b18c788c57271041d43a2535e212b44b0b774d4e98193bfec76",
      "kind": "transparent"
    },
    {
      "address": "0x51e5Cf3e60ef2Be74e841fc4523c5fd868Cc9AA8",
      "txHash": "0x3a0ae50a9ccc33ecb40aac53b69e9a25b81a844b78ab5dd797cfb4df0fbaf97b",
      "kind": "transparent"
    },
    {
      "address": "0xe8d5bF411155D64eE5BCe1dfD0AADC284668C65c",
      "txHash": "0x3cc5749f264d7af148e06177eeb40f7b0d4cf431e4943d6b811e4ced9d6bd15c",
      "kind": "transparent"
    },
    {
      "address": "0x6318E575E06bC760ff46E0187fd1A17A9C5FDfa4",
      "txHash": "0xf44b97bfd1742fd0fba61bc5441020ba8bd3bd8fe0a77562e4abff569bea557e",
      "kind": "transparent"
    },
    {
      "address": "0xd6e8C0911B663aFA7cBb64EC51E3e41F46dE6659",
      "txHash": "0xacd5fbba2e31f3ea2a4b1127948882283b4329758fb75b02fb55f81512b66c34",
      "kind": "transparent"
    },
    {
      "address": "0xFffaE5554f984E96535C0c72FAfe30828e0F3ac4",
      "txHash": "0x5f19b4c9a2a6f6bfb9bbe1f685125b0dad7ba4d3fde146727816461cd532f651",
      "kind": "transparent"
    },
    {
      "address": "0x55a7Cd5c911CD23B523bDC3077348cf1B22a49BB",
      "txHash": "0xb64a7bdf507d0194380608f64c6328d692a5738835408e04660ef9ee2369a589",
      "kind": "transparent"
    },
    {
      "address": "0xf08d7B491769525B02255aAD7b94E60c2a976067",
      "txHash": "0xae196ad54eb33e660ae8940ea6341b6569afaa4f22525b162dff5291175b7f6e",
      "kind": "transparent"
    },
    {
      "address": "0xbb2bB7dC2ec6DD07652d3668E40A2D769Af4f3D5",
      "txHash": "0xc3614e22954a9fe4f9ffc2bc1d83ff7c2312eb51bb49f49f274252b1d943a0cb",
      "kind": "transparent"
    },
    {
      "address": "0x0e6Cb6503Ec0399fE521C627ac67E91A3331C5e0",
      "txHash": "0x9c402e3faf87b7fad47d726ec637f32087ba8f60fab3d7f0dc3d2735834174e4",
      "kind": "transparent"
    },
    {
      "address": "0xf0f70E65610B1bdFFBA54e4758829c713FDA6431",
      "txHash": "0x1c5420f5a838e3aef279b02d9bc6c631782c5ed850b7ff365474feabc0e39d15",
      "kind": "transparent"
    },
    {
      "address": "0x22510519bc780A91304A9A7c14b7A847f9637587",
      "txHash": "0x1fe8dec0903bd9abca72e79d25b6052b6f2b59846a57cae437af88b3373fb782",
      "kind": "transparent"
    },
    {
      "address": "0x50DbEE71440d97bA4694B2077263BAE1445C5F29",
      "txHash": "0x4b0ec76e24be424054c08b53b1bc718d993237e1279609e6d8d10834592381b1",
      "kind": "transparent"
    },
    {
      "address": "0xBf490C858448b93078EbE2cC365630F4d58eddC5",
      "txHash": "0xe674392810a1cab1a02ee918962ba003889fcf0d5e0ef482509dd1559baf4dc9",
      "kind": "transparent"
    },
    {
      "address": "0x2Be033018fE1617b937101E430Cb33c98F960824",
      "txHash": "0x0e8f2565e26f32345d2e909c02d0eaeab9ecd1698a7c7727f23593aca90a99be",
      "kind": "transparent"
    },
    {
      "address": "0x48E4678Bbf49510ea84DB5FA611dBF17d058B625",
      "txHash": "0x0da45ef77616f5140ffe96e46f650d3610a63781ccb18a03410431d8efdefa22",
      "kind": "transparent"
    },
    {
      "address": "0x84469F1dbE34B28A22fEA941fF681f16F5d7b022",
      "txHash": "0xf2ad6897ad1cb11ec116126f004c9090ac8b13e93e4e5ecaadeb8c30d064548e",
      "kind": "transparent"
    },
    {
      "address": "0xEeE9cB743Fad84537A5a19a45986a30e6959B408",
      "txHash": "0x1c39480a2734b592c4c1b20deed66c4e3da50357a622b51383f9e488539c1e21",
      "kind": "transparent"
    },
    {
      "address": "0xB3fD9aFcB5B1D45ca6a645D1ACb959034b6E6e8D",
      "txHash": "0x3429d0c5c8fccb03f31c70ed91731550fb8940cf686f108d9162273c2dc88215",
      "kind": "transparent"
    },
    {
      "address": "0x66bbfC1C8E32c69c9Ac5A2283a57FAa817fCcAe8",
      "txHash": "0xef3b24ca3bde258d5329ab84da7b1238eb3b583461a411417aed027b7408227d",
      "kind": "transparent"
    },
    {
      "address": "0x9eD0e48348dD8cB3A27a9E33DEEC0124CaA41385",
      "txHash": "0x55a8633ceb1d360221116c96c397a4b67c4c4a19d857329245d37e13b1f916b3",
      "kind": "transparent"
    },
    {
      "address": "0xB4d87C74Df649A4fE0227625ea3B7B3ac51c739f",
      "txHash": "0x28e8e4c63cadea659557cea49656a37318ceb4831112024ac67cdae051b905ac",
      "kind": "transparent"
    },
    {
      "address": "0xD380Db0087Bf85074235af11828c8703049b6949",
      "txHash": "0x9b881057c6dcb30c08177e2c7d610a7130e5c667f644b78f1b78af01d02e92a8",
      "kind": "transparent"
    },
    {
      "address": "0x10D3de7BbfF2Dad551652c4e8C67091F46c289AC",
      "txHash": "0xa73c03eae08aa172c5b6efdc1ebacd0d377a627a755dc983a02c95e1323460b8",
      "kind": "transparent"
    },
    {
      "address": "0x28F468Cca0939FDf4f88826151Ca417A0Bf474F3",
      "txHash": "0xc5e3e42845243e867da4ad3bc1ea2eed1b08036c865463cb417fad19356bb84a",
      "kind": "transparent"
    },
    {
      "address": "0x2EF790f5E406e1800CB6dB9E1a17085f29645Cf7",
      "txHash": "0xcfa07822d7075b5c07b9d6503b5c54d3bc466a9239685f42420fadb5c94c7fbd",
      "kind": "transparent"
    },
    {
      "address": "0x554A3587b97D49164D71D7aaDf078Ac56D69F221",
      "txHash": "0x89dafd196b4b61ce2f8fb67e8694131857051995d5bf86671c9218f9a5add3aa",
      "kind": "transparent"
    },
    {
      "address": "0x5471f7Ee266d1a0c86d43A9bC9b4b034cf96Dd3d",
      "txHash": "0xa74bd3525147040d50376bb86a072460320f336ec733616ac7958dedd41c49bd",
      "kind": "transparent"
    },
    {
      "address": "0xFfb697C1abe11d74E4337344D92a05720b6D1480",
      "txHash": "0xe3cc1f8d3dff025585b3c2d8896114ca5722325155f0166fcb97df1b0b8e5fed",
      "kind": "transparent"
    },
    {
      "address": "0x4C79c759224AC2A4eFdDE03a2106448026205987",
      "txHash": "0x9fe7e7e0c82c03f4a90c8835bb39dc3772f9c4252974d03e6401125543f0bfb3",
      "kind": "transparent"
    },
    {
      "address": "0x485642443f960da770E21FAEa95fC6B762b07d5f",
      "txHash": "0x6a86bd6933ed3407755d30966bc5ea499a20f7f3380f63ca3508013b6af42684",
      "kind": "transparent"
    },
    {
      "address": "0x65aBEe6523B90A116701CEc61c7bb290bE4C2186",
      "txHash": "0xdbd1aae1d2ca6d7a5c9c6ff94d2e879258b7472f1c450929a9e2ce341758d504",
      "kind": "transparent"
    },
    {
      "address": "0x662136F509CcD563EcdC5A77Aeddbeca23efA5EC",
      "txHash": "0x9cb59846493eb01ac5a7d71d9b7be2d993555de2ebfeba4cec12d546ddfd8267",
      "kind": "transparent"
    },
    {
      "address": "0xf686ef64FbC67FF3Bf1F1f7E116711A01212b765",
      "txHash": "0xff51a638d16bb419f9ef4d1da326ee398a541ebf06ccd71de191880b9c348290",
      "kind": "transparent"
    },
    {
      "address": "0x031866a0F05523c87f929caE89a889Cafc5FcbF0",
      "txHash": "0x92202dbcf0015eb50ee52879026a9ef2f8f1f060850a266a6e870778ab789bfa",
      "kind": "transparent"
    },
    {
      "address": "0x30194847Bf6372B337FA8fc9982aFABD38AD48B0",
      "txHash": "0x973b35f372a7a7be13465a4021fd2c43d898f13c9d7624561827ddeb187b4e09",
      "kind": "transparent"
    },
    {
      "address": "0x89c7752760F6AFDaC603509E015A35ff26b31790",
      "txHash": "0xf7e73fa5a9093531eb38445f95c1b2076c3346b29a20c7811f5e4015a8741ea1",
      "kind": "transparent"
    },
    {
      "address": "0x15a5A47165463454345Da5476F57737C7185EB1b",
      "txHash": "0xd5c32987b2fe35a9c65cf820add302f4e81609999ed59c0fde69aa6f9dcb78c9",
      "kind": "transparent"
    },
    {
      "address": "0x66077F3aac1c87D1daFA8991f62b4d8FFd06bFC4",
      "txHash": "0x2bf109add9db71b29cfbbc5544dde5612e3e1c86da3180eab98393843ea4ed1e",
      "kind": "transparent"
    },
    {
      "address": "0xcC1000c1B458e33Cd5a637ab9a473f73647C171e",
      "txHash": "0x23d2a4789d2e86c67109c5158c1048e67b8a66a26a7508708f20fdeef2f62701",
      "kind": "transparent"
    },
    {
      "address": "0x161eA9b7bd88dE6674884fE89Da985779a6bB09B",
      "txHash": "0x58449295f8b937d84233ce6924886ad26bd6af88e07951b26e6fc36933c73f17",
      "kind": "transparent"
    },
    {
      "address": "0x13Ff748c2999DdFa1d3505bFa54ba71877A1277c",
      "txHash": "0x3d39f63f3ebb7e5a789cfecc4e3c3ea5edbd6be709a4da3a429a438c46848ffe",
      "kind": "transparent"
    },
    {
      "address": "0xb979448324aAEc150AE231fD31b1C7060E648c0b",
      "txHash": "0xe41c5c2b033036f0a361b95b2b4249e884796e5829c1cc5d6bbd72af1e867f5f",
      "kind": "transparent"
    },
    {
      "address": "0x68130BB99423AE3cE7B6A3Cc20c8838be7686698",
      "txHash": "0x7f2addb91bdf05a72570ca4cc07d02a396bc67a3dab817ac658e3d91fc0ed8da",
      "kind": "transparent"
    },
    {
      "address": "0xd8e938d090083e1982bAb575f3212bbbF2B54393",
      "txHash": "0x5370ea89fe2c8ebe5d96c56a4f24bbf9f94c7600953e5fea3407f2d952745a66",
      "kind": "transparent"
    },
    {
      "address": "0xf55fa43aA426D7C97D8720C4325BEf3dAf1Cef08",
      "txHash": "0x7511e6203a4268eed2f9766fbf1a9a80894cd2906884f25740d16ef73cdd2698",
      "kind": "transparent"
    },
    {
      "address": "0x0EEC62752227EC513dB24114dBBd2C1C9e0623C6",
      "txHash": "0xc4d31d13546b2badaae430e7f0e278f2e97ae777fb3668e04e5db8c6ef2253b4",
      "kind": "transparent"
    },
    {
      "address": "0x9b3F66E02EB2B8DFC767249A0140dCcd41380E4a",
      "txHash": "0xdb857809549e3ac53614be603f1836e77e0649a61ea7f33db41994b68e17c589",
      "kind": "transparent"
    },
    {
      "address": "0x258d542eCac5ea9d8BABA32FA647728C7116EaBd",
      "txHash": "0x9688f267c707f75451518496136f972ee21ba17216a07b8f8490d9bc5831eec7",
      "kind": "transparent"
    },
    {
      "address": "0xc74041f1A8fa0EAd14e3037D3bfdB2761CFADC90",
      "txHash": "0xb80d6f8e95df75ca0afa35515adc86d2320e86387cb0384243d54ad16dbc26d2",
      "kind": "transparent"
    },
    {
      "address": "0xa42266Bd8bd3f1e0ff819a455E7e50f12f490c26",
      "txHash": "0x5167d6ab462ce7e83a9a198cb896c274ce3b65e293d29a79d951072260f9c661",
      "kind": "transparent"
    },
    {
      "address": "0x6244585EBACA2595841d88Cb5c3dB94f74121aA0",
      "txHash": "0xb936c6841298a2864c14aacba49296b03954cedbf17aa21bb59d0b99c8718787",
      "kind": "transparent"
    },
    {
      "address": "0xa6dfEB36Ec10c8F3Fee75a7c6f162229Df4BF8F2",
      "txHash": "0xb1db895c0bf88d3adeb6bfcb8717f620102f67079339130df79502da2c0704e7",
      "kind": "transparent"
    },
    {
      "address": "0x7BBF8DA50b3C44881c465d5ceeC67f43ce89DfB3",
      "txHash": "0x79888d485e58cf6912909380f095b30133903394745cf974fcf5387cd12c20de",
      "kind": "transparent"
    },
    {
      "address": "0x0A73cEc02b62995542Fb36a8104EAE2B939c95b0",
      "txHash": "0x0833708b85d345b5529d6702f164fc9b0be6d0a844529d4afb8ead82150e7f99",
      "kind": "transparent"
    },
    {
      "address": "0xEB0c9D6a0A05aD3d4ae1895E7f6694981037e7Fe",
      "txHash": "0xd00acae78609ee598bd9bddf5f5842404ff1ef14d69b9438bb23070260242735",
      "kind": "transparent"
    },
    {
      "address": "0x55905D29fbc9D25EDA1eA7c6fc245039CBF4BA00",
      "txHash": "0x9a617f0e26cfa5c33f9cdf845a3ea56a29717f8708da88c480f6a4e181099ba0",
      "kind": "transparent"
    },
    {
      "address": "0x819dE3a4Bbb40B4C85180dFB67cD2e66e10d25a6",
      "txHash": "0xf627003e753784ae5524a273b7762edf2d7cc89adf42921fd471e8ead1264ecf",
      "kind": "transparent"
    },
    {
      "address": "0x33fB2b28E9d3e455FA1dF908291845768cB3CA6b",
      "txHash": "0x641b6295cbbbd11473da8d0b84c3a13231d926eec03772ee59d6dd88e4844c04",
      "kind": "transparent"
    },
    {
      "address": "0x94281088844D906C09d23136ec86fC7533Fc4c37",
      "txHash": "0xfec3ba81d028c124e0cf965901ff100a0ab993a7d79b44b6adade6e0bf5f8841",
      "kind": "transparent"
    },
    {
      "address": "0x6E1e1B716D5082438ad996174DA8f94B897a5b7F",
      "txHash": "0x245a3af003470423d18d6c4a07389db31586694f50e6677d10bde5f823c7bce0",
      "kind": "transparent"
    },
    {
      "address": "0x887d5920B5a9EE5425eBb2a69737547241f05932",
      "txHash": "0xf4119e018420bfcba3384adb03a9b25115059b5463e3f5205972256f4c66aa48",
      "kind": "transparent"
    },
    {
      "address": "0x139326B2C0D6357C2b0Ad46d4b72037f9d795Fa9",
      "txHash": "0xde9e722269314b4a6a14aea94f0d597c8fb59151eb4c92a7087f79122ae5bdcf",
      "kind": "transparent"
    },
    {
      "address": "0xaf9DBCeC1fe98326e937e33e3D226E11366FC60C",
      "txHash": "0x11fc2b3261c754e9eb3acc1e78f59a6b7520820130131fa24d8e3a270f039aca",
      "kind": "transparent"
    },
    {
      "address": "0x8888cd309577B4FF231a46fa864dC14e09F01a72",
      "txHash": "0x09326a5244034128ac445ae252809d84ac04586a66302fb0f75bba9ee7ebbb74",
      "kind": "transparent"
    },
    {
      "address": "0x449ebB1823A022975bFcb9BE0E8dA5dEc643aff3",
      "txHash": "0x2734cda5ca6bd755c4e217d11bba21a64470849fabc55b6968619d85ff7d2a8e",
      "kind": "transparent"
    },
    {
      "address": "0x21ce01D5611BaD8212b894D7F73Bc036fB85F183",
      "txHash": "0x23da5febd39106fd2ff26399abe6660906e1d1d7fe8c62b4f9f78477979762d3",
      "kind": "transparent"
    },
    {
      "address": "0x15A6f1B2E746832f9Ac438C64341697f7792AE2a",
      "txHash": "0x9ee5fdb203d0852faa724d4deb23f988fb65df0b2d99031d29663512d2ed3236",
      "kind": "transparent"
    },
    {
      "address": "0xcFd7363403760CEb319720F6e95E4ECb3667AFc8",
      "txHash": "0x38043bd260706bffddb71c59163b88e9cfc95564f6961918c97588c11df0b476",
      "kind": "transparent"
    },
    {
      "address": "0xa4A2d01767CAe48fd19345Ebfe3D0a2313945484",
      "txHash": "0x417693057bbdd44a234ca56e66ad92f20ac4260a65cb5c891a1700c37dca6bd9",
      "kind": "transparent"
    },
    {
      "address": "0xe89C98984C102815F12554dce6d790812a7c3282",
      "txHash": "0x072595a7f600c5bb21bd9d45e3e6567bda7f2735f66ab89aa3af7b8c63deb8a0",
      "kind": "transparent"
    },
    {
      "address": "0x3bA7683e2F51Ba412D5b5C574464fD3cd9757d36",
      "txHash": "0xb3f0997272072995dcb006365d81c1663afa97e471e7c45401397660311026a7",
      "kind": "transparent"
    },
    {
      "address": "0x6A2820C325AcA4be2A515540652c16E8670F6f09",
      "txHash": "0x2b878d712ea223c52c69e71ae53173810f49eee3541f06bd1dfcf2d6864263fd",
      "kind": "transparent"
    },
    {
      "address": "0x821c3DB85E89Ab3454c5604C4AEF55107C4c7f7F",
      "txHash": "0x480c5871ec74e118cff43f5b6e0df80653ec87b964a1603caf7ea8e124a8a1f6",
      "kind": "transparent"
    },
    {
      "address": "0xbE6E62102D2E775E0F97CaFdC03D229EDf3d7381",
      "txHash": "0x275b2b2ae02dabcb1595f8c9d8de8b2f17f14d0e953c29c67515c17cace32ffc",
      "kind": "transparent"
    },
    {
      "address": "0x5bd3D1c17A9B0f56929544cB3A4d6f91F193c623",
      "txHash": "0xf21174071975a1eaf173ab0f2c249bb0fd4cd4a938ef6b5dd6bb7d519d5b4fde",
      "kind": "transparent"
    },
    {
      "address": "0x6Cc141f3C34b74e3C5E04FfC97F5719e1474ca46",
      "txHash": "0xcec1443287343e5989f0d21c0df2a2b16d0766077683239b6e8f5701453027ca",
      "kind": "transparent"
    },
    {
      "address": "0x1FaB9181dFE1319ec3a688a032E7e6213E589121",
      "txHash": "0x641c3746543d11661b4e5c70955275dd8e466935abecd46fdbc2a4b80e1f86e9",
      "kind": "transparent"
    },
    {
      "address": "0x92D547051C1915FBBEDce2401b1Dfd58941cdcA8",
      "txHash": "0x50880aa272e62f26f04595048bef83b2f836f6b9373c15cf3aca8c7caf1db6c2",
      "kind": "transparent"
    },
    {
      "address": "0x7a972E9dE934e4811509d8c4Ef3BA1cf60467481",
      "txHash": "0x196113345563625d99839bd6690923840d31b9d7a1be03e76e64b878f424588d",
      "kind": "transparent"
    },
    {
      "address": "0x486B575d104ed46b0e81f89a3A58116788d054Fd",
      "txHash": "0x1f9ad0c1b88a77208db9aca05d699e8020507d8e69dad054ace597b012eab916",
      "kind": "transparent"
    },
    {
      "address": "0x5ab8fc48E00feCD56b7C4afe17ab551a8C115c93",
      "txHash": "0x048f7090e3c7b45c6299e44ff6ef89f4b5868463a8555a7af4ecee2657d7df12",
      "kind": "transparent"
    },
    {
      "address": "0x8E2b70a7BE2B66366f926f28d8877A126143Caf7",
      "txHash": "0xa7a4bee44a21a61bcc548438371a5558c51bb78e319c778da6ebfb3db40fc220",
      "kind": "transparent"
    },
    {
      "address": "0x6d616e61F48c475474b23482A8a9c1C6bED426Ad",
      "txHash": "0xdfcc956100b78ae9f7f5b8437384a6d51483a70cd258cad6e19c5790b73633f7",
      "kind": "transparent"
    },
    {
      "address": "0x1697e139edAf4910f084D8e0D8f05F638E783E36",
      "txHash": "0x9566616693f345f23796cf38a214a8dca481a9cacab8c868543ef4c2da043663",
      "kind": "transparent"
    },
    {
      "address": "0x9bd0bbd2FC4a0A2D729F8285C04bF77080Db50aC",
      "txHash": "0x87344af63620109f06d15574441db7e70512276e309d0b60f8688d1101e2f8a7",
      "kind": "transparent"
    },
    {
      "address": "0x6D509eecf99D02E4F97a504e539c83Fa67f291a4",
      "txHash": "0x583c5d1b9747c8d5021b68cd10bcb4a14d768fc1d6ae8539bff5c609c8a360a3",
      "kind": "transparent"
    },
    {
      "address": "0xd7a9C09AccF1d551621B9D957C38B79EaAe98D00",
      "txHash": "0xf1e75b76c65b110a6bae472c2f3c6423e96ef5ec366f848dad943b2c33e24153",
      "kind": "transparent"
    },
    {
      "address": "0xeDDF0a5B548aA2383081228b8C889Ce8013315c1",
      "txHash": "0x98de1dd6577f812bb0b8b4c817876dad19747bd6575b584c7ba0ceb1cc92e687",
      "kind": "transparent"
    },
    {
      "address": "0x123A1D8afF31CBAA1934A8f7bbdc4cFF0D6fCC33",
      "txHash": "0xef82a0de7d5b96be51f498c34f347e702d4500cf4b76b0519a51424c9e2f1a8b",
      "kind": "transparent"
    },
    {
      "address": "0xB0F587A43B53eFCA88CF9020921d9b49D7666B10",
      "txHash": "0xfeb37fcd694ffc232591f18efc6e19c4d4f8819525397fe873a001bd65e305f5",
      "kind": "transparent"
    },
    {
      "address": "0xDfF47420a477BE0f1D279E4c55E9F83AB91E188b",
      "txHash": "0x47e6bca1037cba38c691a12bcb51106f6ae012fcdd21dd822fcca538e89da8f6",
      "kind": "transparent"
    },
    {
      "address": "0x34370733d800B7E249E0d3BcE107Bd26259e930B",
      "txHash": "0x5df217ebf7f9d1b4135e03e300ffdb82d1ae584baf89872cbc5c39f533d9f415",
      "kind": "transparent"
    },
    {
      "address": "0xe070408Ca8c9365A009eF28795925E8EF735C0c1",
      "txHash": "0xf4b5783f39a351828b32ecd1e24248344d03380cd2de40f588c8c87afbfb9d9a",
      "kind": "transparent"
    },
    {
      "address": "0xA4AEf84a3fcCD2A76F00a5c26f51CAe66594955F",
      "txHash": "0x5bed81d960fc281f4df8b59d7e91ab49906b1fb9f7650f4e557066dfc68eee3d",
      "kind": "transparent"
    },
    {
      "address": "0x0d08EA893dFbF3a98528595A59d555f211B6506e",
      "txHash": "0xc6365d84ad56c2ff8df34fb841e15af8f72b8ec3188d414c699a079a6f51bed3",
      "kind": "transparent"
    },
    {
      "address": "0x5f039D00A6e233fd49332D7DC372DBB3aBb29937",
      "txHash": "0xbe01dfa24a55bcbb220829813e95721d5d125a316d8895aa6349770ed9035f06",
      "kind": "transparent"
    },
    {
      "address": "0x78D0630a0b75e41eB6410e660D456B2F86c09Ffb",
      "txHash": "0x327bb79303ef24a396a142dfc64a5876c5586933fe41bbb052847b428fbbdc6d",
      "kind": "transparent"
    },
    {
      "address": "0x00Bb5206f142C9240F3A3bC0ef84eA99ae023AdE",
      "txHash": "0x13a374476ee9eba96b93e578966b8b9426b846cd9b4e392c5a1a06d1137df792",
      "kind": "transparent"
    },
    {
      "address": "0x0C25FF33F0D7e6e674a0D0e3bBaC2F4A94D9CD76",
      "txHash": "0x14a75d90043d081cbb187654326654cf56e0d3a9253bbe8d89aed9b64df0b880",
      "kind": "transparent"
    },
    {
      "address": "0x6e636831a6488240E5Bd6cF2cdA7D5AC52aDB639",
      "txHash": "0xb21ffa94330475251867db96003400d80455565f35894d6af85e8fc9b9f9d210",
      "kind": "transparent"
    },
    {
      "address": "0xA7727A19cebe3A740618068Bc1A46324B5c166A2",
      "txHash": "0xa985eff4b4ffb19e77cf81a0b8139aeab035f9bfe6e51a80af5a296b80b6ea99",
      "kind": "transparent"
    },
    {
      "address": "0x3A3C268Ec19D16AFD7b445EA63BBd55412aABBeF",
      "txHash": "0x1a875bd760ce3b2e6b186e27c0bf752b3ecb52b1b61065ab1196e88b9237693e",
      "kind": "transparent"
    },
    {
      "address": "0xdAC434f1c6931de117e847dB0aC49B68088f5B8E",
      "txHash": "0x9d44574f1734cefa619eb1c68a5fd45319af807dc4d71bbccd6c3ce75bf5b69b",
      "kind": "transparent"
    },
    {
      "address": "0x3F6D50D1b9CBF112933467B2eBB706b9A8B68135",
      "txHash": "0x3595c6b4de2f7095fbf8a55399d8642d8c0d666869a6d111969b7286303ffb33",
      "kind": "transparent"
    },
    {
      "address": "0x58f5f5894197f87CdfEF76BA9E3d9C5069eA8317",
      "txHash": "0xf37730053f2307de1454fcd5c60f925b14338bdbcd68675db1fb5b17954b83fd",
      "kind": "transparent"
    },
    {
      "address": "0x0c1a3daa2e060A6cb64fdcbdcE025E58aE4932EA",
      "txHash": "0xbe2163f0cfbcece4f7d3e0ed01c28686963e19de781dee9fe2b47e24f6fda904",
      "kind": "transparent"
    },
    {
      "address": "0x1495BE246e9fC11b9bD6B371F9C3Cd4d0d916d4C",
      "txHash": "0x372133d2a4da7098aba2875379faeab11ed7e0c5f30ed8c603b6ac4fb7b3237e",
      "kind": "transparent"
    },
    {
      "address": "0x916E5d29e6aA2038cD76d9849c20367DC8F6a3ec",
      "txHash": "0x98d4c1d651c1f61d6b4b7dfa12d74e797bfc86c696d864a1fdae03658eb69168",
      "kind": "transparent"
    },
    {
      "address": "0x0f3b1a4F55DD03391Fef6483fBc934f529c5d0f3",
      "txHash": "0x6f22894763868138631d55106468cd248a56e3025cf64243d1b6cf67a34940ce",
      "kind": "transparent"
    },
    {
      "address": "0x050b9FfF0806b9EE52C18703Aea8Fe228EF962D7",
      "txHash": "0x21c8bfd17227ae85c967913b1ce7dc925c1c140224c36402b24b23894bd0b632",
      "kind": "transparent"
    },
    {
      "address": "0x65A740dCb40c37B5bF81194aB7b57f8fD4C47B96",
      "txHash": "0x6caea912b8021806c1530cd27983eb36f1206155310a609dc2ba20fcbc81516f",
      "kind": "transparent"
    },
    {
      "address": "0xD2F940e587D70D1f31567A300B227C53Fe1f64E9",
      "txHash": "0x19bcf04dd0fe1c3e52b636e145b1ae62ec74e314722a8c98a330013962daa7aa",
      "kind": "transparent"
    },
    {
      "address": "0x55DAa956Fb013b8327d3FE84158B1a41B7267fe4",
      "txHash": "0x6d121da1d53386fb11d53a7d0cf7e8f489bf0ae1b8bbe4255bad74c91209b9ad",
      "kind": "transparent"
    },
    {
      "address": "0x17af8c1bC8edAa1b660bb9e67B942e2aCb3791c9",
      "txHash": "0xa67a14ffe4baeed6e92a96e45b6fa4ccef31c3318d7b052efc5716e66cef8d80",
      "kind": "transparent"
    },
    {
      "address": "0x75423FB7F08a3c7a0168FD265A192269A0188519",
      "txHash": "0x54cce488cea65bcbea9bf3b1c3ff9341f4c7d7f8508502d16609094fcd0b6731",
      "kind": "transparent"
    },
    {
      "address": "0x9DEc5DFbA157EB8675003b851397Fd4659FE801B",
      "txHash": "0x9278d5be59b202e0d49b14ef76ee007564932ec48e3399531f272c43c66d952b",
      "kind": "transparent"
    },
    {
      "address": "0x946ecCaB39DD59C6C70f1304732CB0815b261186",
      "txHash": "0x3af59245ef475f99530802cd0ff4f126aaca2acc3b5210be94809ac3ee814604",
      "kind": "transparent"
    },
    {
      "address": "0x83E1b9253F87086543f0Efe6783a505684A69326",
      "txHash": "0xee86790f762c0e202cb3244a721ae431fae6d84095b6082d0c4b37dcfeaa6498",
      "kind": "transparent"
    },
    {
      "address": "0x6401238582Cdd6b51A4BE0ddc3319C16eDa8caB4",
      "txHash": "0x099fb092b802e640a03f226340fc3f99051c68246c9f224e7342103a8e6e3c60",
      "kind": "transparent"
    },
    {
      "address": "0xEFd0e0EB223a83FeE73d6b850dAb397Dbfd3aF78",
      "txHash": "0xf0c91681eac77150f4c819c497bdf69af620aa043e18a16b81513454323d41df",
      "kind": "transparent"
    },
    {
      "address": "0x0FbC614acEe54ac86A740CA325dA72aFCb2DDcD3",
      "txHash": "0x744e14811834bbaa75bbdfd52bec3b12723fb16ddf019dc86ad5b9fdd83487d7",
      "kind": "transparent"
    },
    {
      "address": "0x4E7331010e090582E7B48370e319434776851903",
      "txHash": "0xd578dda37cb5494d1bebda12d1e4a242b37fe0ed8da0dd6db82802614afff912",
      "kind": "transparent"
    },
    {
      "address": "0xBc8177af8A976581ba72C9a3e5a5Ab00382BEb3d",
      "txHash": "0xbacedee91280bbf1c2cf0800a95b7b97f8a871705f6aacb36f6ac77341afc161",
      "kind": "transparent"
    },
    {
      "address": "0x12A5332919a2Aaf56f11382dF5E6B1771AbFdCA5",
      "txHash": "0x3643f2e2637b18ca59a783cd0fc7a44bc84b42db4e1db89ccaa9182d8a9ab4ab",
      "kind": "transparent"
    },
    {
      "address": "0xD0Cb4F73aAd9B32a0F11BD2f88aC16C848A3D581",
      "txHash": "0xb4a46ba9e2da8c8fb2b4559eafebb220ec6853ab3c933390f3ef946207859a75",
      "kind": "transparent"
    },
    {
      "address": "0xB726Fc86fb621105789ebb1EE97b47eF8c7fC525",
      "txHash": "0x4853d272a41c8947876e3f58bee0a4959fe71cf4b48109bba6c976b34179473f",
      "kind": "transparent"
    },
    {
      "address": "0x60a457b97bF948716B5923E9d2824B676F8f8950",
      "txHash": "0xdbb8e7c4cc09fafca1f20e3eeac2f44d8d494a943ce6b8d921f28ad82aad4531",
      "kind": "transparent"
    },
    {
      "address": "0x7Bf81A4a2CdD8eB1FF30e551bd6F589f9eA2b773",
      "txHash": "0x6f1def1d484ac828897acb395926a0345b3fb0c8a5a25f25bd5e190159b001da",
      "kind": "transparent"
    },
    {
      "address": "0x6b00B1d85A548cF6Ab9D857187D2cb0A91CDd10b",
      "txHash": "0x0e98e2e63d4ea59726009b26cad168384235763fef62f2391ebcc79b47099f38",
      "kind": "transparent"
    },
    {
      "address": "0x650478D71633C6A8C5731EBf179b8b4b5534DC25",
      "txHash": "0xfbbaf220485bf0855d78e4cd4fddd67e232d7da8e6bbba8971ac4d2ee0123380",
      "kind": "transparent"
    },
    {
      "address": "0xAB157f43429CCBD8d090eBD194A1AFD94C2F6922",
      "txHash": "0x9bbd597feeeaacafa6121d59841bb464cee07c80862eb7892f3c06fa01f996e2",
      "kind": "transparent"
    },
    {
      "address": "0xcFB09AC6968ccAdc0fFe22127447dEBfD68f0F71",
      "txHash": "0x6db525f1db27e6522e37f59a0163da1f678dc5d8f819ae46eccb46217e4423b4",
      "kind": "transparent"
    },
    {
      "address": "0x0AFF184e347975D83c755cc4b8b2aee12fE28686",
      "txHash": "0x4f311e14d846742dac2e613e930669485fa6c9a969c9d1def4bdb87a5455e051",
      "kind": "transparent"
    },
    {
      "address": "0x84dEa2ADC1ADceF2ff5493Fa2C629Cd0FCe0EFB3",
      "txHash": "0xf2bda7408184fb7305df6925904e8b71d0c1100b67678f8d7b8edd728dd3d845",
      "kind": "transparent"
    },
    {
      "address": "0xb8c8d0cCB796e23082E147dDcF933Db31880e5Ae",
      "txHash": "0x526a5142d502b0ae7d5e04fea23c045a21a91269694095d982d713959a74b61d",
      "kind": "transparent"
    },
    {
      "address": "0xedEE44120c71c95034eb15d2aE48C231E55eC388",
      "txHash": "0x9c5b5deab3a082f7962ef3274e6b80563d28e5a23cddbc7eb2f5c835d35ae28f",
      "kind": "transparent"
    },
    {
      "address": "0x1C28D76878734b39B429fcF4d22D6D7491F8DbDe",
      "txHash": "0x8603faf1bb79bf2b2fd6e608300aef90d475994ae05d77f7ae98bca6b469d7c9",
      "kind": "transparent"
    },
    {
      "address": "0xbcB5719DF9f7765248033a6EE0ACa72317309AfE",
      "txHash": "0x4c4f3a658a83893ba43d9b5ba7029288bc5a2f05f1eece74258317425912f96f",
      "kind": "transparent"
    },
    {
      "address": "0x8371E61D7F2FfA1048147A9FE2F08246dD879B74",
      "txHash": "0x0b1f09b71218bacf969295c7a468466ff621bbf46916971df85ce643e6bd5a10",
      "kind": "transparent"
    },
    {
      "address": "0x57a2062469Cc94721E3ef9b300f06fc77f985bbB",
      "txHash": "0x3154eabcc969637c50f27e884c8a3070caa587ed4a1111a9dbe7e3d03043b345",
      "kind": "transparent"
    },
    {
      "address": "0x7B0f828827a818C579fB9f02d67a2126aB3fa339",
      "txHash": "0x4b41f7bb228af6e5ad5ea732c1fbee4609bcb1ae01c156b13fa8d97e3d5f1614",
      "kind": "transparent"
    },
    {
      "address": "0x54DcA9c6BB82a097D10576d83580d39bAe2a0c67",
      "txHash": "0xc102deb40f3120409629b6a2f3778f806f558ad3fb6ac78936c939714925fa69",
      "kind": "transparent"
    },
    {
      "address": "0x67ecacD309dF912E734feE580ACece7812C3E6e9",
      "txHash": "0xd9608ebf0935d53ae218dac1a3d6d66841ec6a1227ed88e690a0e2d30ec4b608",
      "kind": "transparent"
    },
    {
      "address": "0xBf91bCa843C4485a759Eeff7F4174594Faf39c83",
      "txHash": "0x9254686154987e3619662a3863844822d32298e3e937c4d7e57f49039fef0e0d",
      "kind": "transparent"
    },
    {
      "address": "0xB1E0ffDc85dB41aac35D97A740B6Fd0a5980886e",
      "txHash": "0x07f1603da73433d01984ba6fd615c2d59d8b3387ee24ddc56599b3feef80df61",
      "kind": "transparent"
    },
    {
      "address": "0x159bB64A3A0216A805Ff38a6d29429ebee6Fdbc0",
      "txHash": "0xe2d44be5d642d15f93b1b3529031fa806a29982049d0c8c86dbc48b71ccc4eaf",
      "kind": "transparent"
    },
    {
      "address": "0xbF7e1986331ceDC83Ac183C19Db75aE24Da7F9A2",
      "txHash": "0xfd288dd40e77a2407c8f65219ccfc7e12e981d2adaa53c2cebb840daecc539c0",
      "kind": "transparent"
    },
    {
      "address": "0xc109ABBa79Ea93cB2Caf9Dc58176A02E4A7C0a28",
      "txHash": "0x0e7c66d630a603ea8b1144c78c1a96ddaf521cae0910cb95a060e776f6685f9a",
      "kind": "transparent"
    },
    {
      "address": "0x67a1C133606cb013F4Ba7eC309f7D1563c8505F1",
      "txHash": "0xeeec9cce07b9bb2599a319012d023d6c60e497a20c6fb2b3c429131e5b25d14a",
      "kind": "transparent"
    },
    {
      "address": "0xA669D20E22655AfDD3882a39b8e4217CA47BC2b0",
      "txHash": "0x124042a49da3f172236989e57420653fd624d85c8601b3873f729e610f9b480e",
      "kind": "transparent"
    },
    {
      "address": "0x0832Ab8b10d74F672C88384e07aC4191a0118a17",
      "txHash": "0x9f9051a548b7796ad51147c58d1e27c1d779c7f8e1198e94102922b845e37839",
      "kind": "transparent"
    },
    {
      "address": "0x1117d6305785EAD80634a82F528C5fD403B5997e",
      "txHash": "0xf2a1dbf9c06435a09490b4a6d79d37fca5b69db242e5373fdf3794441c041a7c",
      "kind": "transparent"
    },
    {
      "address": "0xeEB0426f025F65670107534230b3F6f59c483e18",
      "txHash": "0xe6cc38bebe1e06ebba1734b848d6cb0d72fedcfeb8615f5a57f627d0407929ff",
      "kind": "transparent"
    },
    {
      "address": "0x13c0A4d4f2De07B1573b141fe208f3d1B66263A6",
      "txHash": "0xa0f00641ae4dff1038c38f9a296fb6fd83f7b16b46c803d902e2bdafa789e5ec",
      "kind": "transparent"
    },
    {
      "address": "0x2E00bAAA5583a6B34A852917F7f958C82cE50598",
      "txHash": "0x1abda7ae953df1278e2fc8ed0ca4bf2a474430d1e17ed72e42b2d69aff0be857",
      "kind": "transparent"
    },
    {
      "address": "0x394530A3aD30447122f320634A3FD3e5c5C0c16C",
      "txHash": "0x5bcc36a7c7f234a9a4ffba4d77466c469220d78ab6334edf4b40c44bfcede211",
      "kind": "transparent"
    },
    {
      "address": "0x2271b12D3014b15C9816948986Ba333f1cdBD450",
      "txHash": "0xd3b0fec137e5bccdb83fdeffa48d00836499c1a7d6126272be8799ca30a9434b",
      "kind": "transparent"
    },
    {
      "address": "0x002870C451B7AAF62014E2A726c9D9B9D219b295",
      "txHash": "0xc284c485ed3fbfe4d92c15c7685ac9d5e49069f6ae14f51f4eb838361e9e176b",
      "kind": "transparent"
    },
    {
      "address": "0x01B1d649F2D555AF8557eC9f21f76fcf3b99309E",
      "txHash": "0x2d64ec6bdcff022eabd22dcf64e185685d67e76d9b737f6f9e22953451bb33ce",
      "kind": "transparent"
    },
    {
      "address": "0x5C08A12B9d674E7E2AD73cc7aB914331fd391f3f",
      "txHash": "0xcc4decb3329568e5ab69da16f6de304fe6d6c9149338c23e80fce89c5b5b6697",
      "kind": "transparent"
    },
    {
      "address": "0x033e98191e310d71e6947F4f223285fd73642741",
      "txHash": "0x850c2705e88b1ae6df06b705baf736518f2a50e4b9edbe3a7fa831edc41ecf77",
      "kind": "transparent"
    },
    {
      "address": "0xF53CfbD2738F0200b43B2f0cd21e9F79F2ba016e",
      "txHash": "0x98cff8da0f0e9e5246f89f00c6ab7fc06751217e3f348c0d7ef437a8c3f1a567",
      "kind": "transparent"
    },
    {
      "address": "0xCDf78300a7DD35B999e6fE2d25441415Eb12Da2C",
      "txHash": "0xe7eaeb9f32bf8860028163ef2123b7decdcf09d6461c5440cda84c9457bb8a70",
      "kind": "transparent"
    },
    {
      "address": "0x32C26E4De2Dc2cB0Fed3a11f33f6DC686B14EE99",
      "txHash": "0xae5f561220c9f1682ed66325b46de0c680bae3e4647efa592f3ee37d2dc9f8f5",
      "kind": "transparent"
    },
    {
      "address": "0x92698aa447abA29369a61A44E54699311a2Fc9F3",
      "txHash": "0x4524a19adaf683be3fda6b2014e3c76a245689bd768e1c481f5a64e6b9da5fb1",
      "kind": "transparent"
    },
    {
      "address": "0xf1CFeA381c111cB03A008680A9696fE4cABa1Ea3",
      "txHash": "0xd5c74c5c313826519ebdc3050a5bf537fd696dc8eb6c502abdc77d0b8b7384fa",
      "kind": "transparent"
    },
    {
      "address": "0xA067b7334966CF268C89cBa206a154580Da4a98D",
      "txHash": "0xfc475e9dc2da0ff2789394af6eb1a86b6afb26d545edcf1915cfb9aed603105e",
      "kind": "transparent"
    },
    {
      "address": "0x6c04dDA7509F96B1e70915De95a7729c65263f29",
      "txHash": "0x5b03a9671f2466172748b97f8e9e78078ff5a8e940a388565e628d6c7f81332b",
      "kind": "transparent"
    },
    {
      "address": "0x044d4f978E0E2c32E6436632D1Ad7B4304Bc2F57",
      "txHash": "0xf7076429b8ae80600abbdbc0d87b5c112819c0078daf3f916f4b424b36c4d6c1",
      "kind": "transparent"
    },
    {
      "address": "0x4071408315A9351Ef34a568ef765492ED33fF597",
      "txHash": "0x730ab0b2203aac5610043e588cdea53c5de1dd56898d106529ea674481cfd94e",
      "kind": "transparent"
    },
    {
      "address": "0xBe6F559Fec475ea80Cf302743a3FADC4480bC5AA",
      "txHash": "0x8ec6006b514f3281140ea2800d68deee55dfc08d2da9c20a971807f6340c0bdc",
      "kind": "transparent"
    },
    {
      "address": "0xbc9aa7fcd4Fd6306A9A6943369390A1C8a6da3c7",
      "txHash": "0x880a838d4957016091b17319a62b1cd3d9255a83cef470011ec0d8eb0311698b",
      "kind": "transparent"
    },
    {
      "address": "0x2aEE2263E3ad2f1aF3E508534A82F12938bC7f13",
      "txHash": "0x326299f3e0d79d7902582b1bc60e699687adf62f125ad07e74e3df8d6423c891",
      "kind": "transparent"
    },
    {
      "address": "0x3FFb5Bf0d06b8EfC86a78871b9c1a03C9807c98b",
      "txHash": "0x72a357adaa39477b214789865d153af6755605f984da9bee6b6d21b360846716",
      "kind": "transparent"
    },
    {
      "address": "0xaeb3700CCBF7732bA6020c3042113B35b1A84f1F",
      "txHash": "0x3da2c175ab4eefb47cc174c8b762dc04e8a951d5ba30a70b11103dab1da9ddb0",
      "kind": "transparent"
    },
    {
      "address": "0xE41B688BF08e0d7bAE15055dB700B44673ef8C43",
      "txHash": "0x58c8bad1450b8d1a3abfeb46b8aee5dbd3444b1639b2a133aba32d80a08595c4",
      "kind": "transparent"
    },
    {
      "address": "0x62397a48d552c2e302F56631C128950CcC6834dC",
      "txHash": "0x3f378fc1887382d0e0ae20937fcedec3c33ac38dd3a2fb198457dd9872be567e",
      "kind": "transparent"
    },
    {
      "address": "0x67821b3F5A4DCfe3b86b0758920C3544B0C4D407",
      "txHash": "0x359a882b9397c225ffce61d69ae62407a9abf4d9156479131028533c30ed8c34",
      "kind": "transparent"
    },
    {
      "address": "0x39520518f41d3461eD8f2dd34dbcAbc45bf4A8F9",
      "txHash": "0xd0fc27be2592d5369c39d8f8d650faaeb7269ce10ad02f7c95100ad2e337925e",
      "kind": "transparent"
    },
    {
      "address": "0xf90763fF6389f241f8ae90D734EE6fd6DAA5bDC4",
      "txHash": "0xf1e71ac420d507bd28e2a4e0fe4e579dbfbbae2b7625f4ad7ebbbb6a3c91bccc",
      "kind": "transparent"
    },
    {
      "address": "0xaf173455292c605cEaFED23c69054ECA24eA44AB",
      "txHash": "0xdab68a911295b12bbf191dc4d9cf5b024ec8f2f6f8bc41b60a0b10f7070d7c38",
      "kind": "transparent"
    },
    {
      "address": "0x21b184F9C1a7e4B5c2352f884fd19f83A9773BA9",
      "txHash": "0x358b891a0f45f563bfa2adc56325b1bc369ba4ea066ac59607524645751b049f",
      "kind": "transparent"
    },
    {
      "address": "0x9695921470A8680Bc5ee1bec9C10BB4695870a55",
      "txHash": "0xc85461d6686b64e9103941fa730de23425b3b1c218fea56d65687a35638fc95c",
      "kind": "transparent"
    },
    {
      "address": "0x8935D30FE72DADFAAD86BEd25dFB7057dbb70AC1",
      "txHash": "0xd2727db32267b81cdae65708336d7f2f4ecb58ce41df966644e1912d7dfcd7f4",
      "kind": "transparent"
    },
    {
      "address": "0xB54E24Da2123a117EbBBd4fa2855B4df1B48C6e0",
      "txHash": "0x49607d9a5a104d9894c113b154a99519f976731e64c4e6cacade08f8bda4388c",
      "kind": "transparent"
    },
    {
      "address": "0x69aFA8ea0e1f0fCA5854f7e29609a001baa0A95E",
      "txHash": "0xbafa528255767c1496993c1615781e62ac02e2bd0aafc2c80b2e28c84b8aa723",
      "kind": "transparent"
    },
    {
      "address": "0x5fa5861a1d3a4d45F2434B6C0d30482AFa384f5B",
      "txHash": "0xb49c3243e1871c930b7e5c17fa70df778d79a6bfb80e230629e8b6410622e3ad",
      "kind": "transparent"
    },
    {
      "address": "0x54206D55Bf76428095F03C847C0EAf0aF219f5a7",
      "txHash": "0x9e2d8acc04ac05e5079503ee8144da39c827fd1258c9b5ead9c10412befe85f4",
      "kind": "transparent"
    },
    {
      "address": "0xF99d58ad8F17a8be6719Fb4Dbe6769978ec6a090",
      "txHash": "0x54e622c774e2e28e3b6240363564ae2f5f4d0e316dfa89ff26dc2ec18596ceeb",
      "kind": "transparent"
    }
  ],
  "impls": {
    "dbcec57128abb13bbdcb9e986e2c6b18b5c7dabb0b4fd04d418387a416a0fac7": {
      "address": "0xE7D5EFf478ACF5F87A28ffe15A265Cf261EEf5e5",
      "txHash": "0x290caed7fd13fa35c216679b93116d7f470837272ee96bb70f4ca71d583ae078",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81a7b14bdf59edcfbda5901a3672a21508a9e49744ce9d3a943c701adbc11119": {
      "address": "0x89f8e1187Cb59131A7014eDB67F3b344CC719bae",
      "txHash": "0x484af2a6d36f27ddfe746ef8c5602e5b6a71a67948a9fd0401e0e6a03c0b0d1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "priceSet",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BasicPriceOracle.sol:10"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "currentPrice_",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BasicPriceOracle.sol:11"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "65b2a46079ef8109e7e39c72e039842b148f5a41839725c857d5dfc227c3f04e": {
      "address": "0xbE51171e3D903145451ce502C906319BF09C161b",
      "txHash": "0x80dafd2b4d96a7e92ca827adfebdc2f304e077e688fd1c21a3b1ad44db9a5075",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)42048_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:86"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)42053_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:87"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:91"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:94"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:96"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:98"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:99"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:101"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:103"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:104"
          },
          {
            "contract": "Characters",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:112"
          },
          {
            "contract": "Characters",
            "label": "garrison",
            "type": "t_contract(Garrison)15161",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:115"
          },
          {
            "contract": "Characters",
            "label": "secondsPerStamina",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:130"
          },
          {
            "contract": "Characters",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\characters.sol:132"
          }
        ],
        "types": {
          "t_array(t_struct(Character)42048_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)42048_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)42053_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)42053_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(Garrison)15161": {
            "label": "contract Garrison"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0a424974c020a493bd75b01517b4020508bfd244368b557348e3871a5ac2f8c4": {
      "address": "0xbA428Fcde56D079ae4835f98888A049359ab0C9f",
      "txHash": "0x0285c68fd23384a706ddba463db69fe67138a37f7c20a4df0f35e94db9f273b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)58965_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:93"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)58977_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)58972_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:97"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:102"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:108"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:110"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:113"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:118"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:120"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:122"
          },
          {
            "contract": "Weapons",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\weapons.sol:124"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)58965_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)58965_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)58977_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)58977_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)58972_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)58972_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b83d7069a35bd52a91c7a074499ee5663eb524b4d0563b9616634a2daed7d82d": {
      "address": "0x0d1d6798654a4202842cf5641C6B0587B371F3b3",
      "txHash": "0x48fe0e07c0ff009af1eb3f3f19b7a23ad37dd33cab89e5840b696677ec812fee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:75"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:76"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:77"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47806",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:78"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)47825",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:79"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:160"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:167"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:169"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:170"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:172"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:174"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:176"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:178"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:179"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:181"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:182"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:184"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:185"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:187"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)47842",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:191"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:193"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:196"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)1764",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:198"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)44899_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:207"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:221"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)44918_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:222"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:224"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:227"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:228"
          },
          {
            "contract": "CryptoBlades",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)39250",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:230"
          },
          {
            "contract": "CryptoBlades",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\cryptoblades.sol:231"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)47806": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)47825": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)47842": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)1764": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)44899_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)44899_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)44918_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)44918_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_contract(SpecialWeaponsManager)39250": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4c0f0e6fc7c8f3ba20b0a543fd7b958478140b107aaa5486d95ac18cb6c24547": {
      "address": "0x73320316Bd29e6F3aadD9ADe3BdBc255D75Df2f0",
      "txHash": "0xe1e336c0be5c3cbfffbfdac530e64401efa786d2c86d82b6a4182f9f0ea00193",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "MultiAccessUpgradeable",
            "label": "access",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\multiAccessUpgradeable.sol:8"
          },
          {
            "contract": "Raid",
            "label": "completed",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:17"
          },
          {
            "contract": "Raid",
            "label": "expectedFinishTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:18"
          },
          {
            "contract": "Raid",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:20"
          },
          {
            "contract": "Raid",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:21"
          },
          {
            "contract": "Raid",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:22"
          },
          {
            "contract": "Raid",
            "label": "raiders",
            "type": "t_array(t_struct(Raider)49319_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:30"
          },
          {
            "contract": "Raid",
            "label": "participation",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid.sol:31"
          },
          {
            "contract": "RaidBasic",
            "label": "staminaDrain",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:14"
          },
          {
            "contract": "RaidBasic",
            "label": "weaponDrops",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:15"
          },
          {
            "contract": "RaidBasic",
            "label": "bounty",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:16"
          },
          {
            "contract": "RaidBasic",
            "label": "bossTrait",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:17"
          },
          {
            "contract": "RaidBasic",
            "label": "totalPower",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raidBasic.sol:19"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_array(t_struct(Raider)49319_storage)dyn_storage": {
            "label": "struct Raid.Raider[]"
          },
          "t_struct(Raider)49319_storage": {
            "label": "struct Raid.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_uint256"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "95f758510d4ac618cf362308573cb1756ade60b330a7de18b3e763a1822c2eb4": {
      "address": "0x5C63d859649A75AC9106358342ceA6f5189b6881",
      "txHash": "0x1011439708fee2f412fe3ebf1d8666b97ed92b6b5749ad7fbc9cfbc2641e8b6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTMarket",
            "label": "skillToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:86"
          },
          {
            "contract": "NFTMarket",
            "label": "taxRecipient",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:87"
          },
          {
            "contract": "NFTMarket",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)18814_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:90"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenIDs",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:92"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenTypes",
            "type": "t_struct(AddressSet)69220_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:94"
          },
          {
            "contract": "NFTMarket",
            "label": "isTokenBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:97"
          },
          {
            "contract": "NFTMarket",
            "label": "isUserBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:99"
          },
          {
            "contract": "NFTMarket",
            "label": "tax",
            "type": "t_mapping(t_address,t_int128)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:102"
          },
          {
            "contract": "NFTMarket",
            "label": "freeTax",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:104"
          },
          {
            "contract": "NFTMarket",
            "label": "defaultTax",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:105"
          },
          {
            "contract": "NFTMarket",
            "label": "allowedTokenTypes",
            "type": "t_struct(AddressSet)69220_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:108"
          },
          {
            "contract": "NFTMarket",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:110"
          },
          {
            "contract": "NFTMarket",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:111"
          },
          {
            "contract": "NFTMarket",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47806",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:113"
          },
          {
            "contract": "NFTMarket",
            "label": "addFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:114"
          },
          {
            "contract": "NFTMarket",
            "label": "changeFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:115"
          },
          {
            "contract": "NFTMarket",
            "label": "nftTargetBuyers",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:118"
          },
          {
            "contract": "NFTMarket",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2998",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTMarket.sol:120"
          }
        ],
        "types": {
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)18814_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarket.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)18814_storage)": {
            "label": "mapping(uint256 => struct NFTMarket.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)18814_storage": {
            "label": "struct NFTMarket.Listing",
            "members": [
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)69341_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)69220_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_int128)": {
            "label": "mapping(address => int128)"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(IPriceOracle)47806": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(BurningManager)2998": {
            "label": "contract BurningManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1009c3de4d06ffe5f5d5ee4601d916e4c0d6414ddf0237c12a167957eee273e": {
      "address": "0xc63ec83ca04E7A304194653ff99F4E86D670E31D",
      "txHash": "0x77aed52cde2b6694d4eb19eb3aa009e5afd6aeb6839fa9588d813a7bd47d979d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WaxBridge",
            "label": "latestWaxChainBlockNumberProcessed",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:27"
          },
          {
            "contract": "WaxBridge",
            "label": "totalOwedBnb",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:28"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitPerPeriod",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:29"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:30"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawableBnb",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:31"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawnBnbDuringPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WaxBridge.sol:32"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "498e2a0b3757e479509d6aec2c2acfebb9b98f681a684fb0bae2c243d547bfca": {
      "address": "0x884256A42eD98d9C9242680B926203B0Ce47C9dd",
      "txHash": "0x5fac82e62b5a0571e7f280b2c72ac4d11ea6033d96cbe733ed47b22eea08b291",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Promos",
            "label": "bits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Promos.sol:27"
          },
          {
            "contract": "Promos",
            "label": "firstCharacterPromoInGameOnlyFundsGivenInUsd",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Promos.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "268db9337bea2a1c8016a8dc7a1341a46e15b2ecb98c2e975ea11f7f43bb050b": {
      "address": "0x9af3faF2425FAf665614770eD1bA00A8Ece1cA6b",
      "txHash": "0x394825b88c98bd1259b01bc763826764c61f14ef0a91e02a1cc93f604da04d9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\staking\\StakingRewardsUpgradeable.sol:50"
          },
          {
            "contract": "SkillStakingRewardsUpgradeable",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)39250",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SkillStakingRewardsUpgradeable.sol:12"
          }
        ],
        "types": {
          "t_contract(SpecialWeaponsManager)39250": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed4ca7c8e59553a198610e7d92dc71bb8e635e2155c62c0d1c71d5887925992a": {
      "address": "0x21abb0663449Dfeeb53b0E35013f68BE0F0e5785",
      "txHash": "0x8084a6428c6e0736d00edcaea92cb7265a739c17c9220df04236228927f3b16b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:45"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)47825",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:48"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)54333",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:50"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:51"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:55"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:56"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:58"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:60"
          },
          {
            "contract": "Blacksmith",
            "label": "cbkLandSale",
            "type": "t_contract(CBKLandSale)7377",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:61"
          },
          {
            "contract": "Blacksmith",
            "label": "landPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:63"
          },
          {
            "contract": "Blacksmith",
            "label": "currencies",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:64"
          },
          {
            "contract": "Blacksmith",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Blacksmith.sol:66"
          }
        ],
        "types": {
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)47825": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)54333": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CBKLandSale)7377": {
            "label": "contract CBKLandSale"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f758871d900d68e362f025b56f6aef6d5677bdda98f6acf25f9e76f5eb66aede": {
      "address": "0x951eF558D58D5B03e974CEae584701F0A4d5856f",
      "txHash": "0x775522e04380c8e848dcde5f2eaeb583ca593e07b8ae69656b9f78666726e1a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)52363_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)52368_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:75"
          },
          {
            "contract": "Shields",
            "label": "nftVars",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\shields.sol:77"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)52363_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)52363_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)52368_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)52368_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5a71bda464eb057b97363461c14823213429810d25dc96133f5e156ebdd93ef3": {
      "address": "0xe64032C8f7d86FA48195EDFd02fB8219bf082420",
      "txHash": "0x604d113f309d51a765ba6e42be133898934aa9219d11cce8c80223617877ed5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:8"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:10"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:11"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2a94e5476f89e4df095abfa2bf42ee5b09e40238514bc7546cdbe17e48519f3": {
      "address": "0x90CEdeDBC0EF842f50b9D150768b6bDCB8203a10",
      "txHash": "0x69f37904f483195571f075e05bfd21666fac0d4e367c6eb168be9e49ddd59192",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:8"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:10"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:11"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4322f7eb3a20b3806459092652155a844a07307cdea3231b7e644e90eaf0cc7": {
      "address": "0xf7b40FD001e96a0Fed90d24207eaE00207EC701e",
      "txHash": "0xb79367ce18686f875b36cb0b417121bfd81faeade56b69c9ba198f71dd0dbe4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterFireTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterFireTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e1d8625a92e88e37048891a31e12336c43f4f7fade4fb791c74336d4a81b1d0": {
      "address": "0xD2237AafBc710Eb439785364C3ED2D8dCb51FFaB",
      "txHash": "0xe825dbd33d26ede2da97aa7fe5ec5965a1e7c8decb871ae0bc22081094b5d078",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterEarthTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterEarthTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e65f4b8daed7de019900bac4443cf47cde2f31aac348f3705c2542ad0e49541": {
      "address": "0x0E5Fab6360BFEbc383bBCc70e52c018142700271",
      "txHash": "0x9cb7eb1940d55a29f2b4f106ca5cea53f6237762a7063d945f68754fff1a63bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterWaterTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterWaterTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb3787187641ad8d28f7c96c64ed6b49b53bcaf28794b61f791de65f05114e62": {
      "address": "0x9b3c8B1f008D1Ee2a625f4592B75eaB1cf26318D",
      "txHash": "0xddf2772a295d72c714c89948a7938d57843581d057cf66f44877fa4e1ec87d1e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Consumables.sol:15"
          },
          {
            "contract": "CharacterLightningTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterLightningTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1199c84cbc69989a68ca094dbaec7dba05d2d521f54e003f96d16194126777d5": {
      "address": "0x16dCd7b6Bbb37c1C0B0b17E08F2C95692ceB45dB",
      "txHash": "0x58367c6b798b9be4624735cece22f6efa65b62715f745a18a89ee23860116a2b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "KeyLootbox",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\KeyLootbox.sol:14"
          },
          {
            "contract": "KeyLootbox",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\KeyLootbox.sol:16"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b9738c0efbe4c9a68c14345015cf7841a3560b4d6386102cb215c23d8f340726": {
      "address": "0x4E4602aA4a7E5d988e3dA92aFacEA9a87D075951",
      "txHash": "0xe29ab7af658bed2fdcc32e286866945ddcfa804d5ef9a9a0845730895b887204",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "RaidTrinket",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:24"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:26"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenEffect",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:27"
          },
          {
            "contract": "RaidTrinket",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\RaidTrinket.sol:29"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef866e30444112d8e6944502b95a58dd9faff31480b12ed8a3fd6108bbfc27e1": {
      "address": "0xec0674F9A1f7DC60E2b810B699b5354b756F84f5",
      "txHash": "0x0f57194ec8d8045004db2938fff836e35270939ce566433001426e4c44367240",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Junk",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\Junk.sol:23"
          },
          {
            "contract": "Junk",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\Junk.sol:25"
          },
          {
            "contract": "Junk",
            "label": "nextTokenID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\items\\Junk.sol:27"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a26e6628b3c3c80df4997b4c1688ee64a910e436f7f5be524d7434d4601d84c2": {
      "address": "0x48Eea6420648a7D0DF30cE6F859EE0c32F478b8E",
      "txHash": "0x342bfaa78d51bbdd2cfd2b06874451924c4b5253abba1ac1f532c96022833991",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:51"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:52"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:53"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:54"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:64"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:66"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:76"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)49556_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:77"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:78"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:79"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:83"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\raid1.sol:85"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)49556_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)49556_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)49556_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8569567bec2ffba20ca3a832081619a67f9ca884c879097748bd54679990eb16": {
      "address": "0xa12a1c807dabE13742482A5315a152E34b4BeC6D",
      "txHash": "0xf69c1b1a21d899b410ce071998b91c01101fb9ad064683386cf54ba53991c89e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:20"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponCosmetics.sol:8"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a89b2e0d698c0976302d6ee58efdef40db33c07d81248c34c5f0ae00e5136d5e": {
      "address": "0x367dca135D9251296613dC7A5c6A6fbAB6C4BE69",
      "txHash": "0x6482ecfe1aeef77563be2fe43be8fca96adbdebf53c65f2b7d619929c796ec2b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Cosmetics.sol:20"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterCosmetics.sol:8"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharacterCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c7740de8df3626c5e4a28f5b6faf2c49f8c5f3d4d3a3720cf776400a4491a86": {
      "address": "0x74405DdB715c3A0cd3cad53881eBBAe3734Cf7e0",
      "txHash": "0xd6b073e593816241814119a90a921dc0fd3c23a082544533a829ae40861d1b4e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTStorage",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:28"
          },
          {
            "contract": "NFTStorage",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:29"
          },
          {
            "contract": "NFTStorage",
            "label": "nftMarket",
            "type": "t_contract(NFTMarket)21315",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:30"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)41884",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:31"
          },
          {
            "contract": "NFTStorage",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)8573",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:32"
          },
          {
            "contract": "NFTStorage",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)41692",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:33"
          },
          {
            "contract": "NFTStorage",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)8141",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:34"
          },
          {
            "contract": "NFTStorage",
            "label": "storageEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:36"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItems",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)69341_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:38"
          },
          {
            "contract": "NFTStorage",
            "label": "storedItemsOwners",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:40"
          },
          {
            "contract": "NFTStorage",
            "label": "allStoredItems",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:42"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIds",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:44"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:69"
          },
          {
            "contract": "NFTStorage",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:70"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:71"
          },
          {
            "contract": "NFTStorage",
            "label": "_chainPrefix",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:72"
          },
          {
            "contract": "NFTStorage",
            "label": "_botEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:73"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOuts",
            "type": "t_mapping(t_uint256,t_struct(TransferOut)21424_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:74"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:78"
          },
          {
            "contract": "NFTStorage",
            "label": "transferOutOfNFTs",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:82"
          },
          {
            "contract": "NFTStorage",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)69220_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:85"
          },
          {
            "contract": "NFTStorage",
            "label": "nftTypeToAddress",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:95"
          },
          {
            "contract": "NFTStorage",
            "label": "receivedNFTs",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:115"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:117"
          },
          {
            "contract": "NFTStorage",
            "label": "transferIns",
            "type": "t_mapping(t_uint256,t_struct(TransferIn)21490_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:118"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInsMeta",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:119"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInSeeds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:120"
          },
          {
            "contract": "NFTStorage",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:123"
          },
          {
            "contract": "NFTStorage",
            "label": "_transferInsLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:126"
          },
          {
            "contract": "NFTStorage",
            "label": "_withdrawFromBridgeLog",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:128"
          },
          {
            "contract": "NFTStorage",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:130"
          },
          {
            "contract": "NFTStorage",
            "label": "_bridgeFee",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:131"
          },
          {
            "contract": "NFTStorage",
            "label": "nftChainIdsToMintId",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:134"
          },
          {
            "contract": "NFTStorage",
            "label": "transferInChainId",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:136"
          },
          {
            "contract": "NFTStorage",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:138"
          },
          {
            "contract": "NFTStorage",
            "label": "_localChainPrefix",
            "type": "t_string_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:140"
          },
          {
            "contract": "NFTStorage",
            "label": "shields",
            "type": "t_contract(Shields)54333",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:142"
          },
          {
            "contract": "NFTStorage",
            "label": "nftProxyContract",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:146"
          },
          {
            "contract": "NFTStorage",
            "label": "bot2p0Log",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:148"
          },
          {
            "contract": "NFTStorage",
            "label": "nftAllowedChains",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:150"
          },
          {
            "contract": "NFTStorage",
            "label": "targetChainAllowedNFTs",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:152"
          },
          {
            "contract": "NFTStorage",
            "label": "isNftBridged",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:154"
          },
          {
            "contract": "NFTStorage",
            "label": "withdrawFromStorageNativeFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:155"
          },
          {
            "contract": "NFTStorage",
            "label": "requestBridgeNativeFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:156"
          },
          {
            "contract": "NFTStorage",
            "label": "giveawayGen2Enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\NFTStorage.sol:170"
          }
        ],
        "types": {
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(NFTMarket)21315": {
            "label": "contract NFTMarket"
          },
          "t_contract(WeaponRenameTagConsumables)41884": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_contract(CharacterRenameTagConsumables)8573": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_contract(WeaponCosmetics)41692": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(CharacterCosmetics)8141": {
            "label": "contract CharacterCosmetics"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)69341_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UintSet)69341_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(address => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(TransferOut)21424_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferOut)"
          },
          "t_struct(TransferOut)21424_storage": {
            "label": "struct NFTStorage.TransferOut",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "requestBlock",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(AddressSet)69220_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_mapping(t_uint256,t_struct(TransferIn)21490_storage)": {
            "label": "mapping(uint256 => struct NFTStorage.TransferIn)"
          },
          "t_struct(TransferIn)21490_storage": {
            "label": "struct NFTStorage.TransferIn",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "nftType",
                "type": "t_uint8"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceId",
                "type": "t_uint256"
              },
              {
                "label": "rename",
                "type": "t_string_storage"
              },
              {
                "label": "arrivedAt",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateBlock",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
            "label": "mapping(address => mapping(string => uint256))"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(Shields)54333": {
            "label": "contract Shields"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76a697772c18d6442f84bc8f7f4c577b8c5c791896f3b0b3f595a5e4e98c7fb1": {
      "address": "0xD33522C7a42DB8E02e7773B457E58dD3f8bB3610",
      "txHash": "0x4daf82c4b19eecb1f947527627fb264e476ede7b97feaa9e33c468ba9b82e26d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)66411_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)65788_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLand",
            "label": "landMinted",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:28"
          },
          {
            "contract": "CBKLand",
            "label": "landData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:30"
          },
          {
            "contract": "CBKLand",
            "label": "landStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:32"
          },
          {
            "contract": "CBKLand",
            "label": "landBoolData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:35"
          },
          {
            "contract": "CBKLand",
            "label": "landAddressData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:38"
          },
          {
            "contract": "CBKLand",
            "label": "tierStrData",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLand.sol:41"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)66411_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)66411_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)65788_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)65470_storage"
              }
            ]
          },
          "t_struct(Map)65470_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)65462_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)65462_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)65462_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1c800f14ff52cd633c88588f7f4c2f52d59936f90048cd314be262ba4e34102": {
      "address": "0x1B0EAE28A4988E10bc435f828BcAB1A9D5a1c40B",
      "txHash": "0x43f13e5477a02b99e91417a317a1cd93ff2fcd9811dfb3c05c9dfd7a9ea82dcf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLandSale",
            "label": "cbkLand",
            "type": "t_contract(CBKLand)3730",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:13"
          },
          {
            "contract": "CBKLandSale",
            "label": "totalSales",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:45"
          },
          {
            "contract": "CBKLandSale",
            "label": "sales",
            "type": "t_mapping(t_uint256,t_struct(purchaseInfo)4219_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:46"
          },
          {
            "contract": "CBKLandSale",
            "label": "purchaseAddressMapping",
            "type": "t_mapping(t_address,t_struct(purchaseInfo)4219_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:47"
          },
          {
            "contract": "CBKLandSale",
            "label": "availableLand",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:48"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkZoneLandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:49"
          },
          {
            "contract": "CBKLandSale",
            "label": "t1LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:55"
          },
          {
            "contract": "CBKLandSale",
            "label": "t2LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:60"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksWithT2Land",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:61"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandSalePerChunk",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:63"
          },
          {
            "contract": "CBKLandSale",
            "label": "_allowedLandOffset",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:64"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT2LandSales",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:67"
          },
          {
            "contract": "CBKLandSale",
            "label": "t3LandsSold",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:71"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunkT3LandSoldTo",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:72"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunkIds",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:76"
          },
          {
            "contract": "CBKLandSale",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:78"
          },
          {
            "contract": "CBKLandSale",
            "label": "_reservedEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:79"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunks",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:81"
          },
          {
            "contract": "CBKLandSale",
            "label": "reservedChunksCounter",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:82"
          },
          {
            "contract": "CBKLandSale",
            "label": "chunksReservedFor",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:83"
          },
          {
            "contract": "CBKLandSale",
            "label": "resellerLandBudget",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:86"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:89"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLands",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:90"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandTier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:91"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandReseller",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:92"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandForPlayer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:93"
          },
          {
            "contract": "CBKLandSale",
            "label": "playerReservedLandClaimed",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:94"
          },
          {
            "contract": "CBKLandSale",
            "label": "takenT3Chunks",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandSale.sol:96"
          }
        ],
        "types": {
          "t_contract(CBKLand)3730": {
            "label": "contract CBKLand"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(purchaseInfo)4219_storage)": {
            "label": "mapping(uint256 => struct CBKLandSale.purchaseInfo)"
          },
          "t_struct(purchaseInfo)4219_storage": {
            "label": "struct CBKLandSale.purchaseInfo",
            "members": [
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "purchasedTier",
                "type": "t_uint256"
              },
              {
                "label": "stamp",
                "type": "t_uint256"
              },
              {
                "label": "free",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(purchaseInfo)4219_storage)": {
            "label": "mapping(address => struct CBKLandSale.purchaseInfo)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)69341_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "02a5586d519143013cb51631ee004dd1c4ba140fe8056d1f90401778b1efe895": {
      "address": "0x583ac3F463d7538D24d6792fB471f5b3ADBCd0F0",
      "txHash": "0x91d6fb37500ad41ddd273bb44c6c91e378c00980719da56a2b604a40f94a4fa8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Merchandise",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:30"
          },
          {
            "contract": "Merchandise",
            "label": "skillOracle",
            "type": "t_contract(IPriceOracle)47806",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:31"
          },
          {
            "contract": "Merchandise",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:33"
          },
          {
            "contract": "Merchandise",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:34"
          },
          {
            "contract": "Merchandise",
            "label": "itemPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:36"
          },
          {
            "contract": "Merchandise",
            "label": "nextOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:38"
          },
          {
            "contract": "Merchandise",
            "label": "lowestUnprocessedOrderID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:39"
          },
          {
            "contract": "Merchandise",
            "label": "orderBuyer",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:40"
          },
          {
            "contract": "Merchandise",
            "label": "orderPaidAmount",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:41"
          },
          {
            "contract": "Merchandise",
            "label": "orderBaskets",
            "type": "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:42"
          },
          {
            "contract": "Merchandise",
            "label": "orderData",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:43"
          },
          {
            "contract": "Merchandise",
            "label": "externalOrderId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Merchandise.sol:44"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)47806": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint32)dyn_storage)": {
            "label": "mapping(uint256 => uint32[])"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d5fae3bd346744f53de8234bf6a14f64350def32f5f67b697c4871e6986d7776": {
      "address": "0xC9a1298D1C7447dF19cDC831fC3b61D23e7931A6",
      "txHash": "0x0171d74c67b6d3a7ad822239434842deb97dac0b40654c33c513b519ea0f7594",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Treasury",
            "label": "multiplierUnit",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:21"
          },
          {
            "contract": "Treasury",
            "label": "partneredProjects",
            "type": "t_array(t_struct(PartnerProject)39570_storage)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:23"
          },
          {
            "contract": "Treasury",
            "label": "projectAddedBlockNumber",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:24"
          },
          {
            "contract": "Treasury",
            "label": "tokensClaimed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:25"
          },
          {
            "contract": "Treasury",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:26"
          },
          {
            "contract": "Treasury",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:40"
          },
          {
            "contract": "Treasury",
            "label": "projectDistributionTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:42"
          },
          {
            "contract": "Treasury",
            "label": "multiplierTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:43"
          },
          {
            "contract": "Treasury",
            "label": "defaultSlippage",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:44"
          },
          {
            "contract": "Treasury",
            "label": "projectLogo",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:45"
          },
          {
            "contract": "Treasury",
            "label": "projectDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:46"
          },
          {
            "contract": "Treasury",
            "label": "projectWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:47"
          },
          {
            "contract": "Treasury",
            "label": "projectNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:48"
          },
          {
            "contract": "Treasury",
            "label": "projectIsValor",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Treasury.sol:49"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(PartnerProject)39570_storage)dyn_storage": {
            "label": "struct Treasury.PartnerProject[]"
          },
          "t_struct(PartnerProject)39570_storage": {
            "label": "struct Treasury.PartnerProject",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenSupply",
                "type": "t_uint256"
              },
              {
                "label": "tokenPrice",
                "type": "t_uint256"
              },
              {
                "label": "isActive",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "83b01f3e4f244fbb40cf9fb593b7cee057f218917e9da2eadc7a30b90bdf0290": {
      "address": "0x464FE3823FF83aC2e304C1424FFe08DEA1e99702",
      "txHash": "0x721f6779accac7fa55658fad68723db52945ab4be362c836ba6f5f86cb3ef536",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Garrison",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:20"
          },
          {
            "contract": "Garrison",
            "label": "supportedTokenTypes",
            "type": "t_struct(AddressSet)69220_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:22"
          },
          {
            "contract": "Garrison",
            "label": "userGarrison",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:24"
          },
          {
            "contract": "Garrison",
            "label": "characterOwner",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:25"
          },
          {
            "contract": "Garrison",
            "label": "allCharactersInGarrison",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:26"
          },
          {
            "contract": "Garrison",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Garrison.sol:28"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_struct(AddressSet)69220_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UintSet)69341_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4303379807e1fd8a81861c337445ef21ddaee6cacd2d59f5d7fb4eb79d5ae68a": {
      "address": "0x5De84a7254d40f4326A96f93ddb85692AB1E65dc",
      "txHash": "0x5ca10edd304634eda8001dfb04cbe95c06c74c9fafb2bdf562a51abee63d80b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:45"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:46"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:47"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)54333",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)47825",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:53"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:55"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:57"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:59"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:61"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:63"
          },
          {
            "contract": "PvpArena",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:65"
          },
          {
            "contract": "PvpArena",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:67"
          },
          {
            "contract": "PvpArena",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:69"
          },
          {
            "contract": "PvpArena",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:71"
          },
          {
            "contract": "PvpArena",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:73"
          },
          {
            "contract": "PvpArena",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:75"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:77"
          },
          {
            "contract": "PvpArena",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:79"
          },
          {
            "contract": "PvpArena",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:81"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:83"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:85"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)24983_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:88"
          },
          {
            "contract": "PvpArena",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)24990_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:90"
          },
          {
            "contract": "PvpArena",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:92"
          },
          {
            "contract": "PvpArena",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:94"
          },
          {
            "contract": "PvpArena",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:96"
          },
          {
            "contract": "PvpArena",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:98"
          },
          {
            "contract": "PvpArena",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:100"
          },
          {
            "contract": "PvpArena",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:102"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:104"
          },
          {
            "contract": "PvpArena",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:106"
          },
          {
            "contract": "PvpArena",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:108"
          },
          {
            "contract": "PvpArena",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:110"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:112"
          },
          {
            "contract": "PvpArena",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:114"
          },
          {
            "contract": "PvpArena",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:116"
          },
          {
            "contract": "PvpArena",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:118"
          },
          {
            "contract": "PvpArena",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:119"
          },
          {
            "contract": "PvpArena",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:122"
          },
          {
            "contract": "PvpArena",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpArena.sol:123"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)54333": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)47825": {
            "label": "contract IRandoms"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)24983_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)24983_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)24990_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Match)"
          },
          "t_struct(Match)24990_storage": {
            "label": "struct PvpArena.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint8,t_struct(UintSet)69341_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b497afaffd0c08f17fa9f183e5459862b55f51671b38722f1f72d541275b00b1": {
      "address": "0x8769c2F2FE980333E38eE64E413cbf926D54eb00",
      "txHash": "0x48a34dce9eb9b9b308f588c63b47d328819c9b88b0fa33cd92e6e259e533fe50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SafeRandoms",
            "label": "currentSeedIndex",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:73"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedIndexBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:74"
          },
          {
            "contract": "SafeRandoms",
            "label": "firstRequestBlockNumber",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:75"
          },
          {
            "contract": "SafeRandoms",
            "label": "seedHashes",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:76"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:79"
          },
          {
            "contract": "SafeRandoms",
            "label": "singleSeedSalts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:80"
          },
          {
            "contract": "SafeRandoms",
            "label": "queuedSeedRequests",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:81"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionLimited",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:83"
          },
          {
            "contract": "SafeRandoms",
            "label": "publicResolutionBlocks",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:84"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitResolutionEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:86"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitRequestEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:87"
          },
          {
            "contract": "SafeRandoms",
            "label": "emitPopEvent",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SafeRandoms.sol:88"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => uint256[]))"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a21247b2cb1a40417c9798925dede2e5bf20d36b09e6161ac47c93615757cb82": {
      "address": "0xf51FF7777E7CE209dC0F399F9131CE4F97922300",
      "txHash": "0x474e40bf93b510d7668bb9bc8137a2186fdcfdca335c6dadad8f4da54e310883",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BurningManager",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:19"
          },
          {
            "contract": "BurningManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:20"
          },
          {
            "contract": "BurningManager",
            "label": "garrison",
            "type": "t_contract(Garrison)15161",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:21"
          },
          {
            "contract": "BurningManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:23"
          },
          {
            "contract": "BurningManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:26"
          },
          {
            "contract": "BurningManager",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:30"
          },
          {
            "contract": "BurningManager",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:31"
          },
          {
            "contract": "BurningManager",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:32"
          },
          {
            "contract": "BurningManager",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:36"
          },
          {
            "contract": "BurningManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47806",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:37"
          },
          {
            "contract": "BurningManager",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\BurningManager.sol:39"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Garrison)15161": {
            "label": "contract Garrison"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(IPriceOracle)47806": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3b91ee944d93ddca8706d0cb2c1c3d61b25c16abfa812948bd19e3e25600c2ac": {
      "address": "0xd18E05197Cb246f33F764b1afe771Ea9016580ab",
      "txHash": "0x7fca2c743dfefd0883efbe4cc29de0ce35e13fdc0351d83c9e18cf078f59f1d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerVault",
            "label": "nfts",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:21"
          },
          {
            "contract": "PartnerVault",
            "label": "currencies",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:22"
          },
          {
            "contract": "PartnerVault",
            "label": "shownNfts",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:23"
          },
          {
            "contract": "PartnerVault",
            "label": "shownQuestNfts",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(UintSet)69341_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PartnerVault.sol:24"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)69341_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(UintSet)69341_storage))": {
            "label": "mapping(address => mapping(uint256 => struct EnumerableSet.UintSet))"
          },
          "t_mapping(t_uint256,t_struct(UintSet)69341_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fb51b978741bd1d6f4a4347b38d11e46474f8a1ce29198ccd0b986ec9f3acc92": {
      "address": "0xc79AC21Ca07A496c3DD2f9a58f6CeE089949d534",
      "txHash": "0x02d3f5f008dca324308a73322309b1028faf95896d9942f57aac64ab986035cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SimpleQuests",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:41"
          },
          {
            "contract": "SimpleQuests",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:42"
          },
          {
            "contract": "SimpleQuests",
            "label": "junk",
            "type": "t_contract(Junk)48298",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:43"
          },
          {
            "contract": "SimpleQuests",
            "label": "trinket",
            "type": "t_contract(RaidTrinket)48915",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:44"
          },
          {
            "contract": "SimpleQuests",
            "label": "shields",
            "type": "t_contract(Shields)54333",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:45"
          },
          {
            "contract": "SimpleQuests",
            "label": "burningManager",
            "type": "t_contract(BurningManager)2998",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:46"
          },
          {
            "contract": "SimpleQuests",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)33482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:47"
          },
          {
            "contract": "SimpleQuests",
            "label": "partnerVault",
            "type": "t_contract(PartnerVault)24691",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:48"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextQuestID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:92"
          },
          {
            "contract": "SimpleQuests",
            "label": "nextRewardID",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:93"
          },
          {
            "contract": "SimpleQuests",
            "label": "questTemplates",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:95"
          },
          {
            "contract": "SimpleQuests",
            "label": "quests",
            "type": "t_mapping(t_uint256,t_struct(Quest)33933_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:96"
          },
          {
            "contract": "SimpleQuests",
            "label": "questSupplies",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:97"
          },
          {
            "contract": "SimpleQuests",
            "label": "questDeadlines",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:98"
          },
          {
            "contract": "SimpleQuests",
            "label": "questIndexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:99"
          },
          {
            "contract": "SimpleQuests",
            "label": "characterQuest",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:100"
          },
          {
            "contract": "SimpleQuests",
            "label": "tierChances",
            "type": "t_mapping(t_uint256,t_array(t_uint256)4_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:101"
          },
          {
            "contract": "SimpleQuests",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:102"
          },
          {
            "contract": "SimpleQuests",
            "label": "lastFreeSkipUsage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:103"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:104"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewardClaimed",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:105"
          },
          {
            "contract": "SimpleQuests",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)33946_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:106"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:107"
          },
          {
            "contract": "SimpleQuests",
            "label": "weeklyCompletionsGoal",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:108"
          },
          {
            "contract": "SimpleQuests",
            "label": "walletQuestProgress",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:109"
          },
          {
            "contract": "SimpleQuests",
            "label": "questCompletions",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SimpleQuests.sol:110"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(Junk)48298": {
            "label": "contract Junk"
          },
          "t_contract(RaidTrinket)48915": {
            "label": "contract RaidTrinket"
          },
          "t_contract(Shields)54333": {
            "label": "contract Shields"
          },
          "t_contract(BurningManager)2998": {
            "label": "contract BurningManager"
          },
          "t_contract(SafeRandoms)33482": {
            "label": "contract SafeRandoms"
          },
          "t_contract(PartnerVault)24691": {
            "label": "contract PartnerVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Quest)33933_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Quest)"
          },
          "t_struct(Quest)33933_storage": {
            "label": "struct SimpleQuests.Quest",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_enum(Rarity)33966"
              },
              {
                "label": "requirementType",
                "type": "t_enum(ItemType)33960"
              },
              {
                "label": "requirementRarity",
                "type": "t_uint256"
              },
              {
                "label": "requirementAmount",
                "type": "t_uint256"
              },
              {
                "label": "requirementExternalAddress",
                "type": "t_address"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)33960"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Rarity)33966": {
            "label": "enum SimpleQuests.Rarity",
            "members": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC",
              "LEGENDARY"
            ]
          },
          "t_enum(ItemType)33960": {
            "label": "enum SimpleQuests.ItemType",
            "members": [
              "NONE",
              "WEAPON",
              "JUNK",
              "DUST",
              "TRINKET",
              "SHIELD",
              "STAMINA",
              "SOUL",
              "RAID",
              "EXPERIENCE",
              "EXTERNAL",
              "EXTERNAL_HOLD",
              "CHARACTER"
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)4_storage)": {
            "label": "mapping(uint256 => uint256[4])"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Reward)33946_storage)": {
            "label": "mapping(uint256 => struct SimpleQuests.Reward)"
          },
          "t_struct(Reward)33946_storage": {
            "label": "struct SimpleQuests.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_enum(ItemType)33960"
              },
              {
                "label": "rewardRarity",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "rewardExternalAddress",
                "type": "t_address"
              },
              {
                "label": "reputationAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6545ce5a56a8a4ae04447e982e90b1bd25f7dd13512a35d3eaa959e4b4440319": {
      "address": "0xc2a1C7315959250e9aEc0CC0878329a39a27634A",
      "txHash": "0x1ce82bddad0fbd042ec76065ec6ee6f145e2d4902ea33c774b210cf9ef885658",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:20"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:21"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "safeRandoms",
            "type": "t_contract(SafeRandoms)33482",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:22"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:23"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)47806",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:24"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userEventShardSupply",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:34"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:35"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:44"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "eventInfo",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)37503_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:46"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userForgedAtEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:47"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userOrderOptionForEvent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:48"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkill",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:49"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userStakedSkillUpdatedTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:50"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "userSkillStakingShardsRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:51"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponArt",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:52"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponDetails",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:53"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponWebsite",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:54"
          },
          {
            "contract": "SpecialWeaponsManager",
            "label": "specialWeaponNote",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SpecialWeaponsManager.sol:55"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(SafeRandoms)33482": {
            "label": "contract SafeRandoms"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(IPriceOracle)47806": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)37503_storage)": {
            "label": "mapping(uint256 => struct SpecialWeaponsManager.EventInfo)"
          },
          "t_struct(EventInfo)37503_storage": {
            "label": "struct SpecialWeaponsManager.EventInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "weaponElement",
                "type": "t_uint8"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "orderedCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea94afb1402d83c6df33c45fbe8ac44b7a4e5a88813784c87ec5b104a356782d": {
      "address": "0xE8ed3504b8821Cc9E5F3C3B623bdc509594CD735",
      "txHash": "0xb434213caa511728b466cff78f02615a541f26dffacb6f262c49464ce4818aec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:13"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "specialWeaponsManager",
            "type": "t_contract(SpecialWeaponsManager)39250",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:16"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "userClaimedAtGiveaway",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:18"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "nftClaimedAtGiveaway",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:19"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayIdToAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:21"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayIdToSpecialEventId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:22"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "giveawayEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:23"
          },
          {
            "contract": "PartnerGiveaways",
            "label": "nextGiveawayId",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\partner-giveaways\\PartnerGiveaways.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(SpecialWeaponsManager)39250": {
            "label": "contract SpecialWeaponsManager"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b0b8440157c24eb3d763e22b0e1998921bd2da9505a502196dfa423f762dbcc": {
      "address": "0xA55C450fD1FD2790B918cE65B87AE060ee89c357",
      "txHash": "0x0e7aff5340a51b9dc88c1ddade25413b37c08976121e9b18c4084ab1b38a690d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:15"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weaponCosmetics",
            "type": "t_contract(WeaponCosmetics)41692",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:16"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "weaponRenameTagConsumables",
            "type": "t_contract(WeaponRenameTagConsumables)41884",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:17"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:18"
          },
          {
            "contract": "WeaponBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\WeaponBridgeProxyContract.sol:19"
          }
        ],
        "types": {
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(WeaponCosmetics)41692": {
            "label": "contract WeaponCosmetics"
          },
          "t_contract(WeaponRenameTagConsumables)41884": {
            "label": "contract WeaponRenameTagConsumables"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "704de1c5096200ec89e3a5819e41da5d803454aef045320b0a23487d5e8f292e": {
      "address": "0xC149ACAB5988Ab613AA4D0a2e6c3F8Dbd66FB470",
      "txHash": "0x45c2cdb40e2f7130ad66fd590350247372b4dc85b0d8a5a5f32ddcdf27a5ff58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:17"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characterCosmetics",
            "type": "t_contract(CharacterCosmetics)8141",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:18"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "characterRenameTagConsumables",
            "type": "t_contract(CharacterRenameTagConsumables)8573",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:19"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:20"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:21"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "giveawayGen2Enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:22"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:27"
          },
          {
            "contract": "CharactersBridgeProxyContract",
            "label": "equipmentManager",
            "type": "t_contract(EquipmentManager)14505",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CharactersBridgeProxyContract.sol:28"
          }
        ],
        "types": {
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(CharacterCosmetics)8141": {
            "label": "contract CharacterCosmetics"
          },
          "t_contract(CharacterRenameTagConsumables)8573": {
            "label": "contract CharacterRenameTagConsumables"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_contract(EquipmentManager)14505": {
            "label": "contract EquipmentManager"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f80c5afe088a939b19a95dac1c2202c479049e112c5b96cda0376d1ec9de0328": {
      "address": "0xDC7E7eEE2Bd4dDB5dd7796150205f81dEa05e69F",
      "txHash": "0x91b87d760d34635bfd0a45cc88c60c0366439a93963ef9bd5a63079347892b52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "shields",
            "type": "t_contract(Shields)54333",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:13"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:14"
          },
          {
            "contract": "ShieldBridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ShieldBridgeProxyContract.sol:15"
          }
        ],
        "types": {
          "t_contract(Shields)54333": {
            "label": "contract Shields"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3de7e79b8e5b62f548437fd2b9dda17aa5b206eb8758d21c764593678c145359": {
      "address": "0xbD4501115f515105A58BD17c083813808189A2d8",
      "txHash": "0x30e4a41f9a04c8a96c0152bfce982d62088e2288046eea968d4140ae6f27ec65",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpRankings",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:19"
          },
          {
            "contract": "PvpRankings",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:20"
          },
          {
            "contract": "PvpRankings",
            "label": "skillToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:21"
          },
          {
            "contract": "PvpRankings",
            "label": "pvpcore",
            "type": "t_contract(PvpCore)31411",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:22"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:25"
          },
          {
            "contract": "PvpRankings",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:27"
          },
          {
            "contract": "PvpRankings",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:29"
          },
          {
            "contract": "PvpRankings",
            "label": "_maxTopCharactersPerTier",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:31"
          },
          {
            "contract": "PvpRankings",
            "label": "currentRankedSeason",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:33"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonStartedAt",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:35"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonDuration",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:37"
          },
          {
            "contract": "PvpRankings",
            "label": "gameCofferTaxDue",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:39"
          },
          {
            "contract": "PvpRankings",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:41"
          },
          {
            "contract": "PvpRankings",
            "label": "seasonByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:44"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingPointsByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:46"
          },
          {
            "contract": "PvpRankings",
            "label": "rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:48"
          },
          {
            "contract": "PvpRankings",
            "label": "_rankingRewardsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:50"
          },
          {
            "contract": "PvpRankings",
            "label": "_topRankingCharactersByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:52"
          },
          {
            "contract": "PvpRankings",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpRankings.sol:54"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_contract(PvpCore)31411": {
            "label": "contract PvpCore"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "616d5d5dec3304e446f02e56b644bde66b394c9e9e9e4d030d7170de7947a501": {
      "address": "0x9D53f9aDAB3Daad75992c87a2CC8483E87e838f0",
      "txHash": "0x552f9d7014cc4b07ede99897bbcfb1b6f2892dd1a91f21bd3e728c84ff246803",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpCore",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:58"
          },
          {
            "contract": "PvpCore",
            "label": "characters",
            "type": "t_contract(Characters)44093",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:59"
          },
          {
            "contract": "PvpCore",
            "label": "weapons",
            "type": "t_contract(Weapons)62040",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:60"
          },
          {
            "contract": "PvpCore",
            "label": "shields",
            "type": "t_contract(Shields)54333",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:61"
          },
          {
            "contract": "PvpCore",
            "label": "skillToken",
            "type": "t_contract(IERC20)68296",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:62"
          },
          {
            "contract": "PvpCore",
            "label": "randoms",
            "type": "t_contract(IRandoms)47825",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:63"
          },
          {
            "contract": "PvpCore",
            "label": "pvprankings",
            "type": "t_contract(PvpRankings)32741",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:64"
          },
          {
            "contract": "PvpCore",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:67"
          },
          {
            "contract": "PvpCore",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:69"
          },
          {
            "contract": "PvpCore",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:71"
          },
          {
            "contract": "PvpCore",
            "label": "reRollFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:73"
          },
          {
            "contract": "PvpCore",
            "label": "withdrawFeePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:75"
          },
          {
            "contract": "PvpCore",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:77"
          },
          {
            "contract": "PvpCore",
            "label": "arenaAccess",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:79"
          },
          {
            "contract": "PvpCore",
            "label": "duelOffsetCost",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:81"
          },
          {
            "contract": "PvpCore",
            "label": "pvpBotAddress",
            "type": "t_address_payable",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:83"
          },
          {
            "contract": "PvpCore",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:85"
          },
          {
            "contract": "PvpCore",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)28651_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:88"
          },
          {
            "contract": "PvpCore",
            "label": "matchByFinder",
            "type": "t_mapping(t_uint256,t_struct(Match)28658_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:90"
          },
          {
            "contract": "PvpCore",
            "label": "isCharacterInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:92"
          },
          {
            "contract": "PvpCore",
            "label": "isWeaponInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:94"
          },
          {
            "contract": "PvpCore",
            "label": "isShieldInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:96"
          },
          {
            "contract": "PvpCore",
            "label": "isDefending",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:98"
          },
          {
            "contract": "PvpCore",
            "label": "finderByOpponent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:100"
          },
          {
            "contract": "PvpCore",
            "label": "previousTierByCharacter",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:102"
          },
          {
            "contract": "PvpCore",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:104"
          },
          {
            "contract": "PvpCore",
            "label": "_matchableCharactersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:106"
          },
          {
            "contract": "PvpCore",
            "label": "specialWeaponRerollTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:108"
          },
          {
            "contract": "PvpCore",
            "label": "_ownerByCharacter",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:110"
          },
          {
            "contract": "PvpCore",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\PvpCore.sol:115"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)44093": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)62040": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)54333": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)68296": {
            "label": "contract IERC20"
          },
          "t_contract(IRandoms)47825": {
            "label": "contract IRandoms"
          },
          "t_contract(PvpRankings)32741": {
            "label": "contract PvpRankings"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)28651_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Fighter)"
          },
          "t_struct(Fighter)28651_storage": {
            "label": "struct PvpCore.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Match)28658_storage)": {
            "label": "mapping(uint256 => struct PvpCore.Match)"
          },
          "t_struct(Match)28658_storage": {
            "label": "struct PvpCore.Match",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_mapping(t_uint8,t_struct(UintSet)69341_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1d35b2bc4443892a6afe67eda17da1cb07905f4ac3032466c9a2c3fa6230152": {
      "address": "0xF6D7fF35BB8b99f15efbaA2C47986B75f40d9F04",
      "txHash": "0x0b9735a03d8db68bd5d6d27bc8796cbb30514b5bb2833ba45e5474d5638e1d49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Launchpad",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:32"
          },
          {
            "contract": "Launchpad",
            "label": "tierStakingRequirement",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:43"
          },
          {
            "contract": "Launchpad",
            "label": "tierAllocationWeight",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:44"
          },
          {
            "contract": "Launchpad",
            "label": "launches",
            "type": "t_mapping(t_uint256,t_struct(Launch)15671_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:47"
          },
          {
            "contract": "Launchpad",
            "label": "launchTokenPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:48"
          },
          {
            "contract": "Launchpad",
            "label": "launchStartTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:49"
          },
          {
            "contract": "Launchpad",
            "label": "launchFundsToRaise",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:50"
          },
          {
            "contract": "Launchpad",
            "label": "launchBaseAllocation",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:51"
          },
          {
            "contract": "Launchpad",
            "label": "launchTotalRaised",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:52"
          },
          {
            "contract": "Launchpad",
            "label": "launchTokenAddress",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:53"
          },
          {
            "contract": "Launchpad",
            "label": "launchEligibleUsersSnapshot",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:56"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserStakedAmountSnapshot",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:57"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserInvestment",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:58"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:59"
          },
          {
            "contract": "Launchpad",
            "label": "launchTotalUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:60"
          },
          {
            "contract": "Launchpad",
            "label": "launchUserTotalUnclaimedSkillCommittedValue",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:61"
          },
          {
            "contract": "Launchpad",
            "label": "launchPeriodicVestingsPercentages",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:64"
          },
          {
            "contract": "Launchpad",
            "label": "launchPeriodicVestingsStartTimestamps",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:65"
          },
          {
            "contract": "Launchpad",
            "label": "launchLinearVestingsDurations",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:66"
          },
          {
            "contract": "Launchpad",
            "label": "launchLinearVestingsStartTimestamps",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:67"
          },
          {
            "contract": "Launchpad",
            "label": "userLinearVestingClaimTimestamp",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:68"
          },
          {
            "contract": "Launchpad",
            "label": "userClaimedVestingPortion",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_bool)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:69"
          },
          {
            "contract": "Launchpad",
            "label": "nextLaunchId",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:71"
          },
          {
            "contract": "Launchpad",
            "label": "skillPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:72"
          },
          {
            "contract": "Launchpad",
            "label": "_game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:74"
          },
          {
            "contract": "Launchpad",
            "label": "didUserCommitToLaunch",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Launchpad.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Launch)15671_storage)": {
            "label": "mapping(uint256 => struct Launchpad.Launch)"
          },
          "t_struct(Launch)15671_storage": {
            "label": "struct Launchpad.Launch",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "detailsJsonUri",
                "type": "t_string_storage"
              },
              {
                "label": "imageUrl",
                "type": "t_string_storage"
              },
              {
                "label": "fundingTokenAddress",
                "type": "t_address"
              },
              {
                "label": "phase",
                "type": "t_uint256"
              },
              {
                "label": "commitOnly",
                "type": "t_bool"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)69220_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => bool)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa94682caee0a36752eb9d520c4c85fa205ab3982b98d9807e12d1911df3345c": {
      "address": "0x526CA5154A0E64F5ac74c803363F768AFf5b0EdB",
      "txHash": "0xe38e357bfea1e13a9a9271a035add2ae23dc7b02a5d9a4af799501bb9706f32b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20BridgeEnabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:19"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeVars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:26"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeTokenVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:27"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transfersOutCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:58"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_bridgeEnabled",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:59"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOuts",
            "type": "t_mapping(t_uint256,t_struct(ERC20BridgeOutRequests)11222_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:60"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferInsCount",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:62"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferIns",
            "type": "t_mapping(t_uint256,t_struct(ERC20BridgeReceivedTokens)11235_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:63"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOutOfPlayers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:67"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferOutOfPlayersHistory",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:68"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_transferInOfPlayersHistory",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:69"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_supportedTokenTypes",
            "type": "t_struct(AddressSet)69220_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:72"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_supportedChains",
            "type": "t_struct(UintSet)69341_storage",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:73"
          },
          {
            "contract": "ERC20Bridge",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:75"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20ProxyContract",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:78"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_botLog",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:80"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_erc20AllowedChains",
            "type": "t_mapping(t_address,t_struct(UintSet)69341_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:82"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_targetChainAllowedERC20s",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:84"
          },
          {
            "contract": "ERC20Bridge",
            "label": "_whitelistedWallets",
            "type": "t_mapping(t_address,t_struct(AddressSet)69220_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\ERC20Bridge.sol:87"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_struct(ERC20BridgeOutRequests)11222_storage)": {
            "label": "mapping(uint256 => struct ERC20Bridge.ERC20BridgeOutRequests)"
          },
          "t_struct(ERC20BridgeOutRequests)11222_storage": {
            "label": "struct ERC20Bridge.ERC20BridgeOutRequests",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "erc20Address",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              },
              {
                "label": "status",
                "type": "t_uint8"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(ERC20BridgeReceivedTokens)11235_storage)": {
            "label": "mapping(uint256 => struct ERC20Bridge.ERC20BridgeReceivedTokens)"
          },
          "t_struct(ERC20BridgeReceivedTokens)11235_storage": {
            "label": "struct ERC20Bridge.ERC20BridgeReceivedTokens",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "erc20Address",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "sourceChain",
                "type": "t_uint256"
              },
              {
                "label": "sourceTransferId",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)69341_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)69341_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)69220_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_address,t_struct(AddressSet)69220_storage)": {
            "label": "mapping(address => struct EnumerableSet.AddressSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1cd70dd93678f2a05d4b144c32c83e77d0ba7fcafb64e50f32cce4aa124c8769": {
      "address": "0x2CB3A40B1636ec5EbDDb0068090665b81A75e8B5",
      "txHash": "0x7a3a209b437afd4953d0d377571648d60d6f3a3334363034754e55b37f002316",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SkillERC20BridgeProxyContract",
            "label": "promos",
            "type": "t_contract(Promos)24936",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SkillERC20BridgeProxyContract.sol:13"
          },
          {
            "contract": "SkillERC20BridgeProxyContract",
            "label": "enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\SkillERC20BridgeProxyContract.sol:14"
          }
        ],
        "types": {
          "t_contract(Promos)24936": {
            "label": "contract Promos"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c073cf49969951ee87e943d2dd1a3f76f645c2d2d6401dcdc408ba5b28b1752": {
      "address": "0x728dAf872B1078449f22862172AB7C9aBe21668F",
      "txHash": "0x5ff8c0e6584fef3d03da9421b6d22bd562ddad9d5f401990179bf3eee73cf342",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "TokensManager",
            "label": "game",
            "type": "t_contract(CryptoBlades)47717",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:14"
          },
          {
            "contract": "TokensManager",
            "label": "combatTokenChargePercent",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:16"
          },
          {
            "contract": "TokensManager",
            "label": "tokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:18"
          },
          {
            "contract": "TokensManager",
            "label": "skillTokenPrice",
            "type": "t_uint256",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:19"
          },
          {
            "contract": "TokensManager",
            "label": "offsetSlippage",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\TokensManager.sol:20"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)47717": {
            "label": "contract CryptoBlades"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5a20ade9ce757fca7b0e6090ae68b4ee7d4e5fafac7ee773ec75a3c6a86c4030": {
      "address": "0xa04e98a0459169Bb866FB8E1ED7BAe4DbB23Dc9A",
      "txHash": "0x648fbf7a60ca2160afaf46159f1d0a65b3f8093505caa8ce81d8e7ba3589636b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CBKLandBridgeProxyContract",
            "label": "_cbkLand",
            "type": "t_contract(CBKLand)3730",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandBridgeProxyContract.sol:13"
          },
          {
            "contract": "CBKLandBridgeProxyContract",
            "label": "_nftStorageAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandBridgeProxyContract.sol:14"
          },
          {
            "contract": "CBKLandBridgeProxyContract",
            "label": "_enabled",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\CBKLandBridgeProxyContract.sol:15"
          }
        ],
        "types": {
          "t_contract(CBKLand)3730": {
            "label": "contract CBKLand"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a73eed2a203ede622cd265dd875b09acb9c0f7502ed37e8444c493bc364786f0": {
      "address": "0x0B13f08A8FAB7a5E0079baaC337ABd800E65154f",
      "txHash": "0x6d78ca68c8d1476038a2f738aa317e4eff95a870dc5392eb6d04dd332ce02b7b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a814f1a72129a94bccd11dc0b80bc5b4f2dbb9f97ec4926613f8abce4ce1a58": {
      "address": "0x3079d1394757816Fe3f9f2364251Bc53f9Bdefff",
      "txHash": "0x047ee7cc07c3ae4e5b56e48ebb5e45252cbff8071566ef1db0e7686ed935baa4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Dex",
            "label": "tokenPairs",
            "type": "t_mapping(t_uint256,t_struct(TokenPair)9888_storage)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Dex.sol:28"
          },
          {
            "contract": "Dex",
            "label": "collectedFees",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Dex.sol:29"
          },
          {
            "contract": "Dex",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\Dex.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(TokenPair)9888_storage)": {
            "label": "mapping(uint256 => struct Dex.TokenPair)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(TokenPair)9888_storage": {
            "label": "struct Dex.TokenPair",
            "members": [
              {
                "label": "token1",
                "type": "t_address"
              },
              {
                "label": "token1Amount",
                "type": "t_uint256"
              },
              {
                "label": "token2",
                "type": "t_address"
              },
              {
                "label": "token2Amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "44844598262ca1394b9962b78f02bfc22093b3ee09a3b307e845089b07f28629": {
      "address": "0x0202FF84A71bDb77e8Dd24930e869Fe3585CD998",
      "txHash": "0x19b45e5a936d0637f44416df4fdfe1e626582a2fa827a161803296b34e323fb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "EquipmentManager",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:92"
          },
          {
            "contract": "EquipmentManager",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:93"
          },
          {
            "contract": "EquipmentManager",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:94"
          },
          {
            "contract": "EquipmentManager",
            "label": "nftVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:95"
          },
          {
            "contract": "EquipmentManager",
            "label": "equippedSlotAddress",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:98"
          },
          {
            "contract": "EquipmentManager",
            "label": "equippedSlotID",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:100"
          },
          {
            "contract": "EquipmentManager",
            "label": "calculatorProxy",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:103"
          },
          {
            "contract": "EquipmentManager",
            "label": "equippableInSlot",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)69220_storage))",
            "src": "..\\..\\..\\..\\E\\Project\\Riveted Technologies\\cryptoblades\\contracts\\EquipmentManager.sol:105"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
            "label": "mapping(uint256 => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AddressSet)69220_storage))": {
            "label": "mapping(address => mapping(uint256 => struct EnumerableSet.AddressSet))"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)69220_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)"
          },
          "t_struct(AddressSet)69220_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)68955_storage"
              }
            ]
          },
          "t_struct(Set)68955_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)62487_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)62487_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)66290_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)66290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)66025_storage"
              }
            ]
          },
          "t_struct(Set)66025_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
